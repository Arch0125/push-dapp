{"version":3,"sources":["../../contracts/src/config.js","../../contracts/src/addresses.js","../../contracts/src/index.js","config/Themization.js","primaries/SharedStyling.js","serviceWorker.js","hooks/useDeviceWidthCheck.ts","connectors.ts","primaries/BlockiesIdenticon.js","primaries/Profile.tsx","primaries/Bell.js","config/Globals.js","components/NavigationButton.js","contexts/NavigationContext.tsx","sections/Header.tsx","config/NavigationList.js","redux/slices/userJourneySlice.js","redux/slices/sendNotificationSlice.js","sections/Navigation.tsx","primaries/NotificationToast.js","primaries/DisplayNotice.js","assets/Device.js","components/MetaInfoDisplayer.js","config/channelTuts.js","segments/ChannelTutorial.js","helpers/EPNSCoreHelper.js","singletons/ChannelsDataStore.js","redux/slices/channelSlice.js","components/ViewChannelItem.js","components/Faucets.js","segments/ViewChannels.tsx","components/SearchFilter.jsx","redux/slices/notificationSlice.js","segments/Feedbox.tsx","pages/InboxPage.js","redux/slices/spamSlice.js","segments/spam.tsx","segments/Spambox.tsx","pages/SpamPage.js","components/AliasVerificationModal.js","components/ViewInfoItem.js","segments/Info.tsx","components/AddDelegateModal.js","components/RemoveDelegateModal.js","components/ActivateChannelModal.js","components/AddSubGraphIdModal.js","redux/slices/adminSlice.js","components/ChannelSettingsDropdown.tsx","components/ChannelSettings.jsx","components/DelegateInfo.js","components/ShowDelegates.jsx","components/ChannelDetails.js","redux/slices/channelCreationSlice.js","components/AliasSetup.js","components/ChangeNetwork.tsx","components/VerifyAlias.js","components/AliasProcessing.js","primaries/LoaderSpinner.tsx","components/ChannelLoading.tsx","segments/ChannelOwnerDashboard.tsx","singletons/UsersDataStore.js","redux/slices/contractSlice.js","pages/ViewChannelsPage.js","pages/ChannelDashboardPage.js","assets/icons/index.js","components/PreviewNotif.js","components/SendNotifications.tsx","pages/SendNotifs.tsx","pages/ReceiveNotifsPage.js","primaries/InfoTooltip.js","helpers/GaslessHelper.js","helpers/WithGasHelper.js","components/ViewDelegateeItem.js","pages/GovernancePage.tsx","singletons/YieldFarmingDataStore.js","components/PoolCard.js","pages/YieldFarmingPage.js","helpers/NFTHelper.js","components/ViewNFTItem.js","components/MyNFTs.js","components/ViewNFTsV2Item.js","components/MyNFTsV2.js","components/AllNFTs.js","components/AllNFTsV2.js","components/TransferNFT.js","components/TransferNFTv2.js","pages/NFTPage.js","pages/AirdropPage.tsx","pages/ComingSoonPage.tsx","pages/NotAvailablePage.tsx","pages/TutorialPage.tsx","pages/FAQPage.tsx","pages/SupportPage.jsx","pages/MasterInterfacePage.tsx","segments/userJourneySteps.tsx","components/InitState.tsx","App.tsx","hooks/useEagerConnect.ts","hooks/useInactiveListener.ts","hooks/useBrowserNotification.ts","redux/store.js","index.js","hooks/useToast.tsx","helpers/IpfsHelper.ts","api/index.js","firebase.js","helpers/UtilityHelper.ts","helpers/CaipHelper.ts","primaries/blockies.js","helpers/CryptoHelper.js","components/CreateChannel.js","components/StakingInfo.tsx","components/ChannelInfo.tsx","components/ProcessingInfo.js","helpers/AirdropHelper.js","primaries/ImageClipper.js","assets/Image.svg","components/UploadLogo.jsx"],"names":["config","apiUrl","toolingApiUrl","allowedNetworks","coreContractChain","mainnetCoreContractChain","coreRPC","mainnetCoreRPC","googleAnalyticsId","vapidKey","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","addresses","ceaErc20","epnscore","epnsEthComm","epnsPolyComm","dai","aDai","staking","yieldFarmPUSH","yieldFarmLP","epnsToken","epnsLPToken","rockstar","batchMintNFT","NFTRewards","distributor","uniswapV2Router02","WETHAddress","USDTAddress","rockstarV2","NFTRewardsV2","abis","erc20","erc20Abi","ownable","ownableAbi","epnscoreAbi","epnsCommAbi","epnsComm","daiAbi","epnsTokenAbi","stakingAbi","yieldFarming","yieldFarmingAbi","rockstarAbi","erc721","ec721Abi","MerkleDistributorAbi","UniswapV2Router02Abi","rockstarV2Abi","module","exports","themeLight","scheme","sectionBorderBg","headerBg","headerTagBg","headerTagFg","headerIconsBg","navMenuBg","leftBarLoaderBg","leftBarBg","leftBarButtonBg","leftBarHoverColor","leftBarFontColor","leftBarSocialBg","leftBarSocialIconBg","interfaceTopPadding","interfaceBorder","interfaceSkeleton","backgroundBG","backgroundBGLucid","mainBg","fontColor","fontColorSecondary","scrollBg","borderBg","viewChannelSearchBg","viewChannelSearchBorder","viewChannelSearchText","viewChannelSearchIcon","faucetBg","faucetBorder","faucetIcon","faucetHeader","viewChannelOuterBorder","viewChannelLink","viewChannelVerifiedBadge","viewChannelIconBorder","viewChannelSecondaryBG","viewChannelSecondaryIcon","viewChannelTutsTitleBg","viewChannelTutsButtonBg","dynamicTutsBg","dynamicTutsBgOverlay","dynamicTutsFontColor","dynamicTutsButtonBg","dynamicTutsButtonColor","dynamicTutsPrimaryColor","qnaBg","qnaBgBorder","yieldBg","pushPriceBg","greyText","color","channelBg","button","buttonColor","createColor","toastTextColor","toastBorderColor","themeDark","questionBg","buttonBd","Section","styled","section","props","align","direction","theme","gradient","margin","padding","overflow","Content","div","ItemBreak","Item","wrap","position","bg","flex","flexBasis","self","justify","minWidth","maxWidth","size","textAlign","filter","top","bottom","left","right","width","height","border","radius","zIndex","filterHover","hover","tabletAlign","tabletTextAlign","ItemH","H2","transform","arcRGB","css","h1","h2","weight","textTransform","spacing","family","H3","h3","Image","img","P","p","Para","Span","span","bRadius","pos","z","B","UL","ul","LI","li","Anchor","a","hoverBG","AnchorLink","RouterLink","Link","A","C","Button","FormSubmision","opacity","tabletRight","tabletLeft","tabletTop","tabletBottom","tabletTransform","tabletOpacity","form","Input","input","display","outline","visibility","maxllength","cursor","hand","focusBorder","TextField","textarea","Boolean","window","location","hostname","match","useDeviceWidthCheck","deviceWidth","useState","innerWidth","setWidth","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","require","SUPPORTED_CHAIN_IDS","envConfig","CORE_CHAIN_ID","CORE_RPC","RPC_URLS","injected","InjectedConnector","supportedChainIds","ledgerLiveConnector","LedgerHQFrameConnector","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","ledger","LedgerConnector","chainId","url","portis","TrezorConnector","manifestEmail","manifestAppUrl","PortisConnector","dAppId","networks","BlockiesIdenticon","seed","this","opts","bgcolor","scale","spotcolor","draw","prevProps","blockies","render","canvas","React","createElement","ref","Component","Container","Blocky","BlockyInner","Wallet","Profile","useWeb3React","error","account","library","address","setAddress","ens","setENS","ensFetched","setENSFetched","lookupAddress","then","name","catch","toLowerCase","substring","length","tadaaa","keyframes","BellImage","ringme","BellImageAbs","Badge","Bell","badgeCount","bellPressedCB","badge","setBadge","ring","setRing","setResetRinger","setTimeout","onClick","src","className","animationIn","animationOut","durationOut","LINKS","IOS_APP","ANDROID_APP","STORAGE","CONSTANTS","HEADER_HEIGHT","LEFT_BAR_WIDTH","NAVBAR_SECTIONS","PRIMARY","SECONDARY","MOBILE","NAVBAR_IDENTIFIERS","CREATE_CHANNEL","COMMUNICATE_TAB","DEVELOPER_TAB","ADJUSTMENTS","COLORS","GRADIENT_PRIMARY","GRADIENT_SECONDARY","GRADIENT_THIRD","TRANSPARENT","WHITE","DARK_WHITE","MID_WHITE","LIGHT_WHITE","SLIGHTER_GRAY","SLIGHT_GRAY","LIGHT_GRAY","MID_GRAY","DARK_GRAY","DARKER_GRAY","LIGHT_BLACK_TRANS","SEMI_MID_BLACK_TRANS","MID_BLACK_TRANS","DARK_BLACK_TRANS","BLACK","CONFIRM_GREEN","CONFIRM","WARNING","SUBLIME_RED","BADGE_RED","LIGHT_MAROON","LIGHTER_MAROON","InheritedSectionGroupIcon","active","InheritedSectionItemIcon","LeftBarPrimarySectionIcon","LeftBarPrimaryItemIcon","LeftBarSecondarySectionIcon","LeftBarSecondaryItemIcon","NavigationButton","SelectedIcon","RouteLogic","definedMargin","item","data","sectionID","useTheme","GLOBALS","isSection","isRoute","style","title","to","href","alt","target","newTab","disabled","hasItems","opened","NavigationContext","createContext","navigationSetup","setNavigationSetup","value","NavigationContextProvider","Provider","children","Logo","RightBarContainer","RightBarDesktop","RightBarMobile","NavMenuContainer","NavMenu","NavMenuInner","Notice","PrimaryTheme","ThirdTheme","Connection","phase","HeaderTag","Header","isDarkMode","darkModeToggle","context","useContext","deactivate","showLoginControls","setShowLoginControls","showNavBar","setShowNavBar","headerTag","setHeaderTag","useLocation","updateHeaderTag","Object","entries","navigation","forEach","key","pathname","includes","ethereum","networkVersion","request","method","params","hexlify","console","keys","map","dark","light","fg","checked","onChange","sunColor","NoEthereumProviderError","UnsupportedChainIdError","handleChangeNetwork","UserRejectedRequestErrorInjected","getErrorMessage","NavigationList","primary","communicate","uid","iconFactory","hasMenuLogic","drilldown","inbox","spam","channels","receiveNotifs","developer","createChannel","sendNotifs","SEND_NOTIFS","developerGuide","DEVELOPER_GUIDE","dynamicEnviroment","govern","governance","GOVERNANCE","governanceGuide","GOVERNANCE_GUIDE","incentives","yield","rockstars","airdrop","walkthrough","livewalkthrough","faq","quickGuide","secondary","latest","id","isMenuLogic","support","userJourneySlice","createSlice","initialState","run","stepIndex","welcomeNotifs","tutorialContinous","isCommunicateOpen","isDeveloperOpen","reducers","incrementStepIndex","state","decrementStepIndex","setRun","action","payload","setIndex","addNewWelcomeNotif","setWelcomeNotifsEmpty","setTutorialContinous","setCommunicateOpen","setDeveloperOpen","actions","SEND_NOTIFICATION_STATES","canSend","contractSlice","setCanSend","headerHeight","Primary","InheritedSection","PrimarySection","InheritedSectionGroup","InheritedSectionItem","SectionInnerGroupContainer","margintop","SectionInnerItemContainer","PrimarySectionGroup","PrimarySectionItem","Footer","Secondary","SecondarySection","Navigation","useSelector","admin","channelDetails","delegatees","aliasDetails","aliasAddr","aliasEthAddr","isAliasVerified","refresh","setRefresh","userJourney","dispatch","useDispatch","log","primaryList","returnTransformedList","navigationList","secondaryList","navList","returnNavList","assign","lists","identity","transformedList","count","identifier","toString","parent","hasOwnProperty","drillcount","drilldownModified","drillkey","drillvalue","drillIdentifier","topSection","mutateTransformedList","onlyDrilldown","transformedMenuList","activeParentId","activeDrilldownId","selectedSectionIsActionable","sectionkey","renderMainItems","items","fontSize","secondaryButton","index","renderChildItems","SectionGroup","SectionItem","rendered","onMouseOver","onMouseOut","NotificationWrapper","Toaster","NotificationToast","notification","clearToast","LoaderToast","notificationTitle","notificationBody","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","DisplayNotice","Device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","MetaContainer","MetaContent","bgColor","IconContainer","MetaInfoDisplay","externalIcon","internalIcon","text","onMouseEnter","onMouseLeave","channelsTuts","maintainer","userjourneyyoutube","userjourneyshort","article","coindesk","snapshot","makerdao","cvi","bancor","oasisapp","mover","poh","kyber","fabwelt","banklessfr","angle","mstable","aragon","cryptomanga","dydx","idle","tracerdao","armor","pods","ooki","pushgov","symphony","ethtracker","ethpricetracker","btctracker","aave","gro","flipside","thedefiant","TutsInner","ChannelTutorial","addr","loadTeaser","playTeaser","themes","showTuts","setShowTuts","channelTuts","getChannelTutItem","srcSet","open","MetaInfoDisplayer","EPNSCoreHelper","getGasPriceInDollars","axios","get","USD","ethPrice","getGasPrice","gasPriceInWei","gasPriceInEth","ethers","utils","formatEther","gasPriceInUsd","getOwnerInfo","contract","Promise","resolve","reject","response","err","getVotingPower","delegateeAddress","rawFormat","isAddress","endsWith","decimals","getCurrentVotes","votes","Number","Math","pow","votingPower","prettyVotingPower","getUserInfo","user","users","mappings","getChannelAddressFromID","channelID","channelById","getChannelInfo","channel","getChannelEvent","startBlock","updateBlock","filters","AddChannel","block","UpdateChannel","queryFilter","filteredResponse","args","toUtf8String","getJsonFileFromIdentity","ids","split","IPFSGateway","fetch","json","getAliasAddressFromChannelAddress","channelAddressInCaip","convertAddressToAddrCaip","getReq","aliasAddress","getChannelJsonFromChannelAddress","channelStartBlock","toNumber","channelUpdateBlock","hash","getChannelJsonFromUserAddress","getTotalNumberOfChannels","channelsCount","getChannelsMetaLatestToOldest","atIndex","numChannels","channelsInfo","channelArrays","i","assignedChannelID","push","promises","all","getTotalNumberOfUsers","usersCount","getPublicKey","getSubscribedStatus","isUserSubscribed","getTotalSubscribedChannels","subscribedCount","getFairShareOfUserAtBlock","userActivated","calcAllChannelsRatio","getPoolFunds","poolFunds","formatBigNumberToMetric","bignumber","convertToCurrency","metricFormatter","e","num","digits","si","symbol","toFixed","replace","ChannelEvents","ChannelsDataStore","channelsMeta","channelsJson","subscribers","subscribersCount","callbacks","epnsReadProvider","epnsCommReadProvider","onCoreNetwork","init","resetChannelsListeners","initChannelsListenersAsync","getChannelsCountAsync","removeAllListeners","listenForAddChannelAnyAsync","listenForAddChannelSelfAsync","listenForUpdateChannelAnyAsync","listenForUpdateChannelSelfAsync","listenForSubscribeAnyAsync","listenForSubscribeSelfAsync","listenForUnsubscribeAnyAsync","listenForUnsubscribeSelfAsync","on","ipfs","incrementChannelsCountAsync","callback","Subscribe","Unsubscribe","addCallbacks","callbackType","callbackID","removeCallbacks","incrementCount","getChannelFromApi","startIndex","pageCount","postReq","page","ceil","pageSize","query","op","alias_address","memberCount","isSubscriber","getEthAddressFromAlias","ethAddress","getChannelDetailsFromAddress","output","is_alias_verified","getChannelsMetaAsync","stopIndex","channelIDs","getChannelMetaAsync","channelMetaData","channelAddress","getChannelMetaViaAddressAsync","getChannelSubscribers","cachedSubscribers","blockchain","subs","message","getChannelSubscribersCount","cachedSubscribersCount","getChannelJsonAsync","getChannelJson","instance","channelSlice","CHANNNEL_DEACTIVATED_STATE","CHANNEL_BLOCKED_STATE","CHANNEL_ACTIVE_STATE","CHANNEL_BLACKLIST","channelsCache","setChannelMeta","incrementPage","cacheChannelInfo","meta","cacheSubscribe","channelIndex","findIndex","channelInfo","cacheUnsubscribe","FlexBox","SkeletonWrapper","atW","atH","borderRadius","marginBottom","marginRight","ChannelLogo","ChannelLogoOuter","ChannelLogoInner","ChannelLogoImg","ChannelInfo","ChannelTitle","ChannelTitleLink","VerifiedBy","VerifierIcon","VerifierName","ChannelDesc","ChannelDescLabel","label","ChannelMeta","ChannelMetaBox","Subscribers","LineBreak","ChannelActions","ChannelActionButton","ActionTitle","hideit","ActionLoader","SkeletonButton","SubscribeButton","UnsubscribeButton","OwnerButton","ToasterMsg","ViewChannelItem","isOwner","channelObjectProp","contracts","epnsWriteProvider","pushAdminAddress","ZERO_ADDRESS","canVerify","channelObject","setChannelObject","channelJson","setChannelJson","subscribed","setSubscribed","loading","setLoading","setMemberCount","isPushAdmin","setIsPushAdmin","isVerified","setIsVerified","isBlocked","setIsBlocked","vLoading","setvLoading","bLoading","setBLoading","txInProgress","setTxInProgress","canUnverify","setCanUnverify","verifierDetails","setVerifierDetails","copyText","setCopyText","isChannelBlacklisted","showToast","verifiedBy","fetchChannelJson","alert","channelState","EPNS_DOMAIN","verifyingContract","addressText","msg","subscribe","subscribeAction","notificationToast","toaster","subscribeToast","useToast","type","subscriber","getSigner","_signTypedData","signature","updateToast","cta","info","icon","sid","app","image","contractAddress","res","unsubscribeToast","unsubscribeAction","unsubscriber","finally","rel","slice","navigator","clipboard","writeText","el","document","body","appendChild","select","execCommand","removeChild","copyToClipboard","keyFound","isChannelTutorialized","blockChannel","tx","update","TYPE","INFO","ERROR","verifyChannel","unverifyChannel","wait","Faucets","faucetInfo","network","ADDRESS_REGEX","SearchBar","ContainerInfo","ViewChannelItems","CenteredContainerInfo","CenterContainer","ScrollItem","SearchContainer","ViewChannels","moreLoading","setMoreLoading","search","setSearch","channelToShow","setChannelToShow","loadingChannel","setLoadingChannel","trialCount","setTrialCount","channelsVisited","fetchInitialsChannelMeta","updateCurrentPage","loadMoreChannelMeta","newPageNumber","startingPoint","moreChannels","searchForChannel","payloadToSearchApiObj","t","timeout","clearTimeout","parsedChannel","test","placeholder","UtilityHelper","isMainnet","showWayPoint","onEnter","SearchFilter","startDate","setStartDate","endDate","setEndDate","applySearch","selectedOption","each","filterNotifications","options","notifications","uniqueOptions","Map","values","showFilter","setShowFilter","setSelectedOption","reset","TopBar","mbtm","Left","marginTop","marginLeft","loadFilter","FilterShow","fontWeight","Arrow","ToggleArrowImg","Buttons","ButtonFeed","SearchOptions","SectionSearch","mright","mtop","SelectChannel","SMultiSelect","valueRenderer","labelledBy","InputWrapper","mleft","RangeSection","TimeLabelDiv","SDateTimePicker","mttop","DateTimePicker","MultiSelect","Filter","Border","finishedFetching","toggler","toggleToggler","resetState","addPaginatedNotifications","addNewNotification","setFinishedFetching","updateTopNotifications","pp","notifs","sn","Notifs","Feedbox","toggle","limit","setLimit","allNotf","setNotif","filteredNotifications","setFilteredNotifications","setFilter","setLoadFilter","bgUpdateLoading","setBgUpdateLoading","NormalToast","Date","getTime","date","lowDate","highDate","filterNotif","notif","timestamp","matches","epoch","loadNotifications","EpnsAPI","dev","results","parsedResponse","fetchLatestNotifications","map1","map2","set","fetchAllNotif","handlePagination","onDecrypt","secret","CryptoHelper","decryptWithWalletRPCMethod","provider","decryptedSecret","decryptWithAES","decryptedBody","decryptedTitle","decryptedImage","decryptedCta","code","oneNotification","chainName","isSecret","decryptFn","InboxPage","ReactGA","pageview","enabledSecretNotif","setEnabledSecretNotif","encryption_key","fetchEncryptionKey","registerPubKey","encryptionPublicKey","Register","encryptionKey","txToast","objPayload","result","SUCCESS","enableSecretNotif","Items","SpamBox","currentTab","allNotif","nameToIdDev","nameToIdProd","parsedResponsePromise","elem","isSubscribedFn","fetchAliasAddress","userAddressInCaip","aliasAccount","ethAlias","fetchEthAddress","ethAccount","aliasEth","onSubscribeToChannel","nameToObj","subscribeFn","isSpam","FullWidth","Spambox","Interface","AliasVerificationModal","onClose","onSuccess","verificationStatus","aliasEthAccount","signer","modalRef","useRef","Contract","useClickAway","AppLink","AppLinkText","ViewInfoItem","process","dotenv","InfoBox","Info","AddDelegateModal","addDelegate","mainAdress","setMainAddress","background","required","StyledInput","CustomInput","Overlay","AliasModal","RemoveDelegateModal","removeDelegate","ActivateChannelModal","activateChannel","setChannelStakeFees","channelStakeFees","popupRef","PopupOverlay","PopupSlider","Slider","defaultValue","onChangeCommitted","_","aria-labelledby","valueLabelDisplay","step","marks","min","max","AddSubGraphIdModal","addSubGraphDetails","subGraphId","setSubGraphId","pollTime","setPollTime","addSubGraphDetailsSubmit","identityBytes","toUtf8Bytes","coreChannelAdmin","aliasAddrFromContract","setUserChannelDetails","setCoreChannelAdmin","setCanVerify","setDelegatees","setAliasAddress","setAliasAddressFromContract","setAliasEthAddress","setAliasVerified","ALLOWED_CORE_NETWORK","DropdownWrapper","ActiveChannelWrapper","inactive","isChannelDeactivated","ChannelSettings","epnsCommWriteProvider","showActivateChannelPopup","setShowActivateChannelPopup","poolContrib","setPoolContrib","addDelegateLoading","setAddDelegateLoading","addModalOpen","setAddModalOpen","addSubGraphIdOpen","setAddSubGraphIdOpen","addSubgraphDetailsLoading","setAddSubgraphDetailsLoading","removeDelegateLoading","setRemoveDelegateLoading","removeModalOpen","setRemoveModalOpen","isChannelBlocked","channelInactive","poolContribution","daiContract","fees","parseUnits","sendTransactionPromise","approve","waitForTransaction","reactivateChannel","deactivateChannel","amountToBeConverted","parseInt","pushValue","quote","PUSH","price","floor","walletAddress","justifyContent","val","addSubGraph","setActive","SettingsWrapper","Settings","ChannelSettingsDropdown","AiOutlineEllipsis","WalletInfoContent","isCopied","setIsCopied","delegateAddress","isMobile","flexDirection","paddingTop","ItemHere","WalletAddressDisplay","HoverWallet","DelegateInfo","isDelegate","setAddressText","clippedAddrs","delegate","RemoveButton","removeDelegateModalOpen","isHovered","setIsHovered","RemoveButtonUI","alignItems","DelegatesInfoHeader","DelegatesInfoLabel","ShowDelegates","isActiveDelegateDropdown","delegateToBeRemoved","setDelegateToBeRemoved","fetchDelegatees","channelAddressinCAIP","delegates","delegateeList","unshift","idx","borderTop","ChannelDetails","processingState","channelCreation","verifyingChannel","setVerifyingChannel","creationDate","setCreationDate","channelIsActive","channelIsDeactivated","bn","providers","JsonRpcProvider","getBlock","moment","format","ChannelDetailsWrapper","SectionTop","ImageSection","Details","ChannelName","VerifyImage","ChannelStatusContainer","AliasStateText","ChanneStateText","SectionDes","SectionDate","Verified","VerifyingIcon","VerifyingName","StateText","SubscribersCount","channelCreationSlice","setProcessingState","AliasSetup","TextPink","b","ChangeNetwork","changeNetworkToast","switchToPolygonNetwork","polygonChainId","aliasChainIdsMapping","hexValue","networkName","PolygonNetworks","MUMBAI_TESTNET","POLYGON_MAINNET","line","VerifyAlias","polygonCommsContract","success","setSuccess","mainAddress","checkAlias","submitAlias","checkAliasVerification","aliasVerified","verifyChannelAlias","intervalId","setInterval","clearInterval","Step","Line","Tab","AliasProcessing","override","LoaderSpinner","ChannelLoadingContainer","SkeletonContainerOuter","SkeletonContainerUpperRow","SkeletonContainerUpperCol","LoaderContainer","LoaderText","ChannelLoading","variant","sx","intervalID","ModifiedContent","ChannelOwnerDashboard","isChannelDetails","getAliasFromChannelDetails","fetchChannelDetails","ALIAS_API_CALL_INTERVAL","CreateChannel","UsersDataStore","userMeta","ownerMeta","resetUsersListeners","initUsersListenersAsync","getOwnerMetaAsync","getUsersCountAsync","getUserMetaAsync","listenForSubscribedAsync","listenForUnsubscribedAsync","publicKeyRegistered","listenForPublicKeyBroadcastAsync","incrementUsersCountAsync","setCoreReadProvider","setCoreWriteProvider","setCommunicatorReadProvider","setCommunicatorWriteProvider","setPushAdmin","controlAt","modalOpen","setModalOpen","adminStatusLoaded","ChannelDashboardPage","CloseIcon","xmlns","viewBox","data-name","x2","fill","stroke","stroke-linecap","stroke-width","y2","blockchainName","1","137","42","80001","PreviewNotif","channelDetail","details","delegateeInfo","NotifItem","asub","amsg","acta","aimg","PreviewSpace","IOSSwitch","Switch","attrs","classes","root","switchBase","thumb","track","focusVisible","disableRipple","focusVisibleClassName","NFTypes","LIMITER_KEYS","FullBody","DropdownStyledParent","MultiRecipientsContainer","Label","DropdownStyled","Dropdown","CustomDropdownItem","Body","SendNotifications","nfProcessing","setNFProcessing","setChannelAddress","nfRecipient","setNFRecipient","multipleRecipients","setMultipleRecipients","tempRecipeint","setTempRecipient","nfType","setNFType","nfSub","setNFSub","nfSubEnabled","setNFSubEnabled","nfMsg","setNFMsg","nfCTA","setNFCTA","nfCTAEnabled","setNFCTAEnabled","nfMedia","setNFMedia","nfMediaEnabled","setNFMediaEnabled","nfInfo","setNFInfo","delegateeOptions","setDelegateeOptions","origin","cannotDisplayDelegatees","oneDelegatee","bodyValidated","validated","handleSendMessage","preventDefault","nsub","nmsg","makeid","publickey","encryptWithRPCEncryptionPublicKey","secretEncrypted","encryptWithAES","storagePointer","isEmpty","jsonPayload","JSON","stringify","IPFSupload","Data","recipient","deployedContract","field","trim","showPreview","onSubmit","option","maxlength","oneRecipient","recipientAddress","filteredRecipients","rec","join","removeRecipient","onKeyPress","oldRecipients","Array","from","Set","listRecipients","rows","autocomplete","ChannelLoadingMessage","channelAdmin","ReceiveNotifsPage","InfoTooltip","Infocolor","Tooltip","ERROR_TOAST_DEFAULTS","checkForDelegateError","gasEstimate","gasPrice","createTransactionObject","newDelegatee","signerObject","setTxLoading","contractName","nonces","nonce","now","secondsSinceEpoch","round","expiry","domain","types","Delegation","splitSignature","r","s","v","estimateGas","delegateBySig","errorMessage","callDelegateAPI","delegatee","toolingPostReq","delegator","executeDelegateTx","SelectTag","DelegateeItem","DelegateeImageOuter","DelegateeImageInner","DelegateeProfile","DelegateeWallet","ViewDelegateeItem","delegateeObject","pushBalance","setGaslessInfo","txLoading","setIsBalance","transactionMode","setTransactionMode","Web3","HttpProvider","web3","eth","delegateAction","getAddress","wallet","pic","toLocaleString","forum","delegateesJSON","RadioGroup","Question","Answer","QnAItem","AMod","StatsCard","StatsHeading","NomineeContainer","StatsContent","AbsoluteWrapper","StatsPreview","StatsInnerTitle","ButtonAlt","CurvedSpan","GovernancePage","dashboardLoading","setDashboardLoading","delegateesLoading","setDelegateesLoading","setDelegateesObject","pushDelegatees","setPushDelegatees","pushNominees","setPushNominees","setEpnsToken","tokenBalance","setTokenBalance","prettyTokenBalance","setPrettyTokenBalance","showDelegateePrompt","setShowDelegateePrompt","setDelegatee","showAnswers","setShowAnswers","selfVotingPower","setSelfVotingPower","newDelegateeAddress","setNewDelegateeAddress","newDelegateeVotingPower","setNewDelegateeVotingPower","setSignerObject","gaslessInfo","toggleShowAnswer","newShowAnswers","epnsTokenContract","getMyInfo","delegateesList","votingPowerSorter","allDelegateesPromise","oneDelegate","allDelegatees","delegateesAbove75k","votingPowerSimulate","sortedDelegatees","sort","delegateesBelow75k","sortedNominees","isValidAddress","balanceOf","bal","newBal","toLocaleDateString","onePushNominee","ONE_PUSH","BigNumber","mul","tokenToBn","token","tokenBNtoNumber","tokenBn","YieldFarmingDataStore","yieldFarmingPUSH","yieldFarmingLP","rewardForCurrentEpochPush","rewardForCurrentEpochLP","genesisEpochAmountPUSH","deprecationPerEpochPUSH","genesisEpochAmountLP","deprecationPerEpochLP","getPoolStats","getCurrentEpoch","currentEpochPUSH","getAmountsOut","pushPriceAmounts","pushPrice","pushAmountReserve","attach","wethAmountReserve","ethPriceAmounts","totalSupply","uniTotalSupply","lpToPushRatio","uniLpPrice","getPoolSize","add","pushNextPoolSize","lpNextPoolSize","totalValueLocked","epochDuration","epochStart","start","sub","epochEndTimestamp","TOTAL_DISTRIBUTED_AMOUNT","pushTotalDistributedAmount","lpTotalDistributedAmount","totalDistributedAmount","getPushRewardsDistributed","pushRewardsDistributed","currentEpoch","getPUSHPoolStats","NR_OF_EPOCHS","totalEpochPUSH","genesisEpochAmount","deprecationPerEpoch","rewardForCurrentEpoch","calcTotalAmountPerEpoch","poolBalance","stakingAPR","calcStakingAPR","getLPPoolStats","poolStats","calcLPPoolAPR","getUserData","calculateUserEpochReward","potentialUserReward","getEpochStake","epochStakeNext","totalAccumulatedReward","epochReward","lastEpochIdHarvested","totalAvailableReward","currentEpochLP","pushPoolRewardsDistributed","lpPoolRewardsDistributed","rewardForCurrentEpochPUSH","epochId","calcAnnualEpochReward","currentEpochReward","depreciate","weeks","totalStaked","apr","annualRewards","aprFormatted","epochStake","poolSize","number","bnToInt","bnAmount","PoolCard","poolName","poolAddress","tokenAddress","pushPoolStats","userData","depositAmountToken","setDepositAmountToken","showDepositItem","setShowDepositItem","depositApproved","setDepositApprove","txInProgressApprDep","setTxInProgressApprDep","txInProgressDep","setTxInProgressDep","showDepSlip","setShowDepSlip","txInProgressWithdraw","setTxInProgressWithdraw","txInProgressMassHarvest","setTxInProgressMassHarvest","checkApprDeposit","tokenAddr","allowance","gte","fillMax","balance","approveDeposit","uintMax","depositAmountTokenFarmSingleTx","deposit","withdrawAmountTokenFarmAutomatic","withdrawAmount","formatTokens","withdraw","massHarvestTokensAll","massHarvest","tokens","numberWithCommas","x","PoolContainer","borderBottom","PoolBoxTitle","PoolBoxMsg","EpochDisplayer","MaxButton","h5","StatsInnerSub","YieldFarmingPage","setPoolStats","setPushPoolStats","lpPoolStats","setLpPoolStats","userDataPUSH","setUserDataPUSH","userDataLP","setUserDataLP","formattedDuration","setFormattedDuration","setStaking","setYieldFarmingPUSH","setYieldFarmingLP","setUniswapV2Router02","useCallback","getUserDataPUSH","getUserDataLP","duration","day","hour","minutes","seconds","getFormattedDuration","uniswapV2Router02Instance","syncData","NFTHelper","getNFTBalance","getTotalSupply","getOwnerOfTokenId","tokenId","ownerOf","getTokenOfOwnerByIndex","tokenOfOwnerByIndex","getTokenByIndex","tokenByIndex","getTokenMetadata","tokenURI","getTokenMetadatasOfOwner","owner","nftContract","rewardsContract","NFTDetails","getClaimable","claimable","metadata","getAllTokenDatas","getTokenData","transferNFT","safeTransferFrom","getClaimRewardStatus","NFTTextStyle","NFTStatus","NFTStatusTitle","NFTClaim","NFTClaimTitle","ViewNFTItem","NFTObject","setControlAt","setTokenId","NFTRewardsContract","setNFTRewardsContract","onMainnetCore","NFTRewardsInstance","handleClaim","claimReward","sendWithTxPromise","controls","playing","loop","MyNFTs","nftReadProvider","setNftReadProvider","nftWriteProvider","setNftWriteProvider","NFTObjects","setNFTObjects","mainnetCoreProvider","contractInstance","signerInstance","fetchNFTDetails","prev","ViewNFTV2Item","NFTRewardsV2Contract","setNFTRewardsV2Contract","NFTRewardsV2Instance","newIp","nftInfo","animation_url","callFunction","tokenUrl","AllNFTs","AllNFTsV2","TransferNFT","toAddress","setToAddress","processing","setProcessing","processingInfo","setProcessingInfo","handleTransferNFT","txPromise","TransferNFTv2","Controls","CheckSpace","NFTPage","version","setVersion","userClickedAt","controlIndex","MyNFTsV2","EpicButton","prop","AirdropPage","distributorContract","setDistributorContract","setUser","checkClaim","AirdropHelper","verifyAddress","claim","amount","proof","verified","Heading","ComingSoonPage","minHeight","NotAvailablePage","TutorialPage","Span2","FaqPage","SupportPage","contactFormTopics","contactFormProcessing","setContactFormProcessing","contactFormName","setContactFormName","contactFormEmail","setContactFormEmail","contactFormTopic","setContactFormTopic","contactFormSub","setContactFormSub","contactFormMsg","setContactFormMsg","contactFormError","setContactFormError","String","requestOptions","headers","topic","jsondata","ContactInput","ContactTextArea","columnGap","rowGap","PreviewOuter","PreviewBG","PreviewContent","Preview","PreviewClose","StyledToastContainer","ToastContainer","MasterInterfacePage","playTeaserVideo","setPlayTeaserVideo","loadTeaserVideo","setLoadTeaserVideo","path","element","ViewChannelsPage","SendNotifs","SpamPage","FAQPage","newestOnTop","rtl","pauseOnFocusLoss","frameborder","allow","allowfullscreen","BeaconExample","BeaconExamplePulse","UserJourneySteps","darkMode","content","locale","next","aria-label","placement","hideFooter","spotlightClicks","disableAnimation","disablefloating","defaultProps","styles","buttonNext","buttonSkip","buttonClose","disableOverlayClose","offsetTop","InitState","coreProvider","coreContractInstance","commAddress","commContractInstance","coreSigner","coreSignerInstance","communicatorSignerInstance","pushChannelAdmin","checkUserForChannelOwnership","ownerAccount","getChannelVerfication","channelSubscribers","fetchDelegators","aliasEthAddress","delegators","channelOwners","channelInformationPromise","channelInformation","checkUserForEthAlias","checkUserForAlias","web3Connectors","Injected","obj","logo","WalletConnect","Ledger","Portis","App","connector","activate","activatingConnector","setActivatingConnector","setcurrentTime","triedEager","tried","setTried","isLedgerDappBrowserProvider","isAuthorized","useEagerConnect","suppress","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","initialize","setDarkMode","triggerNotification","setTriggerNotification","browserFunction","onMessageListener","notificationOptions","Notification","DARK","useBrowserNotification","localStorage","getItem","parse","setItem","backgroundColor","Olvy","organisation","view","showSearch","compact","showHeader","showUnreadIndicator","unreadIndicatorColor","unreadIndicatorPosition","teardown","steps","continuous","hideBackButton","hideCloseButton","disableScrolling","disableScrollParentFix","showSkipButton","lifecycle","status","querySelector","scrollTop","arrowColor","overlayColor","primaryColor","textColor","HeaderContainer","ParentContainer","LeftBarContainer","leftBarWidth","ContentContainer","ProviderLogo","currentConnector","ProviderButton","ProviderImage","StyledItem","header","rootReducer","combineReducers","contractReducer","channelReducer","channelCreationReducer","adminReducer","notificationReducer","spamReducer","userJourneyReducer","canSendNotification","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","ApolloProvider","getLibrary","gottenProvider","Web3Provider","oldNetwork","reload","getElementById","serviceWorker","ready","registration","unregister","loaderColor","LoaderNotification","LoaderMessage","CloseButton","closeToast","Toast","ToastIcon","ToastContent","ToastTitle","ToastMessage","toastId","loaderMessage","current","closeButton","boxShadow","toastTitle","toastMessage","toastType","getToastIcon","successBgGradient","errorBgGradient","DEFAULT","EnvHelper","isProduction","bufferInput","Buffer","auth","ipfsClient","host","port","protocol","apiPath","authorization","pin","Error","BASE_URL","TOOLING_BASE_URL","post","TOKEN_KEY","firebaseApp","initializeApp","messaging","getMessaging","setLocalToken","getPushToken","getToken","onMessage","tokenKey","object","device_token","platform","envUtil","isProd","isStaging","isDev","isLocalHost","nativeCurrency","rpcUrls","blockExplorerUrls","aliasChainId","caipChainId","convertChainIdToChainCaip","Eip155EnabledIds","getCAIPObj","caip","userAddress","randseed","rand","buildOpts","newOpts","random","charCodeAt","seedrand","renderIcon","imageData","dataWidth","mirrorWidth","y","row","reverse","concat","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","api","create","CryptoJS","AES","encrypt","decrypt","enc","Utf8","encryptedSecret","metamaskSigUtil","publicKey","encryptedMessage","encryptWithECIES","compressedKey","EthCrypto","compress","encryptWithPublicKey","decryptWithECIES","privateKey","decryptWithPrivateKey","pubKeyUint8Array","Uint8Array","convertedKeyAsUint8Array","publicKeyConvert","convertedPublicKeyHex","pubKey","encryptedBuffers","cipher","iv","ephemPublicKey","ciphertext","mac","keyConvert","buf","encrypted","keyConvertBuffer","uncompressedKey","twoStripped","encryptedBuffer","decryptedBuffer","encryptionDecryptionPublicToPrivateTest","startTime","publicKeyByPrivateKey","encryptionTime","decryptMsg","decryptionTime","outputMsgPayload","subject","calltoaction","imageurl","pkey","asubE","amsgE","actaE","aimgE","toISOString","characters","charactersLength","charAt","TabSpace","TextLine","TextLink","uploadDone","setUploadDone","stakeFeesChoosen","setStakeFeesChoosen","channelInfoDone","setChannelInfoDone","chainDetails","setChainDetails","channelName","setChannelName","channelAlias","setChannelAlias","setChannelInfo","channelURL","setChannelURL","channelFile","setChannelFile","daiAmountVal","setDaiAmountVal","txStatus","setTxStatus","setProgress","progressInfo","setProgressInfo","logoInfo","setLogoInfo","setView","imageSrc","setImageSrc","croppedImage","setCroppedImage","stepFlow","setStepFlow","channelToast","checkDaiAmount","convertedVal","checkDaiFunc","handleCreateChannel","aliaschainId","createChannelWithFees","gasLimit","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","readAsDataURL","responseType","send","toDataURL","dataUrl","base64","sizeOf","base64Data","pop","dimensions","handleLogoSizeLimitation","text-align","TextSpace","Minter","PoolShare","StakingInfo","mintDai","mintTransactionPromise","mint","coreChainId","ALIAS_CHAINS","setInfo","ProcessingInfo","claims","combinedHash","first","second","solidityKeccak256","compare","toNode","pairHex","verifyProof","pair","equals","getNextLayer","elements","reduce","layer","arr","getRoot","balances","nodes","layers","merkleRootHex","merkleRoot","isClaimed","BNamount","ImageClipper","forwardRef","onImageCropped","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","onCropComplete","croppedArea","getCroppedImg","pixelCrop","createImage","ctx","drawImage","toBlob","file","File","lastModified","useImperativeHandle","showCroppedImage","resizeFile","Resizer","imageFileResizer","setAttribute","aspect","onCropChange","onZoomChange","containerStyle","styledComponents","Space","UploadLogo","childRef","handleFile","files","onDragOver","handleDragOver","onDrop","stopPropagation","dataTransfer","handleOnDrop","htmlFor","accept","hidden","readOnly"],"mappings":"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","file":"static/js/main.924f0be6.chunk.js","sourcesContent":["// environmental configurations for the dapp for different environments\r\nconst config = {\r\n    apiUrl: \"https://backend-dev.epns.io/apis\",\r\n    // apiUrl: \"https://backend-kovan.epns.io/apis\",\r\n    toolingApiUrl: \"https://tooling.epns.io/apis\",\r\n    allowedNetworks: [\r\n        42, //for ropsten\r\n        80001 //for mumbai polygon\r\n    ],\r\n    coreContractChain: 42, //the chain id of the network which the core contract relies on\r\n    mainnetCoreContractChain: 1,\r\n    coreRPC: \"https://kovan.infura.io/v3/4ff53a5254144d988a8318210b56f47a\",\r\n    mainnetCoreRPC: \"https://mainnet.infura.io/v3/4ff53a5254144d988a8318210b56f47a\",\r\n    googleAnalyticsId: \"UA-165415629-5\",\r\n    vapidKey: \"BFRmmAEEXOhk31FIsooph5CxlXKh6N0_NocUWHzvtpoUEvqQTwLXu6XtwkrH7ckyr2CvVz1ll-8q4oo6-ZqFJPY\",\r\n    firebaseConfig: {\r\n        apiKey: \"AIzaSyClOk4qP0ttFW-BPnXy7WT920xfdXSbFu8\",\r\n        authDomain: \"epns-internal.firebaseapp.com\",\r\n        databaseURL: \"https://epns-internal.firebaseio.com\",\r\n        projectId: \"epns-internal\",\r\n        storageBucket: \"epns-internal.appspot.com\",\r\n        messagingSenderId: \"755180533582\",\r\n        appId: \"1:755180533582:web:752ff8db31905506b7d01f\",\r\n        measurementId: \"G-ZJH2T7R9S1\",\r\n    }\r\n};\r\n\r\nexport default config;\r\n","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\r\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\r\nconst addresses = {\r\n  ceaErc20: \"0xc1C0472c0C80bCcDC7F5D01A376Bd97a734B8815\",\r\n  epnscore: \"0x628E3191dE173d40b9fcDc171557958267c475a6\",\r\n  epnsEthComm: \"0x99047d328496C14016222a998564B334A4A5723f\", \r\n  epnsPolyComm: \"0xAf55BE8e6b0d6107891bA76eADeEa032ef8A4504\", // the ploygon comm contract\r\n  dai: \"0xff795577d9ac8bd7d90ee22b6c1703490b6512fd\", //address for dai\r\n  aDai: \"0x58AD4cB396411B691A9AAb6F74545b2C5217FE6a\",\r\n  staking: \"0x8e129EF695F8761922F1AA38588292f8d8817bA5\",\r\n  yieldFarmPUSH: \"0xb41cd6760d3b1d0d216851f63fda9573b04dd46e\",\r\n  yieldFarmLP: \"0x604f629A6b5E85805D57f39493BBC2856cE8A540\",\r\n  epnsToken: \"0x9CE54E83c18f0a797F823905A3ec5CfC2F6d2CA9\",\r\n  epnsLPToken: \"0x1f094Bd8c260D0C3fC79157096015990885af4d2\",\r\n  rockstar: \"0x3f8C2152b79276b78315CAF66cCF951780580A8a\",\r\n  batchMintNFT: \"0xCf733D547B9f7F87c1B1f63f45c197C007F8eedf\",\r\n  NFTRewards: \"0xc4708BB6EC3B797344f123126171302e4e3E68E2\",\r\n  distributor: \"0x5B548D33874DeABaC2F683A6E1864795E09932F0\",\r\n  uniswapV2Router02: \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\", //n\r\n  WETHAddress: \"0xd0A1E359811322d97991E03f863a0C30C2cF029C\", // mainnet address //n\r\n  USDTAddress: \"0x13512979ade267ab5100878e2e0f485b568328a4\", // mainnet address //n\r\n  rockstarV2:\"0xA2b885e7065EA59a3251489715ca80DE5Ff642f8\",//mainnet address\r\n  NFTRewardsV2: \"0xdc66567a990B7fa10730459537620857c9e03287\", //mainnet address\r\n};\r\nexport default addresses;","import erc20Abi from \"./abis/erc20\";\r\nimport ownableAbi from \"./abis/ownable\";\r\nimport epnscoreAbi from \"./abis/epnscore\";\r\nimport daiAbi from \"./abis/dai\";\r\nimport epnsTokenAbi from \"./abis/EPNS.json\";\r\nimport stakingAbi from \"./abis/Staking.json\";\r\nimport yieldFarmingAbi from \"./abis/YieldFarm.json\";\r\nimport rockstarAbi from \"./abis/Rockstar.json\";\r\nimport ec721Abi from \"./abis/ERC721.json\";\r\nimport NFTRewards from \"./abis/NFTRewards.json\";\r\nimport epnsCommAbi from \"./abis/epnsCommunicator.json\";\r\nimport MerkleDistributorAbi from \"./abis/MerkleDistributor.json\";\r\nimport UniswapV2Router02Abi from \"./abis/UniswapV2Router02.json\";\r\nimport rockstarV2Abi from \"./abis/RockstarV2.json\"\r\nimport NFTRewardsV2 from \"./abis/NFTRewardsV2.json\";\r\n\r\nexport const abis = {\r\n  erc20: erc20Abi,\r\n  ownable: ownableAbi,\r\n  epnscore: epnscoreAbi,\r\n  epnsPolyComm: epnsCommAbi,\r\n  epnsComm: epnsCommAbi,\r\n  dai: daiAbi,\r\n  epnsToken: epnsTokenAbi,\r\n  staking: stakingAbi,\r\n  yieldFarming: yieldFarmingAbi,\r\n  rockstar: rockstarAbi,\r\n  erc721: ec721Abi,\r\n  NFTRewards: NFTRewards,\r\n  distributor: MerkleDistributorAbi,\r\n  uniswapV2Router02: UniswapV2Router02Abi,\r\n  rockstarV2: rockstarV2Abi,\r\n  NFTRewardsV2: NFTRewardsV2\r\n};\r\n\r\nexport { default as envConfig } from \"./config\";\r\nexport { default as addresses } from \"./addresses\";\r\n","// Define what props.theme will look like\r\nconst themeLight = {\r\n  scheme: \"light\",\r\n  // Section Theme\r\n  sectionBorderBg: \"transparent\",\r\n\r\n  // Header Theme\r\n  headerBg: \"#fff\",\r\n  headerTagBg: \"#000\",\r\n  headerTagFg: \"#fff\",\r\n\r\n  headerIconsBg: \"#000\",\r\n\r\n  // Nav Menu\r\n  navMenuBg: \"#00000066\",\r\n\r\n  // Left Bar Theme\r\n  leftBarLoaderBg: \"#ddd\",\r\n\r\n  leftBarBg: \"#fff\",\r\n  leftBarButtonBg: \"#fff\",\r\n  leftBarHoverColor: \"#5c5c5c\",\r\n  leftBarFontColor: \"#000\",\r\n\r\n  leftBarSocialBg: \"#eee\",\r\n  leftBarSocialIconBg: \"#ddd\",\r\n\r\n  // Interface Theme\r\n  interfaceTopPadding: \"0px\",\r\n  interfaceBorder: \"#f1f1f1\",\r\n\r\n  interfaceSkeleton: \"#eee\",\r\n\r\n  // Main Theme\r\n  backgroundBG: \"#fff\",\r\n  backgroundBGLucid: \"#00000099\",\r\n  mainBg: \"#fff\",\r\n  fontColor: \"#000\",\r\n  fontColorSecondary: \"#00000099\",\r\n  scrollBg: \"#eee\",\r\n  borderBg: \"#f1f1f1\",\r\n\r\n  // View Channels Theme\r\n  // -- View Channel Header Theme\r\n  // -- -- Search Bar\r\n  viewChannelSearchBg: \"#fff\",\r\n  viewChannelSearchBorder: \"#f1f1f1\",\r\n  viewChannelSearchText: \"#000\",\r\n  viewChannelSearchIcon: \"#333\",\r\n\r\n  // -- -- Faucet Theme\r\n  faucetBg: \"#fff\",\r\n  faucetBorder: \"#ededed\",\r\n  faucetIcon: \"#674c9f\",\r\n  faucetHeader: \"#e20880\",\r\n\r\n  // -- View Channel Main Theme\r\n  viewChannelOuterBorder: \"#eee\",\r\n  viewChannelLink: \"#e20880\",\r\n  viewChannelVerifiedBadge: \"#ec008c\",\r\n  viewChannelIconBorder: \"#fafafa\",\r\n  viewChannelSecondaryBG: \"#35c5f3\",\r\n  viewChannelSecondaryIcon: \"#ccc\",\r\n\r\n  // -- -- View Channel Tuts\r\n  viewChannelTutsTitleBg: \"#000\",\r\n  viewChannelTutsButtonBg: \"#e20880\",\r\n\r\n  // Dynamic Tuts\r\n  dynamicTutsBg: \"#fff\",\r\n  dynamicTutsBgOverlay: \"#00000099\",\r\n  dynamicTutsFontColor: \"000\",\r\n  dynamicTutsButtonBg: \"#000\",\r\n  dynamicTutsButtonColor: \"#fff\",\r\n  dynamicTutsPrimaryColor: \"#e20880\",\r\n\r\n  // QnA\r\n  qnaBg: \"#fff\",\r\n  qnaBgBorder: \"#fafafa\",\r\n\r\n  yieldBg: \"#f3f3f3\",\r\n\r\n  pushPriceBg: \"#000\",\r\n\r\n  greyText: \"#818589\",\r\n\r\n  color: \"#000\",\r\n\r\n  channelBg: \"#fafafa\",\r\n\r\n  button: \"#000\",\r\n\r\n  buttonColor: \"#fff\",\r\n\r\n  createColor: \"#808080\",\r\n\r\n  // Toast Notifications\r\n  toastTextColor: \"#000\",\r\n  toastBorderColor: \"#F4F3FF\",\r\n};\r\n\r\nconst themeDark = {\r\n  scheme: \"dark\",\r\n  // Section Theme\r\n  sectionBorderBg: \"#333\",\r\n\r\n  // Header Theme\r\n  headerBg: \"#000\",\r\n  headerTagBg: \"#fff\",\r\n  headerTagFg: \"#000\",\r\n\r\n  headerIconsBg: \"#fff\",\r\n\r\n  // Nav Menu\r\n  navMenuBg: \"#00000066\",\r\n\r\n  // Left Bar Theme\r\n  leftBarLoaderBg: \"#ddd\",\r\n\r\n  leftBarBg: \"#000\",\r\n  leftBarButtonBg: \"#000\",\r\n  leftBarHoverColor: \"#fff\",\r\n  leftBarFontColor: \"#fff\",\r\n\r\n  leftBarSocialBg: \"#222\",\r\n  leftBarSocialIconBg: \"#000\",\r\n\r\n  // Interface Theme\r\n  interfaceTopPadding: \"20px\",\r\n  interfaceBorder: \"#333\",\r\n  interfaceSkeleton: \"#414141\",\r\n\r\n  // Main Theme\r\n  backgroundBG: \"#222\",\r\n  backgroundBGLucid: \"#000000cc\",\r\n  mainBg: \"#000\",\r\n  fontColor: \"#fff\",\r\n  fontColorSecondary: \"#ffffff99\",\r\n  scrollBg: \"#333\",\r\n  borderBg: \"#333\",\r\n\r\n  // View Channels Theme\r\n  // -- View Channel Header Theme\r\n  // -- -- Search Bar\r\n  viewChannelSearchBg: \"#222\",\r\n  viewChannelSearchBorder: \"#333\",\r\n  viewChannelSearchText: \"#fff\",\r\n  viewChannelSearchIcon: \"#414141\",\r\n\r\n  // -- -- Faucet Theme\r\n  faucetBg: \"#222\",\r\n  faucetBorder: \"#333\",\r\n  faucetIcon: \"#414141\",\r\n  faucetHeader: \"#414141\",\r\n\r\n  // -- View Channel Main Theme\r\n  viewChannelOuterBorder: \"#222\",\r\n  viewChannelLink: \"#35c5f3\",\r\n  viewChannelVerifiedBadge: \"#ccc\",\r\n  viewChannelIconBorder: \"#222\",\r\n  viewChannelSecondaryBG: \"#222\",\r\n  viewChannelSecondaryIcon: \"#414141\",\r\n\r\n  // -- -- View Channel Tuts\r\n  viewChannelTutsTitleBg: \"#000\",\r\n  viewChannelTutsButtonBg: \"#000\",\r\n\r\n  // Dynamic Tutorial\r\n  dynamicTutsBg: \"#222\",\r\n  dynamicTutsBgOverlay: \"#000000cc\",\r\n  dynamicTutsFontColor: \"#fff\",\r\n  dynamicTutsButtonBg: \"#000\",\r\n  dynamicTutsButtonColor: \"#fff\",\r\n  dynamicTutsPrimaryColor: \"#fff\",\r\n\r\n  // QnA\r\n  qnaBg: \"#222\",\r\n  qnaBgBorder: \"#666\",\r\n\r\n  color: \"#fff\",\r\n\r\n  yieldBg: \"#ddd\",\r\n\r\n  questionBg: \"#000\",\r\n\r\n  pushPriceBg: \"teal\",\r\n\r\n  greyText: \"#818589\",\r\n\r\n  channelBg: \"#000\",\r\n\r\n  button: \"#fff\",\r\n\r\n  buttonColor: \"#000\",\r\n\r\n  buttonBd: \"1px solid #fff\",\r\n\r\n  createColor: \"#fff\",\r\n\r\n  // Toast Notifications\r\n  toastTextColor: \"#B6BCD6\",\r\n  toastBorderColor: \"#4A4F67\",\r\n};\r\n\r\nmodule.exports = {\r\n  themeLight: themeLight,\r\n  themeDark: themeDark,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  align-self: stretch;\r\n  justify-content: center;\r\n  align-items: ${(props) => props.align || \"initial\"};\r\n  flex-direction: ${(props) => props.direction || \"column\"};\r\n  background: ${(props) => props.theme || \"transparent\"};\r\n  background: ${(props) => props.gradient || \"undefined\"};\r\n  margin: ${(props) => props.margin || \"0px\"};\r\n  padding: ${(props) => props.padding || \"0px\"};\r\n  overflow: ${(props) => props.overflow || \"initial\"};\r\n  flex: 1;\r\n  position: relative;\r\n`;\r\n\r\nexport const SectionFS = styled(Section)`\r\n  min-height: 100vh;\r\n`;\r\n\r\nexport const SectionFSHero = styled(Section)`\r\n  min-height: 100vh;\r\n  background: rgb(31, 23, 47);\r\n  background: linear-gradient(\r\n    283deg,\r\n    rgba(31, 23, 47, 1) 0%,\r\n    rgba(62, 9, 40, 1) 45%,\r\n    rgba(17, 58, 72, 1) 100%\r\n  );\r\n`;\r\n\r\nexport const SectionHero = styled(Section)`\r\n  background: rgb(31, 23, 47);\r\n  background: linear-gradient(\r\n    283deg,\r\n    rgba(31, 23, 47, 1) 0%,\r\n    rgba(62, 9, 40, 1) 45%,\r\n    rgba(17, 58, 72, 1) 100%\r\n  );\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: ${(props) => props.padding || \"40px 0px\"};\r\n  background: ${(props) => props.theme || \"transparent\"};\r\n  background: ${(props) => props.gradient || \"undefined\"};\r\n  position: relative;\r\n`;\r\n\r\nexport const ItemBreak = styled.div`\r\n  flex-basis: 100%;\r\n`;\r\n\r\nexport const Item = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: ${(props) => props.wrap || \"wrap\"};\r\n  position: ${(props) => props.position || \"relative\"};\r\n  justify-content: center;\r\n  background: ${(props) => props.bg || \"transparent\"};\r\n  flex: ${(props) => props.flex || \"1\"};\r\n  flex-direction: ${(props) => props.direction || \"column\"};\r\n  flex-basis: ${(props) => props.flexBasis || \"auto\"};\r\n  align-self: ${(props) => props.self || \"auto\"};\r\n  align-items: ${(props) => props.align || \"center\"};\r\n  justify-content: ${(props) => props.justify || \"center\"};\r\n  padding: ${(props) => props.padding || \"0px\"};\r\n  margin: ${(props) => props.margin || \"0px\"};\r\n  min-width: ${(props) => props.minWidth || \"auto\"};\r\n  max-width: ${(props) => props.maxWidth || \"initial\"};\r\n  font-size: ${(props) => props.size || \"inherit\"};\r\n  text-align: ${(props) => props.textAlign || \"inherit\"};\r\n  filter: ${(props) => props.filter || \"none\"};\r\n\r\n  top: ${(props) => props.top || \"auto\"};\r\n  bottom: ${(props) => props.bottom || \"auto\"};\r\n  left: ${(props) => props.left || \"auto\"};\r\n  right: ${(props) => props.right || \"auto\"};\r\n\r\n  width: ${(props) => props.width || \"auto\"};\r\n  height: ${(props) => props.height || \"auto\"};\r\n\r\n  border: ${(props) => props.border || \"none\"};\r\n\r\n  border-radius: ${(props) => props.radius || \"0px\"};\r\n  overflow: ${(props) => props.overflow || \"initial\"};\r\n\r\n  z-index: ${(props) => props.zIndex || \"auto\"};\r\n\r\n  &:hover & {\r\n    filter: ${(props) =>\r\n      (props.filterHover\r\n        ? props.filterHover\r\n        : props.hover\r\n        ? props.hover\r\n        : \"none\") || \"none\"};\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    align-items: ${(props) =>\r\n      (props.tabletAlign\r\n        ? props.tabletAlign\r\n        : props.align\r\n        ? props.align\r\n        : \"center\") || \"center\"};\r\n    text-align: ${(props) =>\r\n      (props.tabletTextAlign\r\n        ? props.tabletTextAlign\r\n        : props.textAlign\r\n        ? props.textAlign\r\n        : \"inherit\") || \"inherit\"};\r\n  }\r\n\r\n  ${ItemBreak} {\r\n    width: 0;\r\n  }\r\n`;\r\n\r\nexport const ItemH = styled(Item)`\r\n  flex-direction: row;\r\n  flex: ${(props) => props.flex || \"1\"};\r\n\r\n  ${ItemBreak} {\r\n    width: auto;\r\n    height: 0;\r\n  }\r\n`;\r\n\r\nexport const WaveOuter = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: ${(props) => props.bottom || \"-70px\"};\r\n  top: ${(props) => props.top || \"auto\"};\r\n  transform: ${(props) => props.transform || \"initial\"};\r\n`;\r\n\r\nexport const WaveInner = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  transform: ${(props) => props.transform || \"initial\"};\r\n`;\r\n\r\nexport const Arc = styled.div`\r\n  position: absolute;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: 300px;\r\n\r\n  bottom: ${(props) => props.bottom || \"auto\"};\r\n  top: ${(props) => props.top || \"auto\"};\r\n\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 300%;\r\n    height: 300%;\r\n    top: -25%;\r\n    left: -100%;\r\n\r\n    ${(props) =>\r\n      props.arcRGB &&\r\n      css`\r\n        background: radial-gradient(\r\n          ellipse at center,\r\n          ${props.arcRGB}00 0%,\r\n          ${props.arcRGB}00 50%,\r\n          ${props.arcRGB}ff 50%,\r\n          ${props.arcRGB}ff 100%\r\n        );\r\n      `};\r\n  }\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n  @media (max-width: 480px) {\r\n    font-size: 2.1rem;\r\n  }\r\n`;\r\n\r\nexport const H2 = styled.h2`\r\n  color: ${(props) => props.color || \"#000\"};\r\n  font-weight: ${(props) => props.weight || 600};\r\n  font-size: ${(props) => props.size || \"2rem\"};\r\n  text-transform: ${(props) => props.textTransform || \"inherit\"};\r\n  margin: ${(props) => props.margin || \"20px 0px\"};\r\n  padding: ${(props) => props.padding || \"0px\"};\r\n  letter-spacing: ${(props) => props.spacing || \"inherit\"};\r\n  font-family: ${(props) =>\r\n    props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\r\n  text-align: ${(props) => props.textAlign || \"inherit\"};\r\n`;\r\n\r\nexport const H3 = styled.h3`\r\n  color: ${(props) => props.color || \"rgb(0 0 0 / 0.5)\"};\r\n  font-weight: ${(props) => props.weight || 300};\r\n  font-size: ${(props) => props.size || \"1rem\"};\r\n  text-transform: ${(props) => props.textTransform || \"uppercase\"};\r\n  margin: ${(props) => props.margin || \"-15px 0px 20px 0px\"};\r\n  padding: ${(props) => props.padding || \"0px\"};\r\n  letter-spacing: ${(props) => props.spacing || \"0.1em\"};\r\n  font-family: ${(props) =>\r\n    props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\r\n  text-align: ${(props) => props.textAlign || \"inherit\"};\r\n  max-width: ${(props) => props.maxWidth || \"initial\"};\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n  display: flex;\r\n`;\r\n\r\nexport const P = styled.p`\r\n  flex: ${(props) => props.flex || \"initial\"};\r\n  align-self: ${(props) => props.self || \"auto\"};\r\n\r\n  color: ${(props) => props.color || \"#000\"};\r\n  background: ${(props) => props.bg || \"transparent\"};\r\n  font-weight: ${(props) => props.weight || 300};\r\n  font-size: ${(props) => props.size || \"inherit\"};\r\n  text-transform: ${(props) => props.textTransform || \"inherit\"};\r\n  margin: ${(props) => props.margin || \"20px 0px\"};\r\n  padding: ${(props) => props.padding || \"0px\"};\r\n  letter-spacing: ${(props) => props.spacing || \"inherit\"};\r\n  text-align: ${(props) => props.textAlign || \"initial\"};\r\n`;\r\n\r\nexport const Para = styled(P)`\r\n  font-weight: ${(props) => props.weight || 300};\r\n  letter-spacing: ${(props) => props.spacing || \"0.02em\"};\r\n  font-size: ${(props) => props.size || \"1.1em\"};\r\n  color: ${(props) => props.color || \"#000000ee\"};\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  flex: ${(props) => props.flex || \"initial\"};\r\n  align-self: ${(props) => props.self || \"auto\"};\r\n\r\n  color: ${(props) => props.color || \"#000\"};\r\n  background: ${(props) => props.bg || \"transparent\"};\r\n  font-weight: ${(props) => props.weight || 300};\r\n  font-size: ${(props) => props.size || \"inherit\"};\r\n  text-transform: ${(props) => props.textTransform || \"inherit\"};\r\n  margin: ${(props) => props.margin || \"0px\"};\r\n  padding: ${(props) => props.padding || \"0px\"};\r\n  letter-spacing: ${(props) => props.spacing || \"inherit\"};\r\n  text-align: ${(props) => props.textAlign || \"initial\"};\r\n  border-radius: ${(props) => props.bRadius || \"initial\"};\r\n\r\n  position: ${(props) => props.pos || \"initial\"};\r\n  right: ${(props) => props.right || \"auto\"};\r\n  left: ${(props) => props.left || \"auto\"};\r\n  bottom: ${(props) => props.bottom || \"auto\"};\r\n  top: ${(props) => props.top || \"auto\"};\r\n\r\n  z-index: ${(props) => props.z || \"auto\"};\r\n`;\r\n\r\nexport const B = styled.span`\r\n  color: ${(props) => props.color || \"inherit\"};\r\n  font-weight: ${(props) => props.weight || \"bold\"};\r\n`;\r\n\r\nexport const UL = styled.ul``;\r\n\r\nexport const LI = styled.li`\r\n  margin: 10px 0px;\r\n`;\r\n\r\nexport const Anchor = styled.a`\r\n  display: flex;\r\n  flex-direction: ${(props) => props.direction || \"row\"};\r\n  flex: ${(props) => props.flex || \"initial\"};\r\n  align-self: ${(props) => props.self || \"auto\"};\r\n  align-items: ${(props) => props.align || \"center\"};\r\n  justify-content: ${(props) => props.justify || \"center\"};\r\n  font-weight: ${(props) => props.weight || 400};\r\n  font-size: ${(props) => props.size || \"inherit\"};\r\n  color: ${(props) => props.color || \"#fff\"};\r\n  background: ${(props) => props.bg || \"transparent\"};\r\n  margin: ${(props) => props.margin || \"0\"};\r\n  padding: ${(props) => props.padding || \"10px 15px\"};\r\n  letter-spacing: ${(props) => props.spacing || \"0.2em\"};\r\n  border: ${(props) => props.border || \"none\"};\r\n  border-radius: ${(props) => props.radius || \"0px\"};\r\n  width: ${(props) => props.width || \"initial\"};\r\n\r\n  position: relative;\r\n  text-decoration: none;\r\n  overflow: ${(props) => props.overflow || \"hidden\"};\r\n  z-index: 3;\r\n\r\n  filter: ${(props) => props.filter || \"none\"};\r\n\r\n  cursor: pointer;\r\n  pointer: hand;\r\n\r\n  &:hover & {\r\n    filter: ${(props) =>\r\n      (props.filterHover\r\n        ? props.filterHover\r\n        : props.hover\r\n        ? props.hover\r\n        : \"none\") || \"none\"};\r\n  }\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${(props) =>\r\n      props.hover || (props.bg ? props.bg : \"transparent\")};\r\n    display: none;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${(props) => props.hoverBG || \"#000\"};\r\n    opacity: 0;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:hover:before {\r\n    display: block;\r\n  }\r\n\r\n  &:hover:after {\r\n    opacity: 0.08;\r\n  }\r\n  &:active:after {\r\n    opacity: 0.15;\r\n  }\r\n`;\r\n\r\nexport const AnchorLink = styled(Anchor)`\r\n  background-color: ${(props) =>\r\n    props.theme.scheme === \"dark\" ? props.bg : \"#d1cdcd\"};\r\n`;\r\n\r\nexport const RouterLink = styled(Link)`\r\n  display: flex;\r\n  flex-direction: ${(props) => props.direction || \"row\"};\r\n  flex: ${(props) => props.flex || \"initial\"};\r\n  align-self: ${(props) => props.self || \"auto\"};\r\n  align-items: ${(props) => props.align || \"center\"};\r\n  justify-content: ${(props) => props.justify || \"center\"};\r\n  font-weight: ${(props) => props.weight || 400};\r\n  font-size: ${(props) => props.size || \"inherit\"};\r\n  color: ${(props) => props.color || \"#fff\"};\r\n  background: ${(props) => props.bg || \"transparent\"};\r\n  margin: ${(props) => props.margin || \"0\"};\r\n  padding: ${(props) => props.padding || \"10px 15px\"};\r\n  letter-spacing: ${(props) => props.spacing || \"0.2em\"};\r\n  border: ${(props) => props.border || \"none\"};\r\n  border-radius: ${(props) => props.radius || \"0px\"};\r\n  width: ${(props) => props.width || \"initial\"};\r\n\r\n  position: relative;\r\n  text-decoration: none;\r\n  overflow: ${(props) => props.overflow || \"hidden\"};\r\n  z-index: 3;\r\n\r\n  filter: ${(props) => props.filter || \"none\"};\r\n\r\n  cursor: pointer;\r\n  pointer: hand;\r\n\r\n  &:hover & {\r\n    filter: ${(props) =>\r\n      (props.filterHover\r\n        ? props.filterHover\r\n        : props.hover\r\n        ? props.hover\r\n        : \"none\") || \"none\"};\r\n  }\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${(props) =>\r\n      props.hover || (props.bg ? props.bg : \"transparent\")};\r\n    display: none;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${(props) => props.hoverBG || \"#000\"};\r\n    opacity: 0;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:hover:before {\r\n    display: block;\r\n  }\r\n\r\n  &:hover:after {\r\n    opacity: 0.08;\r\n  }\r\n  &:active:after {\r\n    opacity: 0.15;\r\n  }\r\n`;\r\n\r\nexport const A = styled(Anchor)`\r\n  display: inline;\r\n  color: #e1087f;\r\n  background: transparent;\r\n  padding: 0px;\r\n  letter-spacing: inherit;\r\n  text-transform: initial;\r\n`;\r\n\r\nexport const C = styled(Anchor)`\r\n  display: inline;\r\n  color: #4292e4;\r\n  background: transparent;\r\n  padding: 0px;\r\n  letter-spacing: inherit;\r\n  text-transform: initial;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  flex: ${(props) => props.flex || \"initial\"};\r\n  align-self: ${(props) => props.self || \"auto\"};\r\n  align-items: ${(props) => props.align || \"center\"};\r\n  justify-content: ${(props) => props.justify || \"center\"};\r\n  font-weight: ${(props) => props.weight || 400};\r\n  font-size: ${(props) => props.size || \"inherit\"};\r\n  color: ${(props) => props.color || \"#fff\"};\r\n  background: ${(props) => props.bg || \"tranparent\"};\r\n  margin: ${(props) => props.margin || \"0\"};\r\n  padding: ${(props) => props.padding || \"10px 15px\"};\r\n  letter-spacing: ${(props) => props.spacing || \"initial\"};\r\n  border: ${(props) => props.border || \"none\"};\r\n  border-radius: ${(props) => props.radius || \"0px\"};\r\n  text-transform: ${(props) => props.textTransform || \"initial\"};\r\n\r\n  position: relative;\r\n  text-decoration: none;\r\n  overflow: ${(props) => props.overflow || \"hidden\"};\r\n  z-index: 3;\r\n\r\n  cursor: pointer;\r\n  pointer: hand;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${(props) =>\r\n      props.hover || (props.bg ? props.bg : \"transparent\")};\r\n    display: none;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${(props) => props.hoverBG || \"#000\"};\r\n    opacity: 0;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:hover:before {\r\n    display: block;\r\n  }\r\n\r\n  &:hover:after {\r\n    opacity: 0.08;\r\n  }\r\n  &:active:after {\r\n    opacity: 0.15;\r\n  }\r\n\r\n  & > div {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport const Showoff = styled.div`\r\n  position: absolute;\r\n  right: ${(props) => props.right || \"auto\"};\r\n  left: ${(props) => props.left || \"auto\"};\r\n  bottom: ${(props) => props.bottom || \"auto\"};\r\n  top: ${(props) => props.top || \"auto\"};\r\n  transform: ${(props) => props.transform || \"initial\"};\r\n  opacity: ${(props) => props.opacity || \"initial\"};\r\n\r\n  @media (max-width: 768px) {\r\n    align-items: ${(props) =>\r\n      (props.tabletAlign\r\n        ? props.tabletAlign\r\n        : props.align\r\n        ? props.align\r\n        : \"center\") || \"center\"};\r\n\r\n    right: ${(props) =>\r\n      (props.tabletRight\r\n        ? props.tabletRight\r\n        : props.right\r\n        ? props.right\r\n        : \"auto\") || \"auto\"};\r\n    left: ${(props) =>\r\n      (props.tabletLeft\r\n        ? props.tabletLeft\r\n        : props.left\r\n        ? props.left\r\n        : \"auto\") || \"auto\"};\r\n    top: ${(props) =>\r\n      (props.tabletTop ? props.tabletTop : props.top ? props.top : \"auto\") ||\r\n      \"auto\"};\r\n    bottom: ${(props) =>\r\n      (props.tabletBottom\r\n        ? props.tabletBottom\r\n        : props.bottom\r\n        ? props.bottom\r\n        : \"auto\") || \"auto\"};\r\n\r\n    transform: ${(props) =>\r\n      (props.tabletTransform\r\n        ? props.tabletTransform\r\n        : props.transform\r\n        ? props.transform\r\n        : \"auto\") || \"auto\"};\r\n\r\n    opacity: ${(props) =>\r\n      (props.tabletOpacity\r\n        ? props.tabletOpacity\r\n        : props.opacity\r\n        ? props.opacity\r\n        : \"auto\") || \"initial\"};\r\n  }\r\n`;\r\n\r\nexport const FormSubmision = styled.form`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n\r\n  flex: ${(props) => props.flex || \"initial\"};\r\n  align-self: ${(props) => props.self || \"auto\"};\r\n  align-items: ${(props) => props.align || \"center\"};\r\n  justify-content: ${(props) => props.justify || \"center\"};\r\n  font-weight: ${(props) => props.weight || 400};\r\n  font-size: ${(props) => props.size || \"inherit\"};\r\n  text-transform: ${(props) => props.textTransform || \"inherit\"};\r\n  color: ${(props) => props.color || \"#fff\"};\r\n  background: ${(props) => props.bg || \"transparent\"};\r\n  margin: ${(props) => props.margin || \"0px\"};\r\n  padding: ${(props) => props.padding || \"0px\"};\r\n  border: ${(props) => props.border || \"none\"};\r\n  border-radius: ${(props) => props.radius || \"0px\"};\r\n  position: relative;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: ${(props) => props.display || \"flex\"};\r\n  flex: ${(props) => props.flex || \"initial\"};\r\n  align-self: ${(props) => props.self || \"auto\"};\r\n  align-items: ${(props) => props.align || \"center\"};\r\n  justify-content: ${(props) => props.justify || \"center\"};\r\n  font-weight: ${(props) => props.weight || 300};\r\n  font-size: ${(props) => props.size || \"inherit\"};\r\n  text-transform: ${(props) => props.textTransform || \"inherit\"};\r\n  color: ${(props) => props.color || \"#000\"};\r\n  background: ${(props) => props.bg || \"transparent\"};\r\n  margin: ${(props) => props.margin || \"0px\"};\r\n  padding: ${(props) => props.padding || \"0px\"};\r\n  letter-spacing: ${(props) => props.spacing || \"inherit\"};\r\n  border: ${(props) => props.border || \"none\"};\r\n  border-radius: ${(props) => props.radius || \"0px\"};\r\n  outline: ${(props) => props.outline || \"none\"};\r\n  overflow: ${(props) => props.overflow || \"hidden\"};\r\n  position: relative;\r\n  visibility: ${(props) => props.visibility || \"\"};\r\n  width: ${(props) => props.maxllength};\r\n  height: ${(props) => props.height};\r\n\r\n  cursor: ${(props) => props.cursor || \"initial\"};\r\n  pointer: ${(props) => props.hand || \"initial\"};\r\n\r\n  &:focus {\r\n    border: ${(props) => props.focusBorder || \"\"};\r\n  }\r\n\r\n  &:focus + span {\r\n    opacity: 0;\r\n    -webkit-transition: all 0.2s ease-in-out;\r\n    -moz-transition: all 0.2s ease-in-out;\r\n    -o-transition: all 0.2s ease-in-out;\r\n    transition: all 0.2s ease-in-out;\r\n  }\r\n`;\r\n\r\nexport const TextField = styled.textarea`\r\n  display: flex;\r\n  flex: ${(props) => props.flex || \"initial\"};\r\n  align-self: ${(props) => props.self || \"auto\"};\r\n  align-items: ${(props) => props.align || \"center\"};\r\n  justify-content: ${(props) => props.justify || \"center\"};\r\n  font-weight: ${(props) => props.weight || 300};\r\n  font-size: ${(props) => props.size || \"inherit\"};\r\n  text-transform: ${(props) => props.textTransform || \"inherit\"};\r\n  color: ${(props) => props.color || \"#000\"};\r\n  background: ${(props) => props.bg || \"transparent\"};\r\n  margin: ${(props) => props.margin || \"0px\"};\r\n  padding: ${(props) => props.padding || \"0px\"};\r\n  letter-spacing: ${(props) => props.spacing || \"inherit\"};\r\n  border: ${(props) => props.border || \"none\"};\r\n  border-radius: ${(props) => props.radius || \"0px\"};\r\n  outline: ${(props) => props.outline || \"none\"};\r\n  overflow: ${(props) => props.overflow || \"hidden\"};\r\n  position: relative;\r\n  resize: vertical;\r\n\r\n  &:focus {\r\n    border: ${(props) => props.focusBorder || \"\"};\r\n  }\r\n\r\n  &:focus + span {\r\n    opacity: 0;\r\n\r\n    -webkit-transition: all 0.2s ease-in-out;\r\n    -moz-transition: all 0.2s ease-in-out;\r\n    -o-transition: all 0.2s ease-in-out;\r\n    transition: all 0.2s ease-in-out;\r\n  }\r\n`;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\"No internet connection found. App is running in offline mode.\");\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport function useDeviceWidthCheck(deviceWidth: number) {\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n  \r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n  \r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n  \r\n    return width <= deviceWidth;\r\n}\r\n  ","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { envConfig } from \"@project/contracts\";\r\nimport { PortisConnector } from '@web3-react/portis-connector'\r\n// import { NetworkConnector } from '@web3-react/network-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\r\nimport { LedgerConnector } from '@web3-react/ledger-connector'\r\nimport { TrezorConnector } from '@web3-react/trezor-connector'\r\nimport { LedgerHQFrameConnector } from \"@epnsproject/sdk-ledgerlive\";\r\n// import { FrameConnector } from '@web3-react/frame-connector'\r\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\r\n// import { FortmaticConnector } from '@web3-react/fortmatic-connector'\r\n// import { SquarelinkConnector } from '@web3-react/squarelink-connector'\r\n// import { TorusConnector } from '@web3-react/torus-connector'\r\n\r\nrequire('dotenv').config();\r\nconst SUPPORTED_CHAIN_IDS = [...envConfig.allowedNetworks];\r\nconst POLLING_INTERVAL = 12000;\r\nconst CORE_CHAIN_ID = envConfig.coreContractChain;\r\nconst CORE_RPC = envConfig.coreRPC;\r\n\r\nconst RPC_URLS: { [chainId: number]: string } = {\r\n  [CORE_CHAIN_ID]: envConfig.coreRPC\r\n}\r\n\r\nexport const injected = new InjectedConnector({ supportedChainIds: SUPPORTED_CHAIN_IDS })\r\n\r\n\r\n// Only receive messages from platform.apps.ledger.com\r\nexport const ledgerLiveConnector = new LedgerHQFrameConnector();\r\n\r\nexport const walletconnect = new WalletConnectConnector({\r\n  rpc: { ...RPC_URLS },\r\n  bridge: 'https://bridge.walletconnect.org',\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL\r\n})\r\n//\r\n// export const walletlink = new WalletLinkConnector({\r\n//   url: RPC_URLS[1],\r\n//   appName: 'web3-react example'\r\n// })\r\n//\r\nexport const ledger = new LedgerConnector({ chainId: CORE_CHAIN_ID, url: CORE_RPC, pollingInterval: POLLING_INTERVAL })\r\n\r\nexport const trezor = new TrezorConnector({\r\n  chainId: CORE_CHAIN_ID,\r\n  url: CORE_RPC,\r\n  pollingInterval: POLLING_INTERVAL,\r\n  manifestEmail: 'support@epns.io',\r\n  manifestAppUrl: 'https://staging-app.epns.io'\r\n})\r\n\r\n//\r\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\r\n//\r\n// export const authereum = new AuthereumConnector({ chainId: 42 })\r\n//\r\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 4 })\r\n\r\nexport const portis = new PortisConnector({ dAppId: 'cfefa032-9afd-4833-bfb4-2b0cb7ec3413' as string, networks: [CORE_CHAIN_ID] })\r\n\r\n// export const squarelink = new SquarelinkConnector({\r\n//   clientId: process.env.SQUARELINK_CLIENT_ID as string,\r\n//   networks: [1, 100]\r\n// })\r\n\r\n// export const torus = new TorusConnector({ chainId: 1 })\r\n","// Usage:\r\n//   create component file (e.g. BlockiesIdenticon.js) using uncommented code below\r\n//   npm install blockies-identicon\r\n//   in the file you want to use the component (e.g. BlockiesIdenticon.js):\r\n//   import Blockies from \"blockies/react-component\";\r\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\r\n\r\nimport React from 'react';\r\nimport blockies from \"./blockies\";\r\n\r\nexport default class BlockiesIdenticon extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  getOpts () {\r\n    return {\r\n      seed: this.props.opts.seed || \"foo\",\r\n      color: this.props.opts.color || \"#dfe\",\r\n      bgcolor: this.props.opts.bgcolor || \"#a71\",\r\n      size: this.props.opts.size || 15,\r\n      scale: this.props.opts.scale || 3,\r\n      spotcolor: this.props.opts.spotcolor || \"#000\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.draw();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    // Check for prop change\r\n    if (this.props.seed !== prevProps.seed) {\r\n      this.draw();\r\n    }\r\n  }\r\n  draw() {\r\n    blockies.render({\r\n      seed: this.props.opts.seed,\r\n      size: this.props.opts.size,\r\n      scale: this.props.opts.scale\r\n    }, this.canvas);\r\n  }\r\n  render() {\r\n    return React.createElement(\"canvas\", {ref: canvas => this.canvas = canvas});\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { Oval } from 'react-loader-spinner'\r\nimport Blockies from \"primaries/BlockiesIdenticon\";\r\n\r\n// Create Header\r\nconst Profile = () => {\r\n  const { error, account, library } = useWeb3React();\r\n\r\n  const [address, setAddress] = React.useState('');\r\n  const [ens, setENS] = React.useState('');\r\n  const [ensFetched, setENSFetched] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (account && account != '') {\r\n      // Check if the address is the same\r\n      if (address !== account) {\r\n        setENS('');\r\n        setENSFetched(false);\r\n\r\n        // get ens\r\n        library\r\n          .lookupAddress(account).then(function (name) {\r\n            setENS(name);\r\n            setENSFetched(true);\r\n            setAddress(account);\r\n          })\r\n          .catch(() => {\r\n            setENSFetched(true);\r\n            setAddress(account);\r\n          })\r\n      }\r\n\r\n    }\r\n  }, [account]);\r\n\r\n  // to create blockies\r\n\r\n  return (\r\n    <>\r\n      {account && account !== '' && !error &&\r\n        <Container>\r\n          <Blocky>\r\n            <BlockyInner>\r\n              <Blockies seed={account.toLowerCase()} opts={{ seed: account.toLowerCase(), size: 7, scale: 7 }} />\r\n            </BlockyInner>\r\n          </Blocky>\r\n          <Wallet>\r\n            {!ensFetched &&\r\n              <Oval\r\n                color=\"#FFF\"\r\n                height={16}\r\n                width={16}\r\n              />\r\n            }\r\n            {ensFetched && ens &&\r\n              <>{ens}</>\r\n            }\r\n            {ensFetched && !ens &&\r\n              <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\r\n            }\r\n          </Wallet>\r\n        </Container>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.button`\r\n  margin: 0;\r\n  padding: 0;\r\n  background: none;\r\n  border: 0;\r\n  outline: 0;\r\n  justify-content: flex-start;\r\n  flex: 1,\r\n  flex-direction: row;\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst Blocky = styled.div`\r\n  position: relative;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 100%;\r\n  overflow: hidden;\r\n  transform: scale(0.85);\r\n  outline-width: 2px;\r\n  outline-color: rgba(225,225,225,1);\r\n`\r\n\r\nconst BlockyInner = styled.div`\r\n`\r\n\r\nconst Wallet = styled.span`\r\n  margin: 0px 10px;\r\n  padding: 8px 15px;\r\n  height: 16px;\r\n  display: flex;\r\n  align-items: baseline;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  color: #fff;\r\n  border-radius: 15px;\r\n  background: rgb(226,8,128);\r\n  background: linear-gradient(107deg, rgba(226,8,128,1) 30%, rgba(103,76,159,1) 70%, rgba(53,197,243,1) 100%);\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\n\r\n// Export Default\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { AnimateOnChange } from 'react-animation';\r\n\r\n// Create Header\r\nfunction Bell({ badgeCount, bellPressedCB, width, height }) {\r\n  const [badge, setBadge] = React.useState(0);\r\n  const [ring, setRing] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    // Set new badge count and ring the bell\r\n    setBadge(badgeCount);\r\n\r\n    if (badge > 0) {\r\n      setResetRinger();\r\n    }\r\n  }, [badgeCount]);\r\n\r\n  const setResetRinger = () => {\r\n    setRing(true);\r\n\r\n    setTimeout(() => {\r\n        setRing(false)\r\n    }, 500);\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      onClick={() => {\r\n        if (bellPressedCB) {bellPressedCB();}\r\n      }}\r\n      width={width}\r\n      height={height}\r\n    >\r\n      <BellImage ring={ring} src=\"./bell.png\" className=\"tadaaa\" ringme={ring} width={width} height={height} />\r\n      <BellImageAbs src=\"./bellball.png\" width={width} height={height} />\r\n      <BellImageAbs src=\"./ring.png\" width={width} height={height} />\r\n      {badge != 0 &&\r\n        <AnimateOnChange\r\n          animationIn=\"fadeIn\"\r\n          animationOut=\"fadeOut\"\r\n          durationOut={200}\r\n        >\r\n          <Badge>{badge}</Badge>\r\n        </AnimateOnChange>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  background: transparent;\r\n  border: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0px;\r\n  position: relative;\r\n  height: ${props => props.height || 40}px;\r\n  width: ${props => props.width || 40}px;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\n\r\nconst tadaaa = keyframes`\r\n  0% {\r\n    -webkit-transform: scale3d(1, 1, 1);\r\n    -ms-transform: scale3d(1, 1, 1);\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%, 20% {\r\n    -webkit-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\r\n    -ms-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\r\n    transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\r\n  }\r\n\r\n  30%, 50%, 70%, 90% {\r\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\r\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\r\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\r\n  }\r\n\r\n  40%, 60%, 80% {\r\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\r\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\r\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\r\n  }\r\n\r\n  100% {\r\n    -webkit-transform: scale3d(1, 1, 1);\r\n    -ms-transform: scale3d(1, 1, 1);\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n`;\r\n\r\nconst BellImage = styled.img`\r\n  position: absolute;\r\n  height: ${props => props.height || 40}px;\r\n  width: ${props => props.width || 40}px;\r\n\r\n  transition: transform .2s ease-out;\r\n  ${ props => props.ringme && css`\r\n    animation: ${tadaaa} 1s ease-out;\r\n  `};\r\n\r\n\r\n`\r\n\r\nconst BellImageAbs = styled(BellImage)`\r\n  left: 0,\r\n`\r\n\r\nconst Badge = styled.span`\r\n  position: absolute;\r\n  font-size: 10px;\r\n  color: #fff;\r\n  padding: 2px 4px;\r\n  border-radius: 100%;\r\n  background: rgba(208.0, 44.0, 30.0, 1.0);\r\n  top: 0px;\r\n  left: 5px;\r\n  font-weight: bold;\r\n`\r\n\r\n// Export Default\r\nexport default Bell;\r\n","export default {\r\n    LINKS: {\r\n      IOS_APP: 'https://apps.apple.com/app/ethereum-push-service-epns/id1528614910',\r\n      ANDROID_APP: 'https://play.google.com/store/apps/details?id=io.epns.epns&hl=mr&gl=US'\r\n    },\r\n  \r\n    // For Async Storage --> Represents Key and some Constants\r\n    STORAGE: {\r\n  \r\n    },\r\n  \r\n    CONSTANTS: {\r\n      HEADER_HEIGHT: 70,\r\n      LEFT_BAR_WIDTH: 260,\r\n\r\n      NAVBAR_SECTIONS: {\r\n        PRIMARY: 1,\r\n        SECONDARY: 2,\r\n        MOBILE: 3\r\n      },\r\n\r\n      NAVBAR_IDENTIFIERS: {\r\n        CREATE_CHANNEL: 1,\r\n        COMMUNICATE_TAB: 2,\r\n        DEVELOPER_TAB: 3,\r\n      }\r\n    },\r\n  \r\n    ADJUSTMENTS: {\r\n    },\r\n  \r\n    COLORS: {\r\n      PRIMARY: 'rgba(27.0, 150.0, 227.0, 1.0)',\r\n  \r\n      LINKS: 'rgba(20.0, 126.0, 251.0, 1.0)',\r\n  \r\n      GRADIENT_PRIMARY: 'rgba(226.0, 8.0, 128.0, 1.0)',\r\n      GRADIENT_SECONDARY: 'rgba(53.0, 197.0, 243.0, 1.0)',\r\n      GRADIENT_THIRD: 'rgba(103.0, 76.0, 159.0, 1.0)',\r\n  \r\n      TRANSPARENT: 'transparent',\r\n  \r\n      WHITE: 'rgba(255.0, 255.0, 255.0, 1.0)',\r\n      DARK_WHITE: 'rgba(255.0, 255.0, 255.0, 0.75)',\r\n      MID_WHITE: 'rgba(255.0, 255.0, 255.0, 0.5)',\r\n      LIGHT_WHITE: 'rgba(255.0, 255.0, 255.0, 0.25)',\r\n  \r\n      SLIGHTER_GRAY: 'rgba(250.0, 250.0, 250.0, 1)',\r\n      SLIGHT_GRAY: 'rgba(231.0, 231.0, 231.0, 1)',\r\n      LIGHT_GRAY: 'rgba(225.0, 225.0, 225.0, 1)',\r\n      MID_GRAY: 'rgba(200.0, 200.0, 200.0, 1)',\r\n      DARK_GRAY: 'rgba(160.0, 160.0, 160.0, 1)',\r\n      DARKER_GRAY: 'rgba(100.0, 100.0, 100.0, 1)',\r\n  \r\n      LIGHT_BLACK_TRANS: 'rgba(0.0, 0.0, 0.0, 0.1)',\r\n      SEMI_MID_BLACK_TRANS: 'rgba(0.0, 0.0, 0.0, 0.25)',\r\n      MID_BLACK_TRANS: 'rgba(0.0, 0.0, 0.0, 0.5)',\r\n      DARK_BLACK_TRANS: 'rgba(0.0, 0.0, 0.0, 0.75)',\r\n      BLACK: 'rgba(0.0, 0.0, 0.0, 1.0)',\r\n  \r\n      CONFIRM_GREEN: 'rgba(50.0, 205.0, 50.0, 1.0)',\r\n  \r\n      CONFIRM: 'rgba(34.0, 139.0, 34.0, 1.0)',\r\n      WARNING: 'rgba(255.0, 153.0, 0.0, 1.0)',\r\n  \r\n      SUBLIME_RED: 'rgba(237.0, 59.0, 72.0, 1.0)',\r\n      BADGE_RED: 'rgba(208.0, 44.0, 30.0, 1.0)',\r\n      LIGHT_MAROON: 'rgba(159.0, 0.0, 0.0, 1.0)',\r\n      LIGHTER_MAROON: 'rgba(129.0, 0.0, 0.0, 1.0)',\r\n    },\r\n  };\r\n  ","import React from \"react\";\r\nimport { BiChevronDown, BiChevronUp } from 'react-icons/bi';\r\n\r\nimport styled, { useTheme, css } from \"styled-components\";\r\nimport {ItemH, Span, Anchor, RouterLink, Image} from 'primaries/SharedStyling';\r\n\r\nimport { themeDark } from \"config/Themization\";\r\nimport GLOBALS from \"config/Globals\";\r\n\r\n// Create Header\r\nfunction NavigationButton({ item, data, sectionID, active }) {\r\n  const theme = useTheme();\r\n\r\n  let SelectedIcon;\r\n  let RouteLogic;\r\n  let definedMargin;\r\n\r\n  switch(sectionID) {\r\n    case GLOBALS.CONSTANTS.NAVBAR_SECTIONS.MOBILE:\r\n      SelectedIcon = LeftBarPrimaryItemIcon;\r\n      definedMargin = \"5px\";\r\n      break;\r\n    case GLOBALS.CONSTANTS.NAVBAR_SECTIONS.SECONDARY:\r\n      SelectedIcon = item.isSection ? LeftBarSecondarySectionIcon : LeftBarSecondaryItemIcon;\r\n      definedMargin = item.isSection ? \"0px\" : \"5px\";\r\n      break;\r\n    default:\r\n      SelectedIcon = item.isSection ? LeftBarPrimarySectionIcon : LeftBarPrimaryItemIcon;\r\n      definedMargin = item.isSection ? \"0px\" : \"5px\";\r\n  }\r\n\r\n  if (data.isRoute) {\r\n    RouteLogic = RouterLink;\r\n  }\r\n  else {\r\n    RouteLogic = Anchor;\r\n  }\r\n\r\n  return (\r\n    <RouteLogic\r\n      style={{display: data.name==='Hide'? 'none': 'block'}}\r\n      flex=\"1\"\r\n      title={`${data.title}`}\r\n      to={`${data.href ? data.href : '#'}`}\r\n      href={`${data.href ? data.href : '#'}`}\r\n      alt={`${data.alt}`}\r\n      target={data.isRoute ? null : data.newTab ? \"_blank\" : \"self\"}\r\n      disabled={data.disabled}\r\n      hoverBG={theme.leftBarHoverColor}\r\n      radius=\"12px\"\r\n      align=\"stretch\"\r\n      padding=\"10px\"\r\n      margin={definedMargin}\r\n      active={active}\r\n      className={data?.name?.toLowerCase()}\r\n    >\r\n      <ItemH\r\n          align=\"center\"\r\n      >\r\n          <SelectedIcon\r\n            src={`./${data.src}`}\r\n            margin=\"0 5px\"\r\n            alt={`${data.alt}`}\r\n            active={active}\r\n          />\r\n          \r\n          <Span \r\n            flex=\"1\" \r\n            weight=\"400\"\r\n            spacing=\"0\"\r\n            margin=\"0 5px\"\r\n            color={theme.leftBarFontColor}\r\n          >\r\n            {data.name}\r\n          </Span>\r\n          \r\n          {item.hasItems && !item.opened &&\r\n            <BiChevronDown\r\n              color={theme.leftBarFontColor}\r\n            />\r\n          }\r\n\r\n          {item.hasItems && item.opened &&\r\n            <BiChevronUp\r\n              color={theme.leftBarFontColor}\r\n            />\r\n          }\r\n      </ItemH>\r\n    </RouteLogic>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst InheritedSectionGroupIcon = styled(Image)`\r\n  height: 32px;\r\n  width: 32px;\r\n  margin: 0 5px;\r\n\r\n  filter: ${(props) => props.active ? \"brightness(1)\" : props.theme === themeDark ? \"brightness(0) invert(1)\" : \"brightness(0)\"};\r\n  opacity: ${(props) => props.active ? \"1\" : props.theme === themeDark ? \"0.5\" : \"0.25\"};\r\n\r\n  transition: transform .1s ease-out;\r\n  ${ props => props.active && css`\r\n    transform: scale(1.1) translate(0px, 0px);\r\n  `};\r\n`\r\n\r\nconst InheritedSectionItemIcon = styled(Image)`\r\n  height: 16px;\r\n  width: 16px;\r\n  margin: 0 5px;\r\n\r\n  filter: ${(props) => props.active ? \"brightness(1)\" : props.theme === themeDark ? \"brightness(0) invert(1)\" : \"brightness(0)\"};\r\n  opacity: ${(props) => props.active ? \"1\" : props.theme === themeDark ? \"0.5\" : \"0.25\"};\r\n\r\n  transition: transform .1s ease-out;\r\n  ${ props => props.active && css`\r\n    transform: scale(1.25) translate(0px, 0px);\r\n  `};\r\n\r\n`\r\n\r\nconst LeftBarPrimarySectionIcon = styled(InheritedSectionGroupIcon)`\r\n\r\n`\r\n\r\nconst LeftBarPrimaryItemIcon = styled(InheritedSectionItemIcon)`\r\n\r\n`\r\n\r\n\r\nconst LeftBarSecondarySectionIcon = styled(InheritedSectionGroupIcon)`\r\n  height: 16px;\r\n  width: 16px;\r\n`\r\n\r\nconst LeftBarSecondaryItemIcon = styled(InheritedSectionItemIcon)`\r\n\r\n`\r\n\r\n// Export Default\r\nexport default NavigationButton;\r\n","import React, { createContext, useState } from 'react'\r\n\r\nexport const NavigationContext = createContext({\r\n  navigationSetup: null,\r\n  setNavigationSetup: (value: any) => {}\r\n});\r\n\r\nconst NavigationContextProvider = (props) => {\r\n  const [navigationSetup, setNavigationSetup] = useState(null);\r\n  \r\n  return (\r\n    <NavigationContext.Provider value={{ navigationSetup, setNavigationSetup }}>\r\n      {props.children}\r\n    </NavigationContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NavigationContextProvider;","import React, { useContext } from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\r\n} from '@web3-react/injected-connector'\r\nimport { Web3Provider } from 'ethers/providers'\r\nimport { hexlify } from \"ethers/utils\";\r\n\r\nimport { DarkModeSwitch } from 'react-toggle-dark-mode';\r\n\r\nimport { AiOutlineMenu, AiOutlineClose } from 'react-icons/ai';\r\n\r\nimport styled, { css, useTheme } from \"styled-components\";\r\nimport {Section, Item, ItemH, Button, Span} from 'primaries/SharedStyling';\r\n\r\nimport Profile from 'primaries/Profile';\r\nimport Bell from 'primaries/Bell';\r\nimport NavigationButton from 'components/NavigationButton';\r\n\r\nimport { NavigationContext } from \"contexts/NavigationContext\";\r\n\r\nimport GLOBALS from \"config/Globals\";\r\nimport { envConfig } from \"@project/contracts\";\r\n\r\n\r\n// Create Header\r\nfunction Header({ isDarkMode, darkModeToggle }) {\r\n  // Get theme\r\n  const theme = useTheme();\r\n\r\n  // Get Web3 Context\r\n  const context = useWeb3React<Web3Provider>()\r\n\r\n  const { navigationSetup } = useContext(NavigationContext)\r\n\r\n  const { active, error } = useWeb3React();\r\n  const { deactivate } = context\r\n\r\n  const [showLoginControls, setShowLoginControls] = React.useState(false);\r\n\r\n  // Handle Nav Bar\r\n  const [showNavBar, setShowNavBar] = React.useState(false);\r\n\r\n  // Handle Header Tag\r\n  const [ headerTag, setHeaderTag ] = React.useState(null);\r\n\r\n  // Get Location\r\n  const location = useLocation();\r\n\r\n  React.useEffect(() => {\r\n    // runs when navigation setup is updated, will run on init\r\n    updateHeaderTag(location)\r\n  }, [navigationSetup])\r\n\r\n  // Change text based on change of location\r\n  React.useEffect(() => {\r\n    // runs on location, i.e. route, change\r\n    updateHeaderTag(location)\r\n  }, [location])\r\n\r\n  // handle header tag update\r\n  const updateHeaderTag = (location) => {\r\n    if (navigationSetup) {\r\n      Object.entries(navigationSetup.navigation).forEach(([key, value]) => {\r\n        const item = navigationSetup.navigation[key];\r\n        if (location.pathname === item.data.href) {\r\n          setHeaderTag(item.data.headerTag);\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\nasync function handleChangeNetwork(){\r\nconst chainIds = envConfig.allowedNetworks;\r\n  if (!chainIds.includes(window.ethereum.networkVersion)) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: 'wallet_switchEthereumChain',\r\n            params: [{ chainId: hexlify(envConfig.coreContractChain) }]\r\n          });\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      }\r\n}\r\n\r\n  // handle error functions\r\n  function getErrorMessage(error: Error) {\r\n    if (error instanceof NoEthereumProviderError) {\r\n      return 'Web3 not enabled, install MetaMask on desktop or visit from a dApp browser on mobile'\r\n    } else if (error instanceof UnsupportedChainIdError) {\r\n      handleChangeNetwork();\r\n      if(envConfig.coreContractChain === 42)\r\n      return \"Unsupported Network, please connect to the Ethereum Kovan network or Polygon Mumbai network\"\r\n      else \r\n      return \"Unsupported Network, please connect to the Ethereum Mainnet network\"\r\n    } else if (\r\n      error instanceof UserRejectedRequestErrorInjected\r\n    ) {\r\n      return 'Please authorize this website to access the dApp'\r\n    } else {\r\n      console.error(error)\r\n      return 'An unknown error occurred. Check the console for more details'\r\n    }\r\n  }\r\n\r\n  const bellPressed = () => {\r\n    setShowLoginControls(!showLoginControls);\r\n  }\r\n\r\n  const disconnect = () => {\r\n    setShowLoginControls(false);\r\n    deactivate();\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      direction=\"row\"\r\n      padding=\"0px 15px\"\r\n    >\r\n      \r\n      <ItemH\r\n        justify=\"flex-start\"\r\n        flex=\"0\"\r\n      >\r\n        <RightBarContainer\r\n          justify=\"flex-start\"\r\n          flex=\"0\"\r\n        >\r\n          <RightBarDesktop\r\n            justify=\"flex-start\"\r\n            flex=\"0\"\r\n          >\r\n            {active && !error &&\r\n              <Profile />\r\n            }\r\n            {!active &&\r\n              <Logo src=\"epns.png\" />\r\n            }\r\n          </RightBarDesktop>\r\n          \r\n          {active && !error &&\r\n            <RightBarMobile>\r\n              <Button\r\n                bg=\"transparent\"\r\n                padding=\"5px\"\r\n                radius=\"4px\"\r\n                onClick={() => {setShowNavBar(!showNavBar)}}\r\n              >\r\n                <AiOutlineMenu size={30} color={theme.headerIconsBg}/>\r\n              </Button>\r\n            </RightBarMobile>\r\n          }\r\n        </RightBarContainer>\r\n        \r\n        {navigationSetup && showNavBar && active && !error &&\r\n          <NavMenuContainer\r\n            tabletAlign=\"flex-start\"\r\n          >\r\n            <NavMenu>\r\n              <Profile />\r\n\r\n              <NavMenuInner\r\n                tabletAlign=\"flex-start\"\r\n              >\r\n                {Object.keys(navigationSetup.navigation).map(function(key) {\r\n                  return (\r\n                    <Item\r\n                      onClick={() => {setShowNavBar(!showNavBar)}}\r\n                    >\r\n                      <NavigationButton\r\n                        item={navigationSetup.navigation[key]}\r\n                        data={navigationSetup.navigation[key].data}\r\n                        sectionID={GLOBALS.CONSTANTS.NAVBAR_SECTIONS.MOBILE}\r\n                        active={navigationSetup.navigation[key].active}\r\n                      />\r\n                    </Item>\r\n                  );\r\n                })}\r\n              </NavMenuInner>\r\n            </NavMenu>\r\n\r\n            <Item\r\n              position=\"absolute\"\r\n              top=\"15px\"\r\n              right=\"5px\"\r\n            >\r\n              <Button\r\n                bg=\"transparent\"\r\n                padding=\"5px\"\r\n                radius=\"4px\"\r\n                onClick={() => {setShowNavBar(!showNavBar)}}\r\n              >\r\n                <AiOutlineClose size={30} color={theme.headerIconsBg}/>\r\n              </Button>\r\n            </Item>\r\n\r\n          </NavMenuContainer>\r\n        }\r\n      </ItemH>\r\n\r\n      <ItemH\r\n        justify=\"flex-end\"\r\n      >\r\n        {headerTag && active && !error &&\r\n          <HeaderTag\r\n            align=\"flex-start\"\r\n            overflow=\"hidden\"\r\n            margin=\"0px 5px\"\r\n          >\r\n            <Span\r\n              textTransform=\"uppercase\"\r\n              spacing=\"0.1em\"\r\n              weight=\"normal\"\r\n              padding=\"8px 15px\"\r\n              bg={!isDarkMode ? headerTag.light.bg : headerTag.dark.bg}\r\n              color={!isDarkMode ? headerTag.light.fg : headerTag.dark.fg}\r\n            >\r\n              {headerTag.title}\r\n            </Span>\r\n          </HeaderTag>\r\n        }\r\n        \r\n\r\n       \r\n           \r\n        {active && !error &&\r\n          <Bell\r\n            badgeCount={0}\r\n            bellPressedCB={bellPressed}\r\n            width={32}\r\n            height={32}\r\n          />\r\n        }\r\n         <DarkModeSwitch\r\n              style={{ margin: '0 1rem' }}\r\n              checked={isDarkMode}\r\n              onChange={darkModeToggle}\r\n              size={24}\r\n              sunColor=\"#ddd\"\r\n            />\r\n\r\n        {showLoginControls &&\r\n          <Item\r\n            position=\"absolute\"\r\n          >\r\n            <Button\r\n              bg=\"#000\"\r\n              size=\"12px\"\r\n              spacing=\"0.2em\"\r\n              textTransform=\"uppercase\"\r\n              weight=\"600\"\r\n              radius=\"20px\"\r\n              onClick={disconnect}\r\n            >\r\n              Disconnect\r\n            </Button>\r\n          </Item>\r\n        }\r\n\r\n        <ItemH\r\n          justify=\"flex-end\"\r\n          flex=\"initial\"\r\n        >\r\n          {!!error &&\r\n            <PrimaryTheme>{getErrorMessage(error)}</PrimaryTheme>\r\n          }\r\n          {!active && !error &&\r\n            <ThirdTheme>Please connect to a Web3 Network</ThirdTheme>\r\n          }\r\n          <Connection phase={active ? 'active' : error ? 'error' : 'waiting'} />\r\n        </ItemH>\r\n      </ItemH>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// CSS Styles\r\nconst Container = styled(Section)`\r\n  background: ${props => props.theme.headerBg};\r\n  border-bottom: 1px solid ${props => props.theme.sectionBorderBg};\r\n  height: ${GLOBALS.CONSTANTS.HEADER_HEIGHT}px;\r\n`\r\n\r\nconst Logo = styled.img`\r\n  height: 40px;\r\n`\r\n\r\nconst RightBarContainer = styled(ItemH)`\r\n\r\n`\r\n\r\nconst RightBarDesktop = styled(ItemH)`\r\n  @media (max-width: 992px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst RightBarMobile = styled(ItemH)`\r\n  margin: 5px 5px 5px -5px;\r\n  \r\n  @media (min-width: 993px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst NavMenuContainer = styled(Item)`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n  z-index: 1;\r\n  align-items: flex-start;\r\n\r\n  background: ${props => props.theme.navMenuBg};\r\n  backdrop-filter: blur(30px);\r\n  z-index: 11;\r\n`\r\n\r\nconst NavMenu = styled(Item)`\r\n  align-items: stretch;\r\n  justify-content: flex-start;\r\n  padding: 10px 10px;\r\n`\r\n\r\nconst NavMenuInner = styled(Item)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n  overflow-y: scroll;\r\n  height: calc(100vh - 70px);\r\n`\r\n\r\nconst Notice = styled.span`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n`\r\n\r\nconst PrimaryTheme = styled(Notice)`\r\n  background: #e20880;\r\n`\r\n\r\nconst ThirdTheme = styled(Notice)`\r\n  background: #674c9f;\r\n`\r\n\r\nconst Connection = styled.span`\r\n  height: 10px;\r\n  width: 10px;\r\n  border-radius: 100%;\r\n  flex-shrink: 0;\r\n\r\n  ${props => props.phase === 'active' && css`\r\n    background: #77DD77;\r\n  `};\r\n\r\n  ${props => props.phase === 'waiting' && css`\r\n    background: #FFAE42;\r\n  `};\r\n\r\n  ${props => props.phase === 'error' && css`\r\n    background: #DC143C;\r\n  `};\r\n`\r\n\r\nconst HeaderTag = styled(Item)`\r\n  flex: 1;\r\n  margin=\"5px 15px 5px 15px\"\r\n\r\n  @media (min-width: 993px) {\r\n    margin: \"5px 10px\";\r\n  }\r\n`\r\n\r\nconst DarkMode = styled(Item)`\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\n// Export Default\r\nexport default Header;\r\n","import { themeLight, themeDark } from \"config/Themization\";\r\nimport GLOBALS from \"config/Globals\";\r\n\r\nconst NavigationList = {\r\n    primary: {\r\n      communicate: {\r\n        uid: GLOBALS.CONSTANTS.NAVBAR_IDENTIFIERS.COMMUNICATE_TAB,\r\n        src: \"svg/communicate.svg\",\r\n        iconFactory: null,\r\n        name: 'Communicate',\r\n        title: 'Communicate Tab',\r\n        alt: 'Communicate Tab Icon',\r\n        href: null,\r\n        newTab: false,\r\n        isRoute: true,\r\n        hasMenuLogic: true,\r\n        opened: true,\r\n  \r\n        drilldown: {\r\n          inbox: {\r\n            src: \"svg/feedbox.svg\",\r\n            iconFactory: null,\r\n            name: 'Inbox',\r\n            title: 'Inbox',\r\n            alt: 'Open Inbox',\r\n            href: '/inbox',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: 'Inbox',\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_PRIMARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          spam: {\r\n            src: \"svg/spam.svg\",\r\n            iconFactory: null,\r\n            name: 'Spam',\r\n            title: 'Spam',\r\n            alt: 'Open Spam',\r\n            href: '/spam',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: 'Spam',\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_PRIMARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },  \r\n          channels: {\r\n            src: \"svg/channel.svg\",\r\n            iconFactory: null,\r\n            name: 'Channels',\r\n            title: 'Browse Channels',\r\n            alt: 'Open Channels',\r\n            href: '/channels',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: 'View Channels',\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          receiveNotifs: {\r\n            src: \"svg/share.svg\",\r\n            iconFactory: null,\r\n            name: 'Receive Notifs',\r\n            title: 'Receive Notifs',\r\n            alt: 'Receive Notifs',\r\n            href: '/receive',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: 'Receive Notifications',\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_THIRD,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n        }\r\n      },\r\n      developer: {\r\n        uid: GLOBALS.CONSTANTS.NAVBAR_IDENTIFIERS.DEVELOPER_TAB,\r\n        src: \"svg/developer.svg\",\r\n        iconFactory: null,\r\n        name: 'Developer',\r\n        title: 'Check Developer Tab',\r\n        alt: 'Developer Tab Icon',\r\n        href: null,\r\n        newTab: false,\r\n        opened: false,\r\n        isRoute: true,\r\n        hasMenuLogic: true,\r\n  \r\n        drilldown: {\r\n          createChannel: {\r\n            uid: GLOBALS.CONSTANTS.NAVBAR_IDENTIFIERS.CREATE_CHANNEL,\r\n            src: \"svg/channeladmin.svg\",\r\n            iconFactory: null,\r\n            name: 'Create Channel',\r\n            title: 'Create Channel',\r\n            alt: 'Create Channels / Dashboard',\r\n            href: '/dashboard',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: 'Channel Dashboard',\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          sendNotifs: {\r\n            uid: GLOBALS.CONSTANTS.NAVBAR_IDENTIFIERS.SEND_NOTIFS,\r\n            src: \"svg/send.svg\",\r\n            iconFactory: null,\r\n            name: 'Send Notifications',\r\n            title: 'Send Notifications',\r\n            alt: 'Send Notifs',\r\n            href: '/send',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: 'Send Notifications',\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          developerGuide: {\r\n            uid: GLOBALS.CONSTANTS.NAVBAR_IDENTIFIERS.DEVELOPER_GUIDE,\r\n            src: \"svg/tutorial.svg\",\r\n            iconFactory: null,\r\n            name: \"Developer's Guide\",\r\n            title: \"Developer's Guide\",\r\n            alt: \"Developer's Guide\",\r\n            href: 'https://docs.epns.io/',\r\n            newTab: false,\r\n            isRoute: false,\r\n            hasMenuLogic: false,\r\n            headerTag: {\r\n              title: \"Developer's Guide\",\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          dynamicEnviroment: {\r\n            src: \"svg/network.svg\",\r\n            iconFactory: null,\r\n            name: window.location.hostname == \"app.epns.io\" ? \"Staging dApp\" : \"Prod dApp\",\r\n            title: window.location.hostname == \"app.epns.io\" ? \"Staging dApp\" : \"Prod dApp\",\r\n            alt: window.location.hostname == \"app.epns.io\" ? \"Checkout Staging dApp\" : \"Checkout Prod dApp\",\r\n            href: window.location.hostname == \"app.epns.io\" ? \"https://staging-app.epns.io\" : \"https://app.epns.io\",\r\n            newTab: false,\r\n            isRoute: false,\r\n            hasMenuLogic: false,\r\n            headerTag: {\r\n              title: \"Various dApp Enviroments\",\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          // createTestChannel: {\r\n          //   uid: GLOBALS.CONSTANTS.NAVBAR_IDENTIFIERS.CREATE_TEST_CHANNEL,\r\n          //   src: \"svg/news.svg\",\r\n          //   iconFactory: null,\r\n          //   name: 'Create Test Channel',\r\n          //   title: 'Go To Staging Environment To Create a Test Channel',\r\n          //   alt: 'Create A Test Channel',\r\n          //   href: 'https://staging-app.epns.io/#/dashboard',\r\n          //   newTab: false,\r\n          //   isRoute: false,\r\n          //   hasMenuLogic: true,\r\n          //   headerTag: {\r\n          //     title: 'Create A Test Channel',\r\n          //     light: {\r\n          //       bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n          //       fg: themeLight.headerTagFg,\r\n          //     },\r\n          //     dark: {\r\n          //       bg: themeDark.headerTagBg,\r\n          //       fg: themeDark.headerTagFg,\r\n          //     }\r\n          //   }\r\n          // },\r\n        },\r\n      },\r\n      govern: {\r\n        src: \"svg/govern.svg\",\r\n        iconFactory: null,\r\n        name: 'Govern',\r\n        title: 'Governance Tab',\r\n        alt: 'Governance Tab Icon', \r\n        href: null,\r\n        newTab: false,\r\n        opened: false,\r\n        isRoute: true,\r\n        hasMenuLogic: true,\r\n  \r\n        drilldown: {\r\n          governance: {\r\n            uid: GLOBALS.CONSTANTS.NAVBAR_IDENTIFIERS.GOVERNANCE,\r\n            src: \"svg/governalt.svg\",\r\n            iconFactory: null,\r\n            name: 'Governance',\r\n            title: 'Governance',\r\n            alt: 'Governance',\r\n            href: '/govern',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: 'Governance',\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          governanceGuide: {\r\n            uid: GLOBALS.CONSTANTS.NAVBAR_IDENTIFIERS.GOVERNANCE_GUIDE,\r\n            src: \"svg/tutorial.svg\",\r\n            iconFactory: null,\r\n            name: \"Learn to Govern\",\r\n            title: \"Learn to Govern\",\r\n            alt: \"Learn to Govern\",\r\n            href: 'https://docs.epns.io/governance/epns-governance/governance-guide',\r\n            newTab: false,\r\n            isRoute: false,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: \"Learn to Govern\",\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n        },\r\n      },\r\n      incentives: {\r\n        src: \"svg/incentive.svg\",\r\n        iconFactory: null,\r\n        name: 'Incentives',\r\n        title: 'Check Incentives Tab',\r\n        alt: 'Incentives Tab Icon',\r\n        href: null,\r\n        newTab: false,\r\n        opened: false,\r\n        isRoute: true,\r\n        hasMenuLogic: true,\r\n  \r\n        drilldown: {\r\n          yield: {\r\n            src: \"svg/yield.svg\",\r\n            iconFactory: null,\r\n            name: 'Yield Farming',\r\n            title: 'Yield Farming',\r\n            alt: 'Open Yield Farming',\r\n            href: '/yield',\r\n            newTab: false,\r\n            isRoute: true,  \r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: \"Yield Farming\",\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_PRIMARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          rockstars: {\r\n            src: \"svg/rockstars.svg\",\r\n            iconFactory: null,\r\n            name: 'Rockstars of EPNS',\r\n            title: 'Check Rockstars of EPNS',\r\n            alt: 'Open Inbox',\r\n            href: '/rockstar',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: \"Rockstars NFTs\",\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          airdrop: {\r\n            src: \"svg/gratitude.svg\",\r\n            iconFactory: null,\r\n            name: 'Gratitude Drop',\r\n            title: 'Check Gratitude Drop',\r\n            alt: 'Open Gratitude Drop',\r\n            href: '/gratitude',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: \"Gratitude Drop\",\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_THIRD,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },      \r\n        }\r\n      },\r\n      walkthrough: {\r\n        src: \"svg/walkthrough.svg\",\r\n        iconFactory: null,\r\n        name: 'Walkthrough',\r\n        title: 'Check Walkthrough Tab',\r\n        alt: 'Walkthrough Tab Icon',\r\n        href: null,\r\n        newTab: false,\r\n        opened: false,\r\n        isRoute: true,\r\n        hasMenuLogic: true,\r\n  \r\n        drilldown: {\r\n          livewalkthrough: {\r\n            src: \"svg/tutorial.svg\",\r\n            iconFactory: null,\r\n            name: 'Live Walkthrough',\r\n            title: 'Live Walkthrough',\r\n            alt: 'Start Live Walkthrough',\r\n            href: '/live_walkthrough',\r\n            newTab: false,\r\n            isRoute: true,  \r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: \"Live Walkthrough\",\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          faq: {\r\n            src: \"svg/qna.svg\",\r\n            iconFactory: null,\r\n            name: 'FAQs',\r\n            title: 'Checkout Frequently Asked Questions',\r\n            alt: 'Open FAQs',\r\n            href: '/faq',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: \"FAQ\",\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_PRIMARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          quickGuide: {\r\n            src: \"svg/tutorial.svg\",\r\n            iconFactory: null,\r\n            name: \"Quick Guide\",\r\n            title: \"Quick Guide\",\r\n            alt: \"Quick Guide\",\r\n            href: 'https://getstarted.epns.io/',\r\n            newTab: false,\r\n            isRoute: false,\r\n            hasMenuLogic: false,\r\n            headerTag: {\r\n              title: \"Quick Guide\",\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n        } \r\n      }\r\n    },\r\n    secondary: {\r\n      latest: {\r\n        src: \"svg/news.svg\",\r\n        iconFactory: null,\r\n        name: 'Latest',\r\n        title: 'Checkout latest news',\r\n        alt: \"Open What's Latest\",\r\n        // href: 'https://staging-dapp.epns.io',\r\n        id:\"olvy-target\",\r\n        newTab: false,\r\n        opened: false,\r\n        isRoute: true,\r\n        isMenuLogic: false,\r\n      },\r\n      support: {\r\n        src: \"svg/support.svg\",\r\n        iconFactory: null,\r\n        name: 'Support',\r\n        title: 'Open a support ticket',\r\n        alt: 'Open Support Ticket',\r\n        href: '/support',\r\n        newTab: false,\r\n        opened: false,\r\n        isRoute: true,\r\n        isMenuLogic: false,\r\n      },\r\n    },\r\n  }\r\n  \r\n  export default NavigationList;\r\n  \r\n","/**\r\n * This file helps us to maintain the state of the user journey tutorial\r\n */\r\n import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n const initialState = {\r\n   run: false,\r\n   stepIndex: 0,\r\n   welcomeNotifs: [],// only welcome notifications\r\n   tutorialContinous: false,\r\n   isCommunicateOpen: false,\r\n   isDeveloperOpen: false,\r\n };\r\n \r\n export const userJourneySlice = createSlice({\r\n     name: \"tutorial\",\r\n     initialState,\r\n     reducers: {\r\n         incrementStepIndex: (state) => {\r\n             state.stepIndex += 1;\r\n         },\r\n         decrementStepIndex: (state) => {\r\n           if (state.stepIndex > 0)\r\n             state.stepIndex -= 1;\r\n         },\r\n         setRun: (state, action) => {\r\n             state.run = action.payload;\r\n         },\r\n         setIndex: (state, action) => {\r\n           state.stepIndex = action.payload;\r\n         },\r\n         addNewWelcomeNotif: (state, action) => {\r\n             state.welcomeNotifs = [{...action.payload}, ...state.welcomeNotifs]\r\n         },\r\n         setWelcomeNotifsEmpty: (state) => {\r\n             state.welcomeNotifs = [];\r\n         },\r\n         setTutorialContinous: (state, action) => {\r\n             state.tutorialContinous = action.payload;\r\n             },\r\n         setCommunicateOpen: (state, action) => {\r\n             state.isCommunicateOpen = action.payload;\r\n             },\r\n            setDeveloperOpen: (state, action) => {\r\n                state.isDeveloperOpen = action.payload;\r\n            },\r\n     }\r\n });\r\n \r\n export const {\r\n     incrementStepIndex,\r\n     decrementStepIndex,\r\n     setRun,\r\n     setIndex,\r\n     addNewWelcomeNotif,\r\n     setWelcomeNotifsEmpty,\r\n     setTutorialContinous,\r\n     setCommunicateOpen,\r\n    setDeveloperOpen\r\n } = userJourneySlice.actions;\r\n \r\n export default userJourneySlice.reducer;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst SEND_NOTIFICATION_STATES = {\r\n    LOADING:0,\r\n    SEND:1,\r\n    HIDE:2\r\n}\r\n\r\nconst initialState = {\r\n    canSend: SEND_NOTIFICATION_STATES.LOADING,\r\n};\r\n\r\n\r\nexport const contractSlice = createSlice({\r\n    name: \"canSend\",\r\n    initialState,\r\n    reducers: {\r\n        setCanSend: (state, action) => {\r\n            state.canSend = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    setCanSend,\r\n} = contractSlice.actions;\r\n\r\nexport default contractSlice.reducer;\r\nexport {SEND_NOTIFICATION_STATES}","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport {Oval} from 'react-loader-spinner';\r\nimport { FaGithub, FaTelegramPlane, FaMedium, FaDiscord, FaTwitter } from 'react-icons/fa';\r\n\r\nimport styled, { useTheme, css } from \"styled-components\";\r\nimport {Section, Item, ItemH, AnchorLink as Anchor } from 'primaries/SharedStyling';\r\n\r\nimport NavigationButton from 'components/NavigationButton';\r\nimport navigationList from \"config/NavigationList\";\r\n\r\nimport { NavigationContext } from \"contexts/NavigationContext\";\r\n\r\nimport GLOBALS from \"config/Globals\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {incrementStepIndex, setDeveloperOpen , setTutorialContinous , setCommunicateOpen} from \"../redux/slices/userJourneySlice\";\r\n\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { envConfig } from \"@project/contracts\";\r\n\r\nimport {setCanSend,SEND_NOTIFICATION_STATES} from \"redux/slices/sendNotificationSlice\";\r\nimport { postReq } from \"api\";\r\nimport {NavigationLoaderButton} from 'components/NavigationLoaderButton';\r\n\r\n// Create Header\r\nfunction Navigation() {\r\n    const { channelDetails, delegatees, aliasDetails: { aliasAddr, aliasEthAddr, isAliasVerified } } = useSelector((state: any) => state.admin);\r\n    const [ refresh, setRefresh ] = useState(false);\r\n\r\n    const { run, stepIndex, isCommunicateOpen, isDeveloperOpen } = useSelector((state: any) => state.userJourney);\r\n    const { navigationSetup, setNavigationSetup } = useContext(NavigationContext);\r\n\r\n    const CORE_CHAIN_ID = envConfig.coreContractChain;\r\n    const { account, chainId } = useWeb3React();\r\n    const onCoreNetwork = CORE_CHAIN_ID === chainId;\r\n\r\n    const theme = useTheme();\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n    const {canSend} = useSelector(\r\n      (state:any) => {\r\n        return state.canSend\r\n      }\r\n    );\r\n    \r\n  useEffect(() => {\r\n    if (canSend === SEND_NOTIFICATION_STATES.LOADING) return\r\n    if (!navigationSetup) return\r\n\r\n    if (canSend === SEND_NOTIFICATION_STATES.HIDE) {\r\n      navigationSetup.primary[1].data.drilldown[0].data.name = 'Create Channel';\r\n      navigationSetup.primary[1].data.drilldown[1].data.name = 'Hide';\r\n    } else if (canSend === SEND_NOTIFICATION_STATES.SEND) {\r\n      if (channelDetails !== 'unfetched' && channelDetails != null) {\r\n        navigationSetup.primary[1].data.drilldown[0].data.name = channelDetails['name'];\r\n        console.log(navigationSetup);\r\n      } else {\r\n        navigationSetup.primary[1].data.drilldown[0].data.name = \"Create Channel\";\r\n      }\r\n      navigationSetup.primary[1].data.drilldown[1].data.name = 'Send Notifications';\r\n    }\r\n  }, [canSend, channelDetails, navigationSetup]);\r\n\r\n  useEffect(() => {\r\n    if (((aliasAddr || aliasEthAddr) && isAliasVerified) || (delegatees && delegatees.length > 0)) {\r\n      dispatch(setCanSend(SEND_NOTIFICATION_STATES.SEND));\r\n    } else {\r\n      dispatch(setCanSend(SEND_NOTIFICATION_STATES.HIDE));\r\n    }\r\n  }, [channelDetails, aliasAddr, isAliasVerified, delegatees, canSend])\r\n\r\n    // useEffect(()=>{\r\n    //   (async()=>{\r\n    //     const channelAddress = await postReq(\"/channels/_search\", {\r\n    //       \"page\": 1,\r\n    //       \"pageSize\": 1,\r\n    //       \"address\":account,\r\n    //       \"chainId\": chainId,\r\n    //       \"query\":account,\r\n    //       \"op\": \"read\"          \r\n    //     }).then(({ data }) => data.channels);\r\n\r\n    //     if(channelAddress.length === 0){\r\n    //       setLoading(false)\r\n    //       dispatch(setCanSend(SEND_NOTIFICATION_STATES.HIDE))\r\n    //     }else{\r\n    //       dispatch(setCanSend(SEND_NOTIFICATION_STATES.SEND))\r\n    //     }\r\n    //   })()\r\n    // },[channelDetails])\r\n    \r\n    // Similar to componentDidMount and componentDidUpdate:\r\n    useEffect(() => {\r\n      // Set Primary List\r\n      const primaryList = returnTransformedList(navigationList.primary, GLOBALS.CONSTANTS.NAVBAR_SECTIONS.PRIMARY);\r\n\r\n      // Set Secondary List\r\n      const secondaryList = returnTransformedList(navigationList.secondary, GLOBALS.CONSTANTS.NAVBAR_SECTIONS.SECONDARY);\r\n\r\n      // Set Nav List\r\n      let count = -1;\r\n      let navList = returnNavList(navigationList.primary, count);\r\n      navList = Object.assign(navList, returnNavList(navigationList.secondary, Object.keys(navList).length));\r\n      \r\n      const finalList = {\r\n        primary: primaryList,\r\n        secondary: secondaryList,\r\n        navigation: navList\r\n      };\r\n      \r\n      setNavigationSetup(finalList);\r\n    }, []);\r\n    \r\n    const returnTransformedList = (lists, identity) => {\r\n      let transformedList = [];\r\n      let count = -1;\r\n      Object.entries(lists).forEach(([key, value]) => {\r\n        count++;\r\n        let identifier = count.toString();\r\n\r\n        const section = lists[key];\r\n\r\n        transformedList[identifier] = {};\r\n        transformedList[identifier].active = false;\r\n        transformedList[identifier].isSection = true;\r\n        transformedList[identifier].hasMenuLogic = value['hasMenuLogic'];\r\n\r\n        transformedList[identifier].id = identity + \"_\" + key;\r\n        transformedList[identifier].parent = null;\r\n        transformedList[identifier].hasItems = false;\r\n        transformedList[identifier].opened = false;\r\n\r\n        if (location.pathname === section.href) {\r\n            transformedList[identifier].active = true;\r\n        }\r\n        transformedList[identifier].data = value;\r\n\r\n        if (section.hasOwnProperty('drilldown')) {\r\n          let drillcount = -1;\r\n          let drilldownModified = {};\r\n\r\n          Object.entries(section.drilldown).forEach(([drillkey, drillvalue]) => {\r\n            drillcount++;\r\n            let drillIdentifier = drillcount.toString();\r\n            const item = section.drilldown[drillkey];\r\n\r\n            drilldownModified[drillIdentifier] = {};\r\n            drilldownModified[drillIdentifier].active = false;\r\n            drilldownModified[drillIdentifier].isSection = false;\r\n            drilldownModified[drillIdentifier].hasMenuLogic = drillvalue['hasMenuLogic'];\r\n\r\n            drilldownModified[drillIdentifier].id = drillkey;\r\n            drilldownModified[drillIdentifier].parent = transformedList[identifier].id;\r\n            transformedList[identifier].hasItems = true;\r\n\r\n            // Check and expand it if the pathname matches\r\n            if (location.pathname === item.href) {\r\n                transformedList[identifier].active = true;\r\n                transformedList[identifier].opened = true;\r\n\r\n                drilldownModified[drillIdentifier].active = true;\r\n            }\r\n\r\n            drilldownModified[drillIdentifier].data = drillvalue;\r\n          })\r\n\r\n          transformedList[identifier].data.drilldown = drilldownModified;\r\n        }\r\n      });\r\n\r\n      return transformedList;\r\n    }\r\n\r\n    // Location has changed, reflect it accordingly\r\n    React.useEffect(() => {\r\n      if (navigationSetup) {\r\n        // loop and find the item in question\r\n        Object.entries(navigationSetup).forEach(([key, value]) => {\r\n          if (key === \"primary\" || key === \"secondary\") {\r\n            const topSection = navigationSetup[key];\r\n\r\n            Object.entries(topSection).forEach(([key, value]) => {\r\n              const section = topSection[key];\r\n\r\n              if (section.data.hasOwnProperty('drilldown')) {\r\n                Object.entries(section.data.drilldown).forEach(([drillkey, drillvalue]) => {\r\n                  const item = section.data.drilldown[drillkey];\r\n\r\n                  if (location.pathname === item.data.href) {\r\n                    const transformedList = mutateTransformedList(item);\r\n                    setNavigationSetup(transformedList);\r\n                    setRefresh(!refresh);\r\n                    return;\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                if (location.pathname === section.data.href) {\r\n                  const transformedList = mutateTransformedList(section);\r\n                  setNavigationSetup(transformedList);\r\n                  setRefresh(!refresh);\r\n                  return;\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }, [location, navigationSetup, canSend])\r\n\r\n    const mutateTransformedList = (item, onlyDrilldown?) => {\r\n      // Finally transform the json menulist\r\n      let transformedMenuList = navigationSetup; \r\n\r\n      let activeParentId = null;\r\n      let activeDrilldownId = null; \r\n\r\n      // check if this requires menu Logic\r\n      if (item.hasMenuLogic) {\r\n        // check if it's a section\r\n        if (item.isSection) {\r\n          activeParentId = item.id;\r\n        }\r\n        else {\r\n          // item is drilldown, mark both id \r\n          activeDrilldownId = item.id;\r\n          activeParentId = item.parent;\r\n        }\r\n      }\r\n\r\n      if (activeParentId == null && activeDrilldownId == null) {\r\n        // nothing to do, return back\r\n        return transformedMenuList;\r\n      }\r\n\r\n      // Check and take action on Drop down getting toggled or section doesn't have dropdown menu\r\n      let selectedSectionIsActionable = false;\r\n\r\n      if (activeDrilldownId == null) {\r\n        Object.keys(transformedMenuList).forEach(key => {\r\n          if (key === 'primary' || key === 'secondary') {\r\n            Object.keys(transformedMenuList[key]).forEach(sectionkey => {\r\n              const section = transformedMenuList[key][sectionkey];\r\n              \r\n              if (section.id === activeParentId) {\r\n                transformedMenuList[key][sectionkey].opened = !transformedMenuList[key][sectionkey].opened;\r\n\r\n                if (section.hasItems) {\r\n                  selectedSectionIsActionable = true;\r\n                }\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n\r\n      if (selectedSectionIsActionable || onlyDrilldown) {\r\n        // section had items but activeDrilldownId not set means dropdown toggle\r\n        return transformedMenuList;\r\n      }\r\n      else {\r\n        // menu item is getting selected\r\n        Object.keys(transformedMenuList).forEach(key => {\r\n          if (key === 'primary' || key === 'secondary') {\r\n            Object.keys(transformedMenuList[key]).forEach(sectionkey => {\r\n              const section = transformedMenuList[key][sectionkey];\r\n\r\n              if (section.id !== activeParentId) {\r\n                if (section.active) {\r\n                  transformedMenuList[key][sectionkey].active = false;\r\n                  \r\n                  if (section.hasItems) {\r\n                    // loop and make all false\r\n                    Object.keys(transformedMenuList[key][sectionkey].data.drilldown).forEach(drillkey => {\r\n                      transformedMenuList[key][sectionkey].data.drilldown[drillkey].active = false;\r\n                    })\r\n                  }\r\n                }\r\n              }\r\n              else {\r\n                transformedMenuList[key][sectionkey].active = true;\r\n                \r\n                if (section.hasItems) {\r\n                  // loop and make all false\r\n                  Object.keys(transformedMenuList[key][sectionkey].data.drilldown).forEach(drillkey => {\r\n                    const item = transformedMenuList[key][sectionkey].data.drilldown[drillkey];\r\n\r\n                    if (item.id === activeDrilldownId) {\r\n                      transformedMenuList[key][sectionkey].data.drilldown[drillkey].active = true;\r\n                    }\r\n                    else {\r\n                      transformedMenuList[key][sectionkey].data.drilldown[drillkey].active = false;\r\n                    }\r\n                  })\r\n                }\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n\r\n      return transformedMenuList;\r\n    }\r\n\r\n    const returnNavList = (lists, count) => {\r\n      let transformedList = [];\r\n      \r\n      Object.entries(lists).forEach(([key, value]) => {\r\n        const section = lists[key];\r\n\r\n        // omit parent if drilldown\r\n        if (section.hasOwnProperty('drilldown')) {\r\n          Object.entries(section.drilldown).forEach(([drillkey, drillvalue]) => {\r\n            count++;\r\n            let identifier = count.toString();\r\n\r\n            const item = section.drilldown[drillkey];\r\n\r\n            transformedList[identifier] = {};\r\n            transformedList[identifier].active = false;\r\n            transformedList[identifier].isSection = false;\r\n            transformedList[identifier].id = `${key}_${drillkey}`;\r\n\r\n            // Check and expand it if the pathname matches\r\n            if (location.pathname === item.href) {\r\n              transformedList[identifier].active = true;\r\n            }\r\n            transformedList[identifier].data = drillvalue['data'];\r\n          })\r\n        }\r\n        else {\r\n          count++;\r\n          let identifier = count.toString();\r\n\r\n          transformedList[identifier] = {};\r\n          transformedList[identifier].active = false;\r\n          transformedList[identifier].isSection = true;\r\n          transformedList[identifier].hasItems = false;\r\n          transformedList[identifier].id = key;\r\n\r\n          if (location.pathname === section.href) {\r\n              transformedList[identifier].active = true;\r\n          }\r\n          transformedList[identifier].data = value;\r\n        }\r\n      });\r\n\r\n      return transformedList;\r\n    }\r\n\r\n    // Render main items\r\n    const renderMainItems = (items, sectionID) => {\r\n      let Section;\r\n      let fontSize;\r\n      let secondaryButton=0;\r\n      switch(sectionID) {\r\n        case GLOBALS.CONSTANTS.NAVBAR_SECTIONS.SECONDARY:\r\n          Section = SecondarySection;\r\n          fontSize = \"small\";\r\n          secondaryButton=1;\r\n          break;\r\n        default:\r\n          Section = PrimarySection;\r\n          fontSize = \"normal\";\r\n      }\r\n\r\n      let rendered = (\r\n        Object.keys(items).map(function(key,index) {\r\n          const section = items[key];\r\n          // console.log(section)\r\n          const data = section.data;\r\n          const uid = section.data.uid;\r\n          \r\n          if (uid === 2 && section.opened != isCommunicateOpen)\r\n            dispatch(setCommunicateOpen(section.opened));\r\n          if (uid === 3 && section.opened != isDeveloperOpen)\r\n            dispatch(setDeveloperOpen(section.opened));\r\n          \r\n          let innerRendered = (\r\n            <Section \r\n                key={key}\r\n                flex=\"1\"\r\n                align=\"stretch\"\r\n                size={fontSize}\r\n            >\r\n              {\r\n                (secondaryButton)?\r\n                  (\r\n                    <Item\r\n                    padding=\"10px\"\r\n                    flexBasis=\"100%\"\r\n                    align=\"stretch\"\r\n                    direction=\"row\"\r\n                    overflow=\"hidden\"\r\n                  >\r\n                    <SectionInnerGroupContainer\r\n                      flex=\"1\"\r\n                      align=\"stretch\"\r\n                      bg={theme.leftBarButtonBg}\r\n                      zIndex={2}\r\n                      refresh={refresh}\r\n                      margintop=\"15px\"\r\n                      onClick={() => {\r\n                        // console.log(`Clicked secondary button`);\r\n                        mutateTransformedList(section, true)\r\n                      }}      \r\n                      id={data.id}          \r\n                    >\r\n                      <NavigationButton\r\n                        item={section}\r\n                        data={data}\r\n                        sectionID={sectionID}\r\n                        active={section.active}\r\n                      />\r\n                    </SectionInnerGroupContainer>\r\n                    \r\n                    { \r\n                    section.hasItems \r\n                      ? renderChildItems(\r\n                          data.drilldown, \r\n                          section.opened,\r\n                          GLOBALS.CONSTANTS.NAVBAR_SECTIONS.PRIMARY,\r\n                        )\r\n                      : null\r\n                    }\r\n                  </Item>\r\n                  ):\r\n                  (\r\n                    <Item\r\n                      padding=\"10px\"\r\n                      flexBasis=\"100%\"\r\n                      align=\"stretch\"\r\n                      direction=\"row\"\r\n                      overflow=\"hidden\"\r\n                    >\r\n                      <SectionInnerGroupContainer\r\n                          flex=\"1\"\r\n                          align=\"stretch\"\r\n                          bg={theme.leftBarButtonBg}\r\n                          margintop=\"-10px\"\r\n                          zIndex={2}\r\n                          refresh={refresh}\r\n                          onClick={() => {\r\n                            mutateTransformedList(section, true)\r\n    \r\n                            if(run && ((stepIndex === 1 && uid === 2) || (stepIndex === 16 && uid === 3))){\r\n                              setTimeout(() => {\r\n                                dispatch(incrementStepIndex())\r\n                              }, 500);\r\n                            }\r\n                          }}              \r\n                        >\r\n                        <NavigationButton\r\n                          item={section}\r\n                          data={data}\r\n                          sectionID={sectionID}\r\n                          active={section.active}\r\n                        />\r\n                      </SectionInnerGroupContainer>\r\n                      { \r\n                        section.hasItems \r\n                        ? renderChildItems(\r\n                            data.drilldown, \r\n                            section.opened,\r\n                            GLOBALS.CONSTANTS.NAVBAR_SECTIONS.PRIMARY,\r\n                            index === 1 // send true if this one in Developer Section\r\n                          )\r\n                        : null\r\n                      }\r\n                    </Item>\r\n                  )\r\n                \r\n              }\r\n             \r\n                \r\n\r\n            </Section>\r\n          )\r\n\r\n          return innerRendered;\r\n        })\r\n      )\r\n\r\n      return rendered;\r\n    }\r\n\r\n    // Render Child Items\r\n    const renderChildItems = (drilldown, opened, sectionID, isDevBar=false) => {\r\n      let SectionGroup;\r\n      let SectionItem;\r\n\r\n      switch(sectionID) {\r\n        case GLOBALS.CONSTANTS.NAVBAR_SECTIONS.SECONDARY:\r\n          SectionGroup = PrimarySectionGroup;\r\n          SectionItem = PrimarySectionItem;\r\n          break;\r\n        default:\r\n          SectionGroup = PrimarySectionGroup;\r\n          SectionItem = PrimarySectionItem;\r\n      }\r\n\r\n      let rendered = (\r\n        <SectionGroup\r\n          align=\"stretch\"\r\n          opened={opened}\r\n          refresh={refresh}\r\n        >\r\n          {Object.keys(drilldown).map(function(key) {\r\n            const item = drilldown[key];\r\n            const data = item.data;\r\n            return (\r\n              <SectionItem\r\n                  key={key}\r\n                  flex=\"1\"\r\n                  align=\"stretch\"\r\n                  size=\"small\" \r\n              >\r\n                <SectionInnerItemContainer\r\n                  flex=\"1\"\r\n                  align=\"stretch\"\r\n                  bg={theme.leftBarButtonBg}\r\n                  zIndex={1}\r\n                  refresh={refresh}\r\n                  onClick={() => {\r\n                    if(run && ((stepIndex=== 2 && data.name === \"Channels\") || (stepIndex === 6 && data.name === \"Inbox\")|| (stepIndex === 8 && data.name === \"Spam\") ||  (stepIndex === 10 && data.name === \"Receive Notifs\") ||  (stepIndex === 16 && data.name === \"Create Channel\") ||  (stepIndex === 17 && data.name === \"Developer's Guide\")))\r\n                    { \r\n                      if(stepIndex === 10)dispatch(setTutorialContinous(true));\r\n                      dispatch(incrementStepIndex())\r\n                    }\r\n                    \r\n                  }}\r\n                  >\r\n                  <NavigationButton\r\n                    item={item}\r\n                    data={data}\r\n                    sectionID={sectionID}\r\n                    active={item.active}\r\n                    />\r\n                </SectionInnerItemContainer>\r\n              </SectionItem>\r\n            )\r\n          })}\r\n        </SectionGroup>\r\n      );\r\n\r\n      return rendered;\r\n    }\r\n    \r\n    return (\r\n      <Container direction=\"column\" headerHeight={GLOBALS.CONSTANTS.HEADER_HEIGHT}>\r\n        {!navigationSetup &&\r\n          <Item padding=\"20px\" justify=\"flex-start\">\r\n            <Oval color={theme.leftBarLoaderBg} height={20} width={20} />\r\n          </Item>\r\n        }\r\n        {navigationSetup && Object.keys(navigationSetup).length > 0 &&\r\n          <>\r\n            <Primary>\r\n              {\r\n                renderMainItems(\r\n                  navigationSetup.primary,\r\n                  GLOBALS.CONSTANTS.NAVBAR_SECTIONS.PRIMARY\r\n                )\r\n              }\r\n            </Primary>\r\n            <Footer\r\n              justify=\"flex-end\"\r\n              align=\"strecth\"\r\n            >\r\n              <Secondary\r\n                align=\"stretch\"\r\n                justify=\"flex-end\"\r\n                margin=\"10px 0px 10px 0px\"\r\n              >\r\n                {\r\n                  renderMainItems(\r\n                    navigationSetup.secondary,\r\n                    GLOBALS.CONSTANTS.NAVBAR_SECTIONS.SECONDARY\r\n                  )\r\n                }\r\n              </Secondary>\r\n\r\n              {/* Put social */}\r\n              <ItemH\r\n                flex=\"initial\"\r\n                padding=\"10px\"\r\n                radius=\"0px 12px 0px 0px\"\r\n                bg={theme.leftBarSocialBg}\r\n              >\r\n                <Anchor\r\n                title=\"Open Twitter\"\r\n                href=\"https://twitter.com/epnsproject\"\r\n                target=\"_blank\"\r\n                bg={theme.leftBarSocialIconBg}\r\n                radius=\"4px\"\r\n                padding=\"10px\"\r\n                margin=\"5px\"\r\n                onMouseOver={({ target }) => target.style.color = theme.color}\r\n                onMouseOut={({target})=>target.style.color = \"fff\"}\r\n                >\r\n                  <FaTwitter size={15} color=\"fff\" />\r\n                </Anchor>\r\n                <Anchor\r\n                  title=\"Open Telegram\"\r\n                  href=\"https://t.me/epnsproject\"\r\n                  target=\"_blank\"\r\n                  bg={theme.leftBarSocialIconBg}\r\n                  radius=\"4px\"\r\n                  padding=\"10px\"\r\n                  margin=\"5px\"\r\n                  onMouseOver={({ target }) => target.style.color = theme.color}\r\n                  onMouseOut={({target})=>target.style.color = \"fff\"}\r\n                >\r\n                  <FaTelegramPlane size={15} color=\"#fff\"/>\r\n                </Anchor>\r\n                <Anchor\r\n                  title=\"Open Medium\"\r\n                  href=\"https://medium.com/ethereum-push-notification-service\"\r\n                  target=\"_blank\"\r\n                  bg={theme.leftBarSocialIconBg}\r\n                  radius=\"4px\"\r\n                  padding=\"10px\"\r\n                  margin=\"5px\"\r\n                  onMouseOver={({ target }) => target.style.color = theme.color}\r\n                  onMouseOut={({target})=>target.style.color = \"fff\"}\r\n                >\r\n                  <FaMedium size={15} color=\"#fff\"/>\r\n                </Anchor>\r\n                <Anchor\r\n                  title=\"Open Discord\"\r\n                  href=\"https://discord.gg/YVPB99F9W5\"\r\n                  target=\"_blank\"\r\n                  bg={theme.leftBarSocialIconBg}\r\n                  radius=\"4px\"\r\n                  padding=\"10px\"\r\n                  margin=\"5px\"\r\n                  onMouseOver={({ target }) => target.style.color = theme.color}\r\n                  onMouseOut={({target})=>target.style.color = \"fff\"}\r\n                >\r\n                  <FaDiscord size={15} color=\"#fff\"/>\r\n                </Anchor>\r\n                <Anchor\r\n                  title=\"Open Github\"\r\n                  href=\"https://github.com/ethereum-push-notification-service\"\r\n                  target=\"_blank\"\r\n                  bg={theme.leftBarSocialIconBg}\r\n                  radius=\"4px\"\r\n                  padding=\"10px\"\r\n                  margin=\"5px\"\r\n                  onMouseOver={({ target }) => target.style.color = theme.color}\r\n                  onMouseOut={({target})=>target.style.color = \"fff\"}\r\n                >\r\n                  <FaGithub size={15} color={\"#fff\"}/>\r\n                </Anchor>\r\n              </ItemH>\r\n            </Footer>\r\n          </>\r\n        }\r\n      </Container>\r\n    );\r\n}\r\n\r\n\r\n\r\n// CSS Styles\r\nconst Container = styled(Section)`\r\n  background: ${props => props.theme.leftBarBg};\r\n  flex: 1;\r\n  height: calc(100% - ${props => props.headerHeight}px);\r\n  margin: ${props => props.headerHeight}px 0px 0px 0px;\r\n  border-right: 1px solid ${props => props.theme.sectionBorderBg};\r\n`\r\n\r\nconst Primary = styled(Item)`\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  align-items: stretch;\r\n  justify-content: flex-start;\r\n  background: '#fff';\r\n  overflow-y: scroll;\r\n  &::-webkit-scrollbar-track {\r\n    border-radius: 10px;\r\n  }\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    border-radius: 10px;\r\n    background-image: -webkit-gradient(linear,\r\n                       left top,\r\n                       left bottom,\r\n                       color-stop(0.44, #35c5f3),\r\n                       color-stop(0.72, #35b0f3),\r\n                       color-stop(0.86, #35a1f3));\r\n  }\r\n  padding: 0px 0px 20px 0px;\r\n`\r\n\r\nconst InheritedSection = styled(Item)`\r\n  flex: initial;\r\n  align-items: 'center';\r\n`\r\n\r\nconst PrimarySection = styled(InheritedSection)`\r\n  border-bottom: 1px solid ${props => props.theme.sectionBorderBg};\r\n  border-top: 1px solid ${props => props.theme.sectionBorderBg};\r\n  margin-top: -1px;\r\n`\r\n\r\nconst InheritedSectionGroup = styled(Item)`\r\n  align-items: 'stretch';\r\n`\r\n\r\nconst InheritedSectionItem = styled(Item)`\r\n  align-items: 'stretch';\r\n  padding: 0px 0px 0px 20px;\r\n`\r\n\r\nconst SectionInnerGroupContainer = styled(Item)`\r\n    &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: ${props=>props.margintop};\r\n    right: 0;\r\n    left: 0;\r\n    background: ${props => props.theme.leftBarButtonBg};\r\n    height: 10px;\r\n  } \r\n`\r\n\r\nconst SectionInnerItemContainer = styled(Item)`\r\n\r\n`\r\n\r\nconst PrimarySectionGroup = styled(InheritedSectionGroup)`\r\n  transition: margin .1s ease-out;\r\n  ${ props => !props.opened && css`\r\n    margin-top: -100%;\r\n  `};\r\n`\r\n\r\nconst PrimarySectionItem = styled(InheritedSectionItem)`\r\n  \r\n`\r\n\r\nconst Footer = styled(Item)`\r\n  z-index: 3;\r\n`\r\n\r\nconst Secondary = styled(Item)`\r\n  flex: auto;\r\n`\r\n\r\nconst SecondarySection = styled(InheritedSection)`\r\n\r\n`\r\n\r\nconst Social = styled(Item)`\r\n\r\n`\r\n\r\n// Export Default\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction NotificationToast({ notification, clearToast }) {\r\n\r\n  // toast customize\r\n  const LoaderToast = ({color }) => (\r\n      <Toaster>\r\n      <div>{notification.notificationTitle}</div>\r\n      <div>{notification.notificationBody}</div>\r\n      </Toaster>\r\n  )\r\n \r\n  // Render\r\n  return (\r\n    <NotificationWrapper>{\r\n    toast.dark(<LoaderToast onClick={clearToast} color=\"#35c5f3\"/>, {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n    }\r\n    </NotificationWrapper>\r\n  );\r\n}\r\n\r\nconst NotificationWrapper = styled.div`\r\n  display: none;\r\n`;\r\n\r\nconst Toaster = styled.div`\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`\r\n\r\n\r\n\r\n// Export Default\r\nexport default NotificationToast;\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport { AnimateOnChange } from 'react-animation';\r\n\r\n// Create Header\r\nfunction DisplayNotice({ title, theme }) {\r\n  React.useEffect(() => {\r\n\r\n  }, [title, theme]);\r\n\r\n  // to create blockies\r\n\r\n  return (\r\n    <Container>\r\n      <AnimateOnChange\r\n        animationIn=\"fadeIn\"\r\n        animationOut=\"fadeOut\"\r\n        durationOut={200}\r\n      >\r\n        <Notice theme={theme}>{title}</Notice>\r\n      </AnimateOnChange>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n\r\n`\r\n\r\nconst Notice = styled.span`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n\r\n  ${props => props.theme === 'primary' && css`\r\n    background: #e20880;\r\n  `};\r\n\r\n  ${props => props.theme === 'secondary' && css`\r\n    background: #35c5f3;\r\n  `};\r\n\r\n  ${props => props.theme === 'third' && css`\r\n    background: #674c9f;\r\n  `};\r\n`\r\n\r\n// Export Default\r\nexport default DisplayNotice;\r\n","const size = {\r\n  mobileS: '320px',\r\n  mobileM: '375px',\r\n  mobileL: '425px',\r\n  tablet: '768px',\r\n  laptop: '1024px',\r\n  laptopL: '1440px',\r\n  desktop: '2560px'\r\n}\r\n\r\nexport const Device = {\r\n  mobileS: `(max-width: ${size.mobileS})`,\r\n  mobileM: `(max-width: ${size.mobileM})`,\r\n  mobileL: `(max-width: ${size.mobileL})`,\r\n  tablet: `(max-width: ${size.tablet})`,\r\n  laptop: `(max-width: ${size.laptop})`,\r\n  laptopL: `(max-width: ${size.laptopL})`,\r\n  desktop: `(max-width: ${size.desktop})`,\r\n  desktopL: `(max-width: ${size.desktop})`\r\n};\r\n","import React from \"react\";\r\n\r\nimport styled from 'styled-components';\r\nimport { Item, ItemH, Span, A} from '../primaries/SharedStyling';\r\n\r\n// Faucet URLs\r\nfunction MetaInfoDisplay({ externalIcon, internalIcon, text, bgColor, onClick, onMouseEnter, onMouseLeave }) {\r\n\r\n  // render\r\n  return (\r\n    <MetaContainer>\r\n      {externalIcon &&\r\n        <Item\r\n          margin=\"0px 4px 0px 0px\"\r\n        >\r\n          {externalIcon}\r\n        </Item>\r\n      }\r\n      <MetaContent\r\n        hoverBG=\"transparent\"\r\n        onClick={onClick}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n      >\r\n        <Span\r\n          bg={bgColor}\r\n        >\r\n          {internalIcon && \r\n            <IconContainer>\r\n              {internalIcon}\r\n            </IconContainer>\r\n          }\r\n          {text}\r\n        </Span>\r\n      </MetaContent>\r\n    </MetaContainer>\r\n  );\r\n}\r\n\r\nconst MetaContainer = styled(ItemH)`\r\n  flex-wrap: initial;\r\n  flex: initial;\r\n  padding: 5px;\r\n`\r\n\r\nconst MetaContent = styled(A)`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  \r\n  & > Span {\r\n    background: ${props => props.bgColor};\r\n    margin: 0px 5px;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    padding: 5px 10px;\r\n    display: flex;\r\n    border-radius: 10px;\r\n    font-size: 11px;\r\n    gap: 3px;\r\n    transition: 300ms;\r\n  }\r\n`\r\n\r\nconst IconContainer = styled(Span)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0px 4px 0px 0px;\r\n  color: inherit;\r\n`\r\n\r\n// Export Default\r\nexport default MetaInfoDisplay;\r\n","const channelsTuts = { \r\n  ens: {\r\n    maintainer: '0x983110309620D911731Ac0932219af06091b6744',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/AmalyHBJ5Gw?controls=0&autoplay=1',\r\n    userjourneyshort: 'ens',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-to-add-push-notifications-to-ens-decentralized-domain-name-services-a20f001a7234'\r\n  },\r\n  coindesk: {\r\n    maintainer: '0xe56f1D3EDFFF1f25855aEF744caFE7991c224FFF',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/z_RZgoYNH_Y?controls=0&autoplay=1',\r\n    userjourneyshort: 'coindesk',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-and-coindesk-announce-media-push-notifications-1707b12884d'\r\n  },  \r\n  snapshot: {\r\n    maintainer: '0x8C28Cf33d9Fd3D0293f963b1cd27e3FF422B425c',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/AYy42D5oG20?controls=0&autoplay=1',\r\n    userjourneyshort: 'snapshot',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-partners-with-snapshot-to-deliver-notifications-to-improve-community-governance-5730559cb84b'\r\n  },\r\n  makerdao: {\r\n    maintainer: '0x8Cd0ad5C55498Aacb72b6689E1da5A284C69c0C7',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/OxZ5H2vRnRc?controls=0&autoplay=1',\r\n    userjourneyshort: 'makerdao',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-partners-with-makerdao-development-and-ux-core-unit-to-enable-push-notifications-for-protocol-53f777957d26'\r\n  },\r\n  cvi: {\r\n    maintainer: '0x2dbf5aFead4759E6151590E4a8F6cD596B7044F8',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/r_wXWfEWSM0?controls=0&autoplay=1',\r\n    userjourneyshort: 'cvi',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-collaborates-with-cvi-crypto-volatility-index-to-enable-push-notifications-for-their-5ea662ee73a3'\r\n  },\r\n  bancor: {\r\n    maintainer: '0x7F41abf7fDb9E4A6373EC3BAB3Df814b5CCceCC3',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/SmoOX2JXx_4?controls=0&autoplay=1',\r\n    userjourneyshort: 'bancor',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-integrates-with-bancor-network-to-facilitate-decentralized-push-notifications-d35b5e27d4a9'\r\n  },\r\n  oasisapp: {\r\n    maintainer: '0x12b3eE60Df8ea26D03b8035Ec90434a38A82C4C7',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/7PPc6a3XUo4?controls=0&autoplay=1',\r\n    userjourneyshort: 'oasisapp',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-push-notifications-arrive-at-defi-on-oasis-app-770ae7ed1b'\r\n  },\r\n  mover: {\r\n    maintainer: '0xb754601d2C8C1389E6633b1449B84CcE57788566',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/TX1acRPGovA?controls=0&autoplay=1',\r\n    userjourneyshort: 'mover',\r\n    article: 'https://medium.com/ethereum-push-notification-service/mover-integrates-with-epns-to-deliver-yield-harvesting-notifications-ab3bc9a6b26e'\r\n  },\r\n  poh: {\r\n    maintainer: '0x327a29fcE0a6490E4236240Be176dAA282EcCfdF',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/_Urc35obsOQ?controls=0&autoplay=1',\r\n    userjourneyshort: 'poh',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-joins-proof-of-humanity-to-enhance-the-user-experience-of-decentralized-self-sovereign-e734780c9840'\r\n  },\r\n  kyber: {\r\n    maintainer: '0x91c9D4373B077eF8082F468C7c97f2c499e36F5b',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/EpTYdJMQxoU?controls=0&autoplay=1',\r\n    userjourneyshort: 'kyber',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-push-notifications-to-support-kybers-frictionless-liquidity-pools-4fe65746b39'\r\n  },\r\n  fabwelt: {\r\n    maintainer: '0x361Cb6BE977d0113A33914A8f952Ced95747F793',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/kLyZ0DT?controls=0&autoplay=1',\r\n    userjourneyshort: 'fabwelt',\r\n    article: 'https://medium.com/ethereum-push-notification-service/fabwelt-partners-with-epns-to-bring-push-notifications-to-crypto-gaming-c247e70bb627'\r\n  },\r\n  banklessfr: {\r\n    maintainer: '0xA8aF754379d8ae406dFbDD0D6c46324aD647243E',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/1mnLTslK_sY?controls=0&autoplay=1',\r\n    userjourneyshort: 'banklessfr',\r\n    article: null\r\n  },\r\n  angle: {\r\n    maintainer: '0xA2dEe32662F6243dA539bf6A8613F9A9e39843D3',\r\n    userjourneyyoutube: null,\r\n    userjourneyshort: 'angle',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-allies-with-angle-protocol-to-facilitate-push-notifications-for-users-af77cf4d3e2b'\r\n  },\r\n  mstable: {\r\n    maintainer: '0xC30CE8F08BD8F667E65185310807Db937A5d6E53',\r\n    userjourneyyoutube: null,\r\n    userjourneyshort: 'mstable',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-allies-with-mstable-to-facilitate-decentralized-notifications-for-users-a3e6be14eecc'\r\n  },\r\n  aragon: {\r\n    maintainer: '0x187a34c86aA6378333cE9033Aa34718D2CEdEd2C',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/PT90Zyi9A0g?controls=0&autoplay=1',\r\n    userjourneyshort: 'aragon',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-partners-with-aragon-voice-to-power-unstoppable-decentralized-governance-56182b9d9aa0'\r\n  },\r\n  cryptomanga: {\r\n    maintainer: '0x0B430A1651E6A64510afC97195040359941d0b23',\r\n    userjourneyyoutube: null,\r\n    userjourneyshort: 'cryptomanga',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-x-cryptomanga-decentralized-communication-for-decentralized-gaming-d296956afdeb'\r\n  },\r\n  dydx: {\r\n    maintainer: '0x23c6b8fB0557FD5e6696BceF3fD4855E0d7018C0',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/oXgNlebVUAo?controls=0&autoplay=1',\r\n    userjourneyshort: 'dydx',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-teams-up-with-dydx-foundation-to-enable-notifications-for-governance-updates-5794a5e22c4d'\r\n  },\r\n  idle: {\r\n    maintainer: '0xFb3bD022D5DAcF95eE28a6B07825D4Ff9C5b3814',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/08bBRIzRcok?controls=0&autoplay=1',\r\n    userjourneyshort: 'idle',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-collaborates-with-idle-to-enable-push-notifications-for-governance-updates-32e142ed2f33'\r\n  },\r\n  tracerdao: {\r\n    maintainer: '0x8bf25240402C126bb236d26D391b782c5c893D32',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/Pw5zjKmQLFg?controls=0&autoplay=1',\r\n    userjourneyshort: 'tracerdao',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-brings-push-notifs-to-tracer-dao-governance-91f7b9a9ddcc'\r\n  },\r\n  armor: {\r\n    maintainer: '0x5aFeDeF166bd626B3043cb1D53e16EA9BF863E06',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/AMW9Xf0Rc2Y?controls=0&autoplay=1',\r\n    userjourneyshort: 'armor',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-partners-with-armor-to-enable-push-notifications-for-its-users-daa70b4f172d'\r\n  },\r\n  pods: {\r\n    maintainer: '0xb4F88Ad000A53638F203dcA2C39828a58057d53c',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/Ink21CE_RzM?controls=0&autoplay=1',\r\n    userjourneyshort: 'pods',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-inks-partnership-with-options-protocol-pods-finance-e5adcd2d5821'\r\n  },\r\n  ooki: {\r\n    maintainer: '0x9B43a385E08EE3e4b402D4312dABD11296d09E93',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/vGu--SUV4l4?controls=0&autoplay=1',\r\n    userjourneyshort: 'ooki',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-partners-with-bzx-to-deliver-crucial-margin-trading-push-notifications-to-wallets-a2f52e4fcefe'\r\n  },\r\n  pushgov: {\r\n    maintainer: '0xfE4A6Fbd27B496855245A1e8047F693f0aDfDb08',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/vvDlJttgQgQ?controls=0&autoplay=1',\r\n    userjourneyshort: 'pushgov',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-governance-goes-live-lets-push-for-progressive-decentralized-governance-7448b58b89b4'\r\n  },\r\n  symphony: {\r\n    maintainer: '0xd32908F63713F514aDDBE3962A2dE7112fdCD4A7',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/FtadeuLSPmE?controls=0&autoplay=1',\r\n    userjourneyshort: 'symphony',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-collaborates-with-symphony-finance-to-facilitate-push-notifications-for-limit-order-c6f27bf8e02a'\r\n  },\r\n  ethtracker: {\r\n    maintainer: '0xDBc5936E4daaE94F415C39D284f6a69c4d553F2F',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/13ahwv-Ox04?controls=0&autoplay=1',\r\n    userjourneyshort: 'ethtracker',\r\n    article: null\r\n  },\r\n  ethpricetracker: {\r\n    maintainer: '0x2B8ffb4460550Dbe8Ec1cEA9C1B61322dB56B082',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/13ahwv-Ox04?controls=0&autoplay=1',\r\n    userjourneyshort: 'ethpricetracker',\r\n    article: null\r\n  },\r\n  btctracker: {\r\n    maintainer: '0x03EAAAa48ea78d1E66eA3458364d553AD981871E',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/13ahwv-Ox04?controls=0&autoplay=1',\r\n    userjourneyshort: 'btctracker',\r\n    article: null\r\n  },\r\n  aave: {\r\n    maintainer: '0xAA940b3501176af328423d975C350d0d1BaAae50',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/YKflQ8eADFg?controls=0&autoplay=1',\r\n    userjourneyshort: 'aave',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-x-aave-protection-against-asset-liquidation-f33be395ef87'\r\n  },\r\n  gro: {\r\n    maintainer: '0x3c1F2E6Ec3De7811E2daa2B8E132CdCd8e39851c',\r\n    userjourneyyoutube: null,\r\n    userjourneyshort: 'gro',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-monthly-blocks-4371ef89bc91'\r\n  },\r\n  flipside: {\r\n    maintainer: '0xC2f41b3a1FF28Fd2A6EeE76EE12e51482fcFd11F',\r\n    userjourneyyoutube: null,\r\n    userjourneyshort: 'flipside',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-and-flipside-crypto-join-forces-to-facilitate-push-notifications-for-users-58df98b7aba7'\r\n  },\r\n  thedefiant: {\r\n    maintainer: '0x46b676303ebC5699BF47e416677A57A89c70a015',\r\n    userjourneyyoutube: null,\r\n    userjourneyshort: 'thedefiant',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-teams-up-with-the-defiant-to-bring-defi-news-directly-to-users-wallets-8b4896d674bb'\r\n  },\r\n}\r\n\r\nexport default channelsTuts;\r\n","import React from \"react\";\r\n\r\nimport styled, { useTheme } from 'styled-components';\r\nimport { Item, ItemH, Image, Span, Button} from 'primaries/SharedStyling';\r\n\r\nimport { FaPlay, FaShareSquare, FaYoutube } from 'react-icons/fa';\r\n\r\nimport MetaInfoDisplayer from \"components/MetaInfoDisplayer\";\r\n\r\nimport channelTuts from \"config/channelTuts\";\r\n\r\n// Check channel has tutorial\r\nexport const isChannelTutorialized = (addr) => {\r\n  let keyFound = false;\r\n  Object.entries(channelTuts).forEach(([key, value]) => {\r\n    if (channelTuts[key].maintainer === addr) {\r\n      keyFound = true;\r\n      return;\r\n    }\r\n  });\r\n\r\n  return keyFound;\r\n}\r\n\r\n// Channel Tutorial\r\nconst ChannelTutorial = ({ addr, bgColor, loadTeaser, playTeaser }) => {\r\n  const themes = useTheme();\r\n\r\n  // set state\r\n  const [showTuts, setShowTuts] = React.useState(false);\r\n\r\n  // helper functions\r\n  const getChannelTutItem = (addr) => {\r\n    let item = null;\r\n\r\n    Object.entries(channelTuts).forEach(([key, value]) => {\r\n      if (channelTuts[key].maintainer === addr) {\r\n        item = channelTuts[key];\r\n        return;\r\n      }\r\n    });\r\n\r\n    return item;\r\n  }\r\n\r\n  const item = getChannelTutItem(addr);\r\n\r\n  // render\r\n  return (\r\n    <Item\r\n      flex=\"initial\"\r\n      onMouseEnter={() => {\r\n        setShowTuts(true);\r\n        console.log(\"enter\")\r\n      }}\r\n      onMouseLeave={() => {\r\n        setShowTuts(false);\r\n        console.log(\"exit\")\r\n      }}\r\n      zIndex=\"10\"\r\n    >\r\n      {showTuts &&\r\n        <Item\r\n          position=\"absolute\"\r\n          width=\"280px\"\r\n          bottom=\"0px\"\r\n          padding=\"0px 0px 40px 0px\"\r\n        >\r\n          <TutsInner\r\n            bg={themes.backgroundBG}\r\n            padding=\"10px\"\r\n            border={`1px solid ${themes.borderBg}`}\r\n          >\r\n            {item.userjourneyshort && \r\n              <Item>\r\n                <Span\r\n                  bg={themes.viewChannelTutsTitleBg}\r\n                  color=\"#fff\"\r\n                  padding=\"4px 10px\"\r\n                  margin=\"0px 0px 10px 0px\"\r\n                  self=\"flex-end\"\r\n                  spacing=\"0.1em\"\r\n                  textTransform=\"uppercase\"\r\n                  size=\"bold\"\r\n                >\r\n                  Opt-in to enable\r\n                </Span>\r\n                <Image\r\n                  src={`./tuts/${item.userjourneyshort}/${item.userjourneyshort}_${themes.scheme}.png`}\r\n                  srcSet={`./tuts/${item.userjourneyshort}/${item.userjourneyshort}_${themes.scheme}@2x.png 2x, ./tuts/${item.userjourneyshort}/${item.userjourneyshort}_${themes.scheme}@3x.png 3x`}\r\n                  alt={`${item.alt}`}\r\n                />\r\n              </Item>\r\n            }\r\n\r\n            <ItemH\r\n              padding=\"10px 0px 0px 0px\"\r\n              justify=\"space-between\"\r\n              self=\"stretch\"\r\n            >\r\n              {item.userjourneyyoutube && \r\n                <Button\r\n                  bg={themes.viewChannelTutsButtonBg}\r\n                  color='#fff'\r\n                  radius=\"4px\"\r\n                  padding=\"5px 10px\"\r\n                  onClick={() => {\r\n                    setShowTuts(false);\r\n                    loadTeaser(item.userjourneyyoutube);\r\n                    playTeaser(true);\r\n                  }}\r\n                >\r\n                  <Span\r\n                    margin=\"0px 5px 0px 0px\"\r\n                    weight=\"bold\"\r\n                    color='#fff'\r\n                  >\r\n                    User Journey\r\n                  </Span>\r\n                  <FaYoutube size=\"20px\" />\r\n                </Button>\r\n              }\r\n              \r\n              {item.article && \r\n                <Button\r\n                  bg={themes.viewChannelTutsButtonBg}\r\n                  color='#fff'\r\n                  radius=\"4px\"\r\n                  padding=\"5px 10px\"\r\n                  onClick={() => {\r\n                    setShowTuts(false);\r\n                    window.open(`${item.article}`, \"_blank\") //to open new page\r\n                  }}\r\n                >\r\n                  <FaShareSquare size=\"20px\" />\r\n                </Button>\r\n              }\r\n            </ItemH>\r\n          </TutsInner>\r\n        </Item>\r\n      }\r\n\r\n      <MetaInfoDisplayer\r\n        internalIcon={<FaPlay />}\r\n        text=\"Short Tutorial\"\r\n        bgColor={bgColor}\r\n      />\r\n    </Item>\r\n  );\r\n}\r\n\r\n// CSS STYLES\r\nconst TutsInner = styled(Item)`\r\n  border-radius: 10px;\r\n  box-shadow: 0px 15px 20px -5px rgb(0 0 0 / 10%);\r\n`\r\n\r\n// Export Default\r\nexport default ChannelTutorial;\r\n","import axios from 'axios';\r\nimport { getReq } from \"api\";\r\nimport { ethers } from \"ethers\";\r\nimport { convertAddressToAddrCaip } from './CaipHelper';\r\nimport { IPFSGateway } from './IpfsHelper';\r\n//import { parseEther, bigNumber } from 'ethers/utils'\r\n\r\nconst COINDESK_CHANNEL_ADDR = \"0xe56f1D3EDFFF1f25855aEF744caFE7991c224FFF\";\r\nconst COINDESK_HASH =\r\n  \"1+bafkreif643vf3cteadznccivnsk5uj26e3ls7onbshnldb3aej3omrxsau\";\r\nconst ENS_CHANNEL_ADDR = \"0x983110309620D911731Ac0932219af06091b6744\";\r\nconst ENS_HASH =\r\n  \"1+bafkreiekigkyezwrspignt7l7vsrjefjmogwmigy4eqtts277cu2p23ilm\";\r\n// FeedDB Helper Function\r\nconst EPNSCoreHelper = {\r\n  // get gas price in dollars\r\n  getGasPriceInDollars: async (library) => {\r\n    const ethPrice = await axios\r\n      .get(\"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD\")\r\n      .then(({ data }) => data.USD || 0);\r\n    const gasPriceInWei = await library.getGasPrice();\r\n    const gasPriceInEth = ethers.utils.formatEther(gasPriceInWei);\r\n    const gasPriceInUsd = gasPriceInEth * ethPrice;\r\n    return gasPriceInUsd;\r\n  },\r\n\r\n  // To get owner info\r\n  getOwnerInfo: async (contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract\r\n        .governance()\r\n        .then((response) => {\r\n          if (enableLogs) console.log(\"getOwnerInfo() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"!!!Error, getOwnerInfo() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  getVotingPower: async (delegateeAddress, contract, rawFormat = false) => {\r\n    let isAddress = await ethers.utils.isAddress(delegateeAddress);\r\n    if (isAddress || delegateeAddress.endsWith(\".eth\")) {\r\n      try {\r\n        let decimals = await contract.decimals();\r\n        let votes = await contract.getCurrentVotes(delegateeAddress);\r\n        let votingPower = await Number(votes / Math.pow(10, decimals));\r\n        let prettyVotingPower = votingPower.toString();\r\n        return rawFormat ? votingPower : prettyVotingPower;\r\n      } catch (err) {\r\n        console.log(\r\n          \"🚀 ~ file: ViewDelegateeItem.js ~ line 47 ~ getVotingPower ~ err\",\r\n          err\r\n        );\r\n      }\r\n    }\r\n    return \"0.000\";\r\n  },\r\n  // To get user info\r\n  getUserInfo: async (user, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract\r\n        .users(user)\r\n        .then((response) => {\r\n          const mappings = { ...response };\r\n          mappings.addr = user;\r\n\r\n          if (enableLogs) console.log(\"getUserInfo() --> %o\", mappings);\r\n          resolve(mappings);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"!!!Error, getUserInfo() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // To retrieve a channel address from it's id\r\n  getChannelAddressFromID: async (channelID, contract) => {\r\n    return new Promise((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      contract\r\n        .channelById(channelID)\r\n        .then((response) => {\r\n          // console.log(\"getChannelAddressFromID() --> %o\", response.toString());\r\n          resolve(response.toString());\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"!!!Error, getChannelAddressFromID() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // To retrieve a channel's Info from channel address\r\n  getChannelInfo: async (channel, contract) => {\r\n    if (channel === null) return;\r\n    const enableLogs = 0;\r\n    return new Promise((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      contract\r\n        .channels(channel)\r\n        .then((response) => {\r\n          // Add an extra field for future info\r\n          const mappings = { ...response };\r\n          mappings.addr = channel;\r\n\r\n          if (enableLogs) console.log(\"getChannelInfo() --> %o\", mappings);\r\n          resolve(mappings);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"!!!Error, getChannelInfo() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // To retrieve a channel's AddChannel event\r\n  getChannelEvent: async (channel, startBlock, updateBlock, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // To get channel ipfs hash from channel info\r\n      let filter = contract.filters.AddChannel(channel);\r\n      let block = startBlock;\r\n      if (startBlock != updateBlock) {\r\n        filter = contract.filters.UpdateChannel(channel);\r\n        block = updateBlock;\r\n      }\r\n\r\n      contract\r\n        .queryFilter(filter, block, block)\r\n        .then((response) => {\r\n          let filteredResponse;\r\n\r\n          if (enableLogs)\r\n            console.log(\r\n              \"getChannelEvent() --> Finding: %s in | %o |\",\r\n              channel,\r\n              response\r\n            );\r\n\r\n          response.forEach(function(item) {\r\n            if (item.args.channel.toString() == channel.toString()) {\r\n              if (enableLogs)\r\n                console.log(\r\n                  \"getChannelEvent() --> Selected Channel %o: \",\r\n                  item\r\n                );\r\n              filteredResponse = ethers.utils.toUtf8String(item.args.identity);\r\n            }\r\n          });\r\n\r\n          if (enableLogs)\r\n            console.log(\r\n              \"getChannelEvent() --> Filtered Channel: %o\",\r\n              filteredResponse\r\n            );\r\n          resolve(filteredResponse);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"!!!Error, getChannelEvent() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Retrive IPFS File from ipfshash\r\n  getJsonFileFromIdentity: async (identity, channel) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // Split Channel Identity, delimeter of identity is \"+\"\r\n      if (!identity) {\r\n        reject(\"There is no identity file for channel:\", channel);\r\n      }\r\n      const ids = identity?.split(\"+\") || []; // First segment is storage type, second is the pointer to it\r\n\r\n      if (ids[0] == 1) {\r\n        // IPFS HASH\r\n        // Form Gateway URL\r\n        const IPFS_GATEWAY = IPFSGateway;\r\n        const url = IPFS_GATEWAY + ids[1];\r\n        fetch(url)\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            if (enableLogs)\r\n              console.log(\"getJsonFileFromIdentity() --> %o\", response);\r\n            resolve(response);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"!!!Error, getJsonFileFromIdentity() --> %o\", err);\r\n            reject(err);\r\n          });\r\n      }\r\n    });\r\n  },\r\n\r\n  // Helper to get Channel Alias from Channel's address\r\n  getAliasAddressFromChannelAddress: async (channel, chainId) => {\r\n    if (channel === null) return;\r\n    const enableLogs = 0;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      const channelAddressInCaip = convertAddressToAddrCaip(channel, chainId);\r\n      getReq(`/v1/alias/${channelAddressInCaip}/channel`)\r\n        .then((response) => {\r\n          if (enableLogs)\r\n            console.log(\"getAliasAddressFromChannelAddress() --> %o\", response);\r\n          resolve(response?.data?.aliasAddress);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\r\n            \"!!!Error, getAliasAddressFromChannelAddress() --> %o\",\r\n            err\r\n          );\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Helper to get Channel from Channel's address\r\n  getChannelJsonFromChannelAddress: async (channel, contract) => {\r\n    if (channel === null) return;\r\n    const enableLogs = 0;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      EPNSCoreHelper.getChannelInfo(channel, contract)\r\n        .then((response) =>\r\n          EPNSCoreHelper.getChannelEvent(\r\n            channel,\r\n            response.channelStartBlock.toNumber(),\r\n            response.channelUpdateBlock.toNumber(),\r\n            contract\r\n          )\r\n        )\r\n        .then((response) => {\r\n          // add little hack for now to change coindesk's descriptioon\r\n          const hash =\r\n            channel === COINDESK_CHANNEL_ADDR\r\n              ? COINDESK_HASH\r\n              : channel === ENS_CHANNEL_ADDR\r\n              ? ENS_HASH\r\n              : response;\r\n          return EPNSCoreHelper.getJsonFileFromIdentity(hash, channel);\r\n          // return EPNSCoreHelper.getJsonFileFromIdentity(response, channel)\r\n        })\r\n        .then((response) => {\r\n          if (enableLogs)\r\n            console.log(\"getChannelJsonFromChannelAddress() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\r\n            \"!!!Error, getChannelJsonFromChannelAddress() --> %o\",\r\n            err\r\n          );\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Helper to get Channel from User's address\r\n  getChannelJsonFromUserAddress: async (user, contract) => {\r\n    if (user === null) return;\r\n    const enableLogs = 0;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      // EPNSCoreHelper.getUserInfo(user, contract)\r\n      //   .then(response => EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract))\r\n      EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract)\r\n        .then((response) => {\r\n          if (enableLogs)\r\n            console.log(\"getChannelJsonFromUserAddress() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"!!!Error, getChannelJsonFromUserAddress() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Get Total Number of Channels\r\n  getTotalNumberOfChannels: async (contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract\r\n        .channelsCount()\r\n        .then((response) => {\r\n          if (enableLogs)\r\n            console.log(\r\n              \"getTotalNumberOfChannels() --> %o\",\r\n              response.toNumber()\r\n            );\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"!!!Error, getTotalNumberOfChannels() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Get channels address given number of channels, , atIndex: -1 is start from latest, numChannels: -1 is return all\r\n  getChannelsMetaLatestToOldest: async (atIndex, numChannels, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      EPNSCoreHelper.getTotalNumberOfChannels(contract)\r\n        .then(async (response) => {\r\n          let channelsInfo = [];\r\n          const channelsCount = response;\r\n\r\n          if (atIndex > channelsCount || atIndex == -1) {\r\n            atIndex = channelsCount - 1;\r\n          }\r\n\r\n          if (numChannels == -1) {\r\n            numChannels = channelsCount;\r\n          }\r\n\r\n          // Get channels\r\n          let channelArrays = [];\r\n\r\n          // prefil and then refil\r\n          let count = 0;\r\n          for (let i = numChannels - 1; i >= 0; i--) {\r\n            const assignedChannelID = atIndex - i;\r\n            channelArrays.push(assignedChannelID);\r\n          }\r\n\r\n          const promises = channelArrays.map(async (channelID) => {\r\n            await EPNSCoreHelper.getChannelAddressFromID(channelID, contract)\r\n              .then((response) =>\r\n                EPNSCoreHelper.getChannelInfo(response, contract)\r\n              )\r\n              .then((response) => {\r\n                if (enableLogs)\r\n                  console.log(\r\n                    \"getChannelsMetaLatestToOldest(%d, %d) --> %o\",\r\n                    channelID,\r\n                    numChannels,\r\n                    channelsInfo\r\n                  );\r\n                channelsInfo = [response, ...channelsInfo];\r\n              })\r\n              .catch((err) =>\r\n                console.log(\"Error in channel: %d | skipping...\", channelID)\r\n              );\r\n          });\r\n\r\n          // wait until all promises are resolved\r\n          await Promise.all(promises);\r\n\r\n          if (enableLogs)\r\n            console.log(\r\n              \"getChannelsMetaLatestToOldest(Index: %d, Number: %d) --> %o\",\r\n              atIndex,\r\n              numChannels,\r\n              channelsInfo\r\n            );\r\n          resolve(channelsInfo);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"!!!Error, getChannelsMetaLatestToOldest() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Get Total Number of Users\r\n  getTotalNumberOfUsers: async (contract) => {\r\n    return new Promise((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract\r\n        .usersCount()\r\n        .then((response) => {\r\n          console.log(\"getTotalNumberOfUsers() --> %o\", response.toNumber());\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"!!!Error, getTotalNumberOfUsers() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // To retrieve public key of a user\r\n  getPublicKey: async (address, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // To get channel ipfs hash from channel info\r\n      let filteredResponse;\r\n      contract\r\n        .queryFilter(\"PublicKeyRegistered\")\r\n        .then((response) => {\r\n          response.forEach(function(item) {\r\n            if (item.args[0] == address) {\r\n              filteredResponse = item;\r\n            }\r\n          });\r\n\r\n          if (enableLogs)\r\n            console.log(\"Public Key Registry Response: \" + response);\r\n          if (enableLogs)\r\n            console.log(\"Public Key Registry Filtered: \" + filteredResponse);\r\n\r\n          if (!filteredResponse || filteredResponse.length == 0) {\r\n            resolve(null);\r\n          } else {\r\n            resolve(filteredResponse.args[1]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Get Total Subsbribed Channels\r\n  getSubscribedStatus: async (user, channel, contract) => {\r\n    return new Promise((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract\r\n        .isUserSubscribed(channel, user)\r\n        .then((response) => {\r\n          // console.log(\"getSubscribedStatus() --> %o\", {response, user, channel});\r\n          resolve(response);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"!!!Error, getSubscribedStatus() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Get Total Subsbribed Channels\r\n  getTotalSubscribedChannels: async (user, contract) => {\r\n    return new Promise((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.users[user]\r\n        .subscribedCount()\r\n        .then((response) => {\r\n          console.log(\r\n            \"getTotalSubscribedChannels() --> %o\",\r\n            response.toNumber()\r\n          );\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"!!!Error, getTotalSubscribedChannels() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Get Fair Share\r\n  getFairShareOfUserAtBlock: async (user, block, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract\r\n        .users(user)\r\n        .then((response) => {\r\n          if (response.userActivated) {\r\n            contract\r\n              .calcAllChannelsRatio(user, block)\r\n              .then((response) => {\r\n                if (enableLogs)\r\n                  console.log(\"calcAllChannelsRatio() --> %o\", response);\r\n                resolve(response);\r\n              })\r\n              .catch((err) => {\r\n                console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\r\n                reject(err);\r\n              });\r\n          } else {\r\n            if (enableLogs)\r\n              console.log(\r\n                \"!!!Warning, calcAllChannelsRatio() --> User not activated\"\r\n              );\r\n            reject(\"User not activated\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Get Pool Funds\r\n  getPoolFunds: async (contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      contract\r\n        .poolFunds()\r\n        .then((response) => {\r\n          if (enableLogs) console.log(\"getPoolFunds() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"!!!Error, getPoolFunds() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Helper Functions\r\n  // To format Big Number\r\n  formatBigNumberToMetric: (bignumber, convertToCurrency) => {\r\n    try {\r\n      if (convertToCurrency) {\r\n        bignumber = bignumber.div(100000000000000);\r\n        bignumber = bignumber.div(10000);\r\n      }\r\n      bignumber = bignumber.toNumber();\r\n      return EPNSCoreHelper.metricFormatter(bignumber, 2);\r\n    } catch (e) {\r\n      console.log(e);\r\n      return \"---\";\r\n    }\r\n  },\r\n  // Metric Formatter, thanks: https://stackoverflow.com/questions/9461621/format-a-number-as-2-5k-if-a-thousand-or-more-otherwise-900\r\n  metricFormatter: (num, digits) => {\r\n    var si = [\r\n      { value: 1, symbol: \"\" },\r\n      { value: 1e3, symbol: \"k\" },\r\n      { value: 1e6, symbol: \"M\" },\r\n      { value: 1e9, symbol: \"G\" },\r\n      { value: 1e12, symbol: \"T\" },\r\n      { value: 1e15, symbol: \"P\" },\r\n      { value: 1e18, symbol: \"E\" },\r\n    ];\r\n    var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n    var i;\r\n    for (i = si.length - 1; i > 0; i--) {\r\n      if (num >= si[i].value) {\r\n        break;\r\n      }\r\n    }\r\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\r\n  },\r\n};\r\n\r\nexport default EPNSCoreHelper;\r\n","import EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\n\r\nimport { envConfig } from \"@project/contracts\";\r\nimport { postReq, getReq } from \"api\";\r\n\r\n// STATIC SINGLETON\r\nexport const ChannelEvents = {\r\n  ADD_CHANNEL_ANY: \"AddChannelAny\",\r\n  ADD_CHANNEL_SELF: \"AddChannelSelf\",\r\n  UPDATE_CHANNEL_ANY: \"UpdateChannelAny\",\r\n  UPDATE_CHANNEL_SELF: \"UpdateChannelSelf\",\r\n  SUBSCRIBER_ANY_CHANNEL: \"SubscriberAnyChannel\",\r\n  SUBSCRIBER_SELF_CHANNEL: \"SubscriberSelfChannel\",\r\n  UNSUBSCRIBER_ANY_CHANNEL: \"UnsubscriberAnyChannel\",\r\n  UNSUBSCRIBER_SELF_CHANNEL: \"UnsubscriberSelfChannel\",\r\n};\r\n\r\nexport default class ChannelsDataStore {\r\n  static instance = ChannelsDataStore.instance || new ChannelsDataStore();\r\n\r\n  state = {\r\n    channelsCount: -1,\r\n    channelsMeta: {},\r\n    channelsJson: {},\r\n    subscribers: {},\r\n    subscribersCount: {},\r\n\r\n    callbacks: [],\r\n\r\n    account: null,\r\n    epnsReadProvider: null,\r\n    epnsCommReadProvider: null,\r\n    chainId: null,\r\n    onCoreNetwork: false,\r\n  };\r\n\r\n  // init\r\n  init = (account, epnsReadProvider, epnsCommReadProvider, chainId) => {\r\n    // set account\r\n    this.state.account = account;\r\n\r\n    // set chainId\r\n    this.state.chainId = chainId;\r\n    this.state.onCoreNetwork = chainId === envConfig.coreContractChain;\r\n\r\n    // First attach listeners then overwrite the old one if any\r\n    this.resetChannelsListeners();\r\n    this.state.epnsReadProvider = epnsReadProvider;\r\n    this.state.epnsCommReadProvider = epnsCommReadProvider;\r\n    this.initChannelsListenersAsync();\r\n\r\n    // next get store channels count\r\n    this.getChannelsCountAsync();\r\n  };\r\n\r\n  // RESET LISTENERS\r\n  resetChannelsListeners = () => {\r\n    // only proceed if a read provider is attached\r\n    if (this.state.epnsReadProvider) {\r\n      this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\r\n      this.state.epnsReadProvider.removeAllListeners(\"UpdateChannel\");\r\n      this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\r\n      this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\r\n    }\r\n  };\r\n\r\n  // init LISTENERS\r\n  initChannelsListenersAsync = async () => {\r\n    // Add Listeners\r\n    await this.listenForAddChannelAnyAsync();\r\n    await this.listenForAddChannelSelfAsync();\r\n\r\n    await this.listenForUpdateChannelAnyAsync();\r\n    await this.listenForUpdateChannelSelfAsync();\r\n\r\n    // use the communicator contract for the below\r\n    await this.listenForSubscribeAnyAsync();\r\n    await this.listenForSubscribeSelfAsync();\r\n    await this.listenForUnsubscribeAnyAsync();\r\n    await this.listenForUnsubscribeSelfAsync();\r\n  };\r\n\r\n  // 1. Add Any Channel Listeners\r\n  listenForAddChannelAnyAsync = async () => {\r\n    const contract = this.state.epnsReadProvider;\r\n    let filter = contract.filters.AddChannel(null, null);\r\n\r\n    contract.on(filter, async (channel, ipfs) => {\r\n      // Do own stuff\r\n      await this.incrementChannelsCountAsync(1);\r\n\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, ipfs);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 2. Add Self Channel Listener\r\n  listenForAddChannelSelfAsync = async () => {\r\n    const contract = this.state.epnsReadProvider;\r\n    let filter = contract.filters.AddChannel(this.state.account, null);\r\n\r\n    contract.on(filter, async (channel, ipfs) => {\r\n      // Do own stuff\r\n      // Nothing to do, just do callback\r\n\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, ipfs);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 3. Update Any Channel Listener\r\n  listenForUpdateChannelAnyAsync = async () => {\r\n    const contract = this.state.epnsReadProvider;\r\n    let filter = contract.filters.UpdateChannel(null, null);\r\n\r\n    contract.on(filter, async (channel, ipfs) => {\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, ipfs);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 4. Update Self Channel Listener\r\n  listenForUpdateChannelSelfAsync = async () => {\r\n    const contract = this.state.epnsReadProvider;\r\n    let filter = contract.filters.UpdateChannel(this.state.account, null);\r\n\r\n    contract.on(filter, async (channel, ipfs) => {\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, ipfs);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 5. Subscriber Any\r\n  listenForSubscribeAnyAsync = async () => {\r\n    const contract = this.state.epnsCommReadProvider;\r\n    let filter = contract.filters.Subscribe(null, null);\r\n\r\n    contract.on(filter, async (channel, user) => {\r\n      //   // Do own stuff\r\n      //   if (this.state.channelsMeta[channel]) {\r\n      //     const channelID = this.state.channelsMeta[channel];\r\n      //     let count = this.state.channelsMeta[channelID].memberCount.toNumber();\r\n      //     count = count + 1;\r\n      //     this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\r\n      //   }\r\n\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, user);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 6. Subscriber Self\r\n  listenForSubscribeSelfAsync = async () => {\r\n    const contract = this.state.epnsCommReadProvider;\r\n    let filter = contract.filters.Subscribe(this.state.account, null);\r\n\r\n    contract.on(filter, async (channel, user) => {\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, user);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 7. Unsubscribe Any\r\n  listenForUnsubscribeAnyAsync = async () => {\r\n    const contract = this.state.epnsCommReadProvider;\r\n    let filter = contract.filters.Unsubscribe(null, null);\r\n\r\n    contract.on(filter, async (channel, user) => {\r\n      // Do own stuff\r\n      // if (this.state.channelsMeta[channel]) {\r\n      //   const channelID = this.state.channelsMeta[channel];\r\n      //   let count = this.state.channelsMeta[channelID].memberCount.toNumber();\r\n      //   count = count - 1;\r\n      //   this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\r\n      // }\r\n\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, user);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 8. Unsubscribe Self\r\n  listenForUnsubscribeSelfAsync = async () => {\r\n    const contract = this.state.epnsCommReadProvider;\r\n    let filter = contract.filters.Unsubscribe(this.state.account, null);\r\n\r\n    contract.on(filter, async (channel, user) => {\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, user);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // FOR CALLBACKS\r\n  addCallbacks = (callbackType, callbackID, callback) => {\r\n    // first check if callback already exists\r\n    if (!this.state.callbacks[callbackType]) {\r\n      this.state.callbacks[callbackType] = {};\r\n    }\r\n\r\n    if (!this.state.callbacks[callbackType][callbackID]) {\r\n      this.state.callbacks[callbackType][callbackID] = callback;\r\n    }\r\n  };\r\n\r\n  removeCallbacks = (callbackType, callbackID) => {\r\n    // first check if callback already exists\r\n    if (this.state.callbacks[callbackType][callbackID]) {\r\n      this.state.callbacks[callbackType][callbackID] = null;\r\n    }\r\n  };\r\n\r\n  // CHANNELS COUNT\r\n  getChannelsCountAsync = async () => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n      if (this.state.channelsCount == -1) {\r\n        // Count not set, get and set it first\r\n        const count = EPNSCoreHelper.getTotalNumberOfChannels(\r\n          this.state.epnsReadProvider\r\n        )\r\n          .then((response) => {\r\n            this.state.channelsCount = response;\r\n\r\n            if (enableLogs)\r\n              console.log(\"getChannelsCountAsync() --> %o\", response);\r\n            resolve(this.state.channelsCount);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"!!!Error, getChannelsCountAsync() --> %o\", err);\r\n            reject(err);\r\n          });\r\n      } else {\r\n        resolve(this.state.channelsCount);\r\n      }\r\n    });\r\n  };\r\n\r\n  incrementChannelsCountAsync = async (incrementCount) => {\r\n    return new Promise((resolve, reject) => {\r\n      this.getChannelsCountAsync()\r\n        .then((response) => {\r\n          this.state.channelsCount = response + incrementCount;\r\n          console.log(\r\n            \"incrementChannelsCountAsync() --> %d\",\r\n            this.state.channelsCount\r\n          );\r\n          resolve(this.state.channelsCount);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"!!!Error, incrementChannelsCountAsync() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  };\r\n  /**\r\n   * Get paginated channel information\r\n   * @param {Number} startIndex the number of channels viewed so far e.g 50\r\n   * @param {Number} pageCount the number of items per page we want\r\n   * @returns\r\n   */\r\n  getChannelFromApi = async (startIndex, pageCount, account, chainId) => {\r\n    return postReq(\"/channels/_search\", {\r\n      page: Math.ceil(startIndex / pageCount) || 1,\r\n      pageSize: pageCount,\r\n      address: account,\r\n      chainId: chainId,\r\n      query: \" \",\r\n      op: \"read\",\r\n    }).then((response) => {\r\n      let output;\r\n      output = response.data.channels.map(\r\n        ({ alias_address, channel, memberCount, isSubscriber }) => {\r\n          this.state.subscribersCount[channel] = memberCount;\r\n          return {\r\n            addr: channel,\r\n            alias_address: alias_address,\r\n            memberCount: memberCount,\r\n            isSubscriber: isSubscriber,\r\n          };\r\n        }\r\n      );\r\n      return output;\r\n    });\r\n  };\r\n  //Helper to get eth address of an alias when in alias network\r\n  getEthAddressFromAlias = async (channel) => {\r\n    if (channel === null) return;\r\n    const enableLogs = 0;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      postReq(\"/channels/getCoreAddress\", {\r\n        aliasAddress: channel,\r\n        op: \"read\",\r\n      })\r\n        .then(({ data }) => {\r\n          if (enableLogs)\r\n            console.log(\"getEthAddressFromAlias() --> %o\", data?.ethAddress);\r\n          resolve(data?.ethAddress);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"!!!Error, getEthAddressFromAlias() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  };\r\n  // Helper to get Channel Alias from Channel's address\r\n  getChannelDetailsFromAddress = async (channel) => {\r\n    if (channel === null) return;\r\n    const enableLogs = 0;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      getReq(`/v1/channels/search?query=${channel}`)\r\n        .then((response) => {\r\n          let output;\r\n          output = response.data.channels.map(\r\n            ({\r\n              alias_address,\r\n              is_alias_verified,\r\n            }) => {\r\n              return {\r\n                aliasAddress: alias_address,\r\n                isAliasVerified: is_alias_verified,\r\n              };\r\n            }\r\n          );\r\n          if (enableLogs)\r\n            console.log(\"getChannelDetailsFromAddress() --> %o\", response);\r\n          if (output.length === 0) {\r\n            output.push({ alias_address: null, isAliasVerified: null });\r\n          }\r\n          resolve(output[0]);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"!!!Error, getChannelDetailsFromAddress() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  };\r\n  // CHANNELS META FUNCTIONS\r\n  // To get channels meta\r\n  // get channels meta in a paginated format\r\n  // by passing in the starting index and the number of items per page\r\n  getChannelsMetaAsync = async (startIndex, pageCount) => {\r\n    this.getChannelFromApi(\r\n      startIndex,\r\n      pageCount,\r\n      this.state.account,\r\n      this.state.chainId\r\n    );\r\n    return new Promise(async (resolve, reject) => {\r\n      // get total number of channels\r\n      const channelsCount = await this.getChannelsCountAsync();\r\n      let stopIndex = startIndex + pageCount;\r\n\r\n      // if the stop index is -1 then get all channels\r\n      if (stopIndex == -1 || stopIndex > channelsCount) {\r\n        stopIndex = channelsCount;\r\n      }\r\n\r\n      // initialise an array with the values from 0 to the length of the number of channels\r\n      let channelIDs = [];\r\n\r\n      for (let i = startIndex; i < stopIndex; i++) {\r\n        channelIDs.push(i);\r\n      }\r\n      console.log({ channelIDs });\r\n\r\n      const promises = channelIDs.map(async (channelID) => {\r\n        // Match the cache\r\n        return this.getChannelMetaAsync(channelID)\r\n          .then((response) => response)\r\n          .catch((err) =>\r\n            console.log(\r\n              \"!!!Error (but skipping), getChannelMetaAsync() --> %o\",\r\n              err\r\n            )\r\n          );\r\n      });\r\n\r\n      // wait until all promises are resolved\r\n      const channelMetaData = await Promise.all(promises);\r\n\r\n      // return channels meta\r\n      // console.log(\"getChannelsMetaAsync(From %d to %d) --> %o\", startIndex, stopIndex, channelMetaData);\r\n      resolve(channelMetaData);\r\n    });\r\n  };\r\n\r\n  // To get a single channel meta via id\r\n  getChannelMetaAsync = async (channelID) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (this.state.channelsMeta[channelID]) {\r\n        console.log(\r\n          \"getChannelMetaAsync() [CACHED] --> %o\",\r\n          this.state.channelsMeta[channelID]\r\n        );\r\n        resolve(this.state.channelsMeta[channelID]);\r\n      } else {\r\n        let channelAddress;\r\n\r\n        await EPNSCoreHelper.getChannelAddressFromID(\r\n          channelID,\r\n          this.state.epnsReadProvider\r\n        )\r\n          .then(async (response) => {\r\n            channelAddress = response;\r\n            await this.getChannelMetaViaAddressAsync(channelAddress).then(\r\n              (response) => {\r\n                // update the channel cache before resolving\r\n                this.state.channelsMeta[channelID] = response;\r\n                this.state.channelsMeta[channelAddress] = channelID;\r\n\r\n                // resolve\r\n                // console.log(\"getChannelMetaAsync() [Address: %s] --> %o\", channelAddress, response);\r\n                resolve(response);\r\n              }\r\n            );\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"!!!Error, getChannelMetaAsync() --> %o\", err);\r\n            reject(err);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  // To get a single channel meta via address\r\n  getChannelMetaViaAddressAsync = async (channelAddress) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (this.state.channelsMeta[channelAddress]) {\r\n        const channelID = this.state.channelsMeta[channelAddress];\r\n\r\n        console.log(\r\n          \"getChannelMetaViaAddressAsync() [CACHED] --> %o\",\r\n          this.state.channelsMeta[channelID]\r\n        );\r\n        resolve(this.state.channelsMeta[channelID]);\r\n      } else {\r\n        // Can't cache this :(, no way to know channel id\r\n        await EPNSCoreHelper.getChannelInfo(\r\n          channelAddress,\r\n          this.state.epnsReadProvider\r\n        )\r\n          .then((response) => {\r\n            // resolve\r\n            // console.log(\"getChannelMetaViaAddressAsync() [Address: %s] --> %o\", channelAddress, response);\r\n            resolve(response);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\r\n              \"!!!Error, getChannelMetaViaAddressAsync() --> %o\",\r\n              err\r\n            );\r\n            reject(err);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  getChannelSubscribers = async (channelAddress) => {\r\n    if (!channelAddress) return;\r\n    const cachedSubscribers = this.state.subscribers[channelAddress];\r\n    if (cachedSubscribers) {\r\n      return cachedSubscribers;\r\n    }\r\n    let address = channelAddress;\r\n\r\n    return postReq(\"/channels/_get_subscribers\", {\r\n      channel: address,\r\n      blockchain: this.state.chainId,\r\n      op: \"read\",\r\n    })\r\n      .then(({ data }) => {\r\n        const subs = data.subscribers;\r\n        this.state.subscribers[channelAddress] = subs;\r\n        return subs;\r\n      })\r\n      .catch((err) => {\r\n        console.log(`getChannelSubscribers => ${err.message}`);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  getChannelSubscribersCount = async (channelAddress) => {\r\n    if (!channelAddress) return;\r\n    const cachedSubscribersCount = this.state.subscribers[channelAddress];\r\n    if (cachedSubscribersCount) {\r\n      return cachedSubscribersCount;\r\n    }\r\n    let address = channelAddress;\r\n\r\n    return postReq(\"/channels/_get_subscribers\", {\r\n      channel: address,\r\n      blockchain: this.state.chainId,\r\n      op: \"read\",\r\n    })\r\n      .then(({ data }) => {\r\n        const subs = data.subscribers;\r\n        this.state.subscribersCount[channelAddress] = subs.length;\r\n        return subs.length;\r\n      })\r\n      .catch((err) => {\r\n        console.log(`getChannelSubscribersCount => ${err.message}`);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  // CHANNELS INFO FUNCTIONS\r\n  // To get a single channel meta via id\r\n  getChannelJsonAsync = async (channelAddress) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (this.state.channelsJson[channelAddress]) {\r\n        // console.log(\"getChannelJsonAsync() [CACHED] --> %o\", this.state.channelsJson[channelAddress]);\r\n        resolve(this.state.channelsJson[channelAddress]);\r\n      } else {\r\n        try {\r\n          // let objResponse = {};\r\n          const getChannelJson = await EPNSCoreHelper.getChannelJsonFromChannelAddress(\r\n            channelAddress,\r\n            this.state.epnsReadProvider\r\n          ).then((response) => {\r\n            return response;\r\n          });\r\n          // console.log(await this.state.channelsMeta, channelAddress);\r\n          // const getAliasAddress = EPNSCoreHelper.getAliasAddressFromChannelAddress(\r\n          //   channelAddress, this.state.chainId\r\n          // )\r\n          // .then((response) => {\r\n          //   objResponse.alias_address = response;\r\n          // });\r\n\r\n          // await Promise.all([getAliasAddress, getChannelJson]);\r\n\r\n          console.log(\r\n            \"getChannelJsonAsync() [Address: %s] --> %o\",\r\n            getChannelJson\r\n          );\r\n          this.state.channelsJson[channelAddress] = getChannelJson;\r\n          resolve(getChannelJson);\r\n        } catch (err) {\r\n          console.log(\"!!!Error, getChannelJsonAsync() --> %o\", err);\r\n          reject(err);\r\n        }\r\n      }\r\n    });\r\n  };\r\n}","/**\r\n * This file helps us maintain the channels fetched in state, such that when we leave the tab, the channels can be fetched from memory\r\n */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  CHANNNEL_DEACTIVATED_STATE: 2,\r\n  CHANNEL_BLOCKED_STATE: 3,\r\n  CHANNEL_ACTIVE_STATE: 1,\r\n  CHANNEL_BLACKLIST: [], //a list of channels\r\n  page: 0,\r\n  channels: [], // the channels meta-data\r\n  channelsCache: {}, // a mapping of channel address to channel details\r\n};\r\n\r\nexport const channelSlice = createSlice({\r\n  name: \"channels\",\r\n  initialState,\r\n  reducers: {\r\n    setChannelMeta: (state, action) => {\r\n      state.channels = action.payload;\r\n    },\r\n    incrementPage: (state) => {\r\n      state.page += 1;\r\n    },\r\n    cacheChannelInfo: (state, action) => {\r\n      const { address, meta } = action.payload;\r\n      state.channelsCache[address] = meta;\r\n    },\r\n    cacheSubscribe: (state, action) => {\r\n      const { channelAddress } = action.payload;\r\n      const channelIndex = state.channels.findIndex((channelInfo) => channelInfo.addr === channelAddress);\r\n      state.channels[channelIndex].memberCount++;\r\n      state.channels[channelIndex].isSubscriber = true;\r\n    },\r\n    cacheUnsubscribe: (state, action) => {\r\n      const { channelAddress } = action.payload;\r\n      const channelIndex = state.channels.findIndex((channelInfo) => channelInfo.addr === channelAddress);\r\n      state.channels[channelIndex].memberCount--;\r\n      state.channels[channelIndex].isSubscriber = false;\r\n    }\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n  setChannelMeta,\r\n  incrementPage,\r\n  cacheChannelInfo,\r\n  cacheSubscribe,\r\n  cacheUnsubscribe\r\n} = channelSlice.actions;\r\n\r\nexport default channelSlice.reducer;\r\n","import React from \"react\";\r\nimport styled, { css, useTheme } from \"styled-components\";\r\nimport { Device } from \"assets/Device\";\r\n\r\nimport { toast as toaster } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport { Oval } from \"react-loader-spinner\";\r\nimport Skeleton from \"@yisheng90/react-loading\";\r\nimport { IoMdPeople } from \"react-icons/io\";\r\nimport { GoVerified } from \"react-icons/go\";\r\nimport { FaRegAddressCard } from \"react-icons/fa\";\r\nimport { AiOutlineShareAlt } from \"react-icons/ai\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { ItemH, Span } from \"../primaries/SharedStyling\";\r\n\r\nimport { postReq } from \"api\";\r\n\r\nimport MetaInfoDisplayer from \"components/MetaInfoDisplayer\";\r\nimport NotificationToast from \"../primaries/NotificationToast\";\r\n\r\nimport ChannelTutorial, {\r\n  isChannelTutorialized,\r\n} from \"segments/ChannelTutorial\";\r\n\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport { cacheChannelInfo } from \"redux/slices/channelSlice\";\r\n\r\nimport { envConfig } from \"@project/contracts\";\r\nimport {\r\n  incrementStepIndex,\r\n  addNewWelcomeNotif,\r\n} from \"redux/slices/userJourneySlice\";\r\nimport { cacheSubscribe, cacheUnsubscribe } from \"redux/slices/channelSlice\";\r\nimport useToast from \"hooks/useToast\";\r\n\r\nimport { MdCheckCircle, MdError } from \"react-icons/md\";\r\n\r\n// Create Header\r\nfunction ViewChannelItem({ channelObjectProp, loadTeaser, playTeaser }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const themes = useTheme();\r\n\r\n  const { run, stepIndex } = useSelector((state) => state.userJourney);\r\n\r\n  const {\r\n    epnsReadProvider,\r\n    epnsWriteProvider,\r\n    epnsCommReadProvider,\r\n    pushAdminAddress,\r\n    ZERO_ADDRESS,\r\n  } = useSelector((state) => state.contracts);\r\n  const { canVerify } = useSelector((state) => state.admin);\r\n  const { channelsCache, CHANNEL_BLACKLIST } = useSelector(\r\n    (state) => state.channels\r\n  );\r\n  const { account, library, chainId } = useWeb3React();\r\n\r\n  const onCoreNetwork = chainId === envConfig.coreContractChain;\r\n\r\n  const [channelObject, setChannelObject] = React.useState({});\r\n  const [channelJson, setChannelJson] = React.useState({});\r\n  const [subscribed, setSubscribed] = React.useState(true);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [memberCount, setMemberCount] = React.useState(0);\r\n  const [isPushAdmin, setIsPushAdmin] = React.useState(false);\r\n  const [isVerified, setIsVerified] = React.useState(false);\r\n  const [isBlocked, setIsBlocked] = React.useState(false);\r\n  const [vLoading, setvLoading] = React.useState(false);\r\n  const [bLoading, setBLoading] = React.useState(false);\r\n  const [txInProgress, setTxInProgress] = React.useState(false);\r\n  const [canUnverify, setCanUnverify] = React.useState(false);\r\n  const [verifierDetails, setVerifierDetails] = React.useState(null);\r\n  const [copyText, setCopyText] = React.useState(null);\r\n\r\n  // ------ toast related section\r\n  const isChannelBlacklisted = CHANNEL_BLACKLIST.includes(channelObject.addr);\r\n  const [toast, showToast] = React.useState(null);\r\n  const clearToast = () => showToast(null);\r\n\r\n  let isOwner;\r\n  if (!onCoreNetwork) {\r\n    isOwner = channelObject.alias_address === account;\r\n  } else {\r\n    isOwner = channelObject.addr === account;\r\n  }\r\n\r\n  //clear toast variable after it is shown\r\n  React.useEffect(() => {\r\n    if (toast) {\r\n      clearToast();\r\n    }\r\n  }, [toast]);\r\n  // ------ toast related section\r\n\r\n  React.useEffect(() => {\r\n    if (!channelObject.addr) return;\r\n    if (channelObject.verifiedBy) {\r\n      // procced as usual\r\n      fetchChannelJson().catch((err) => alert(err.message));\r\n      setIsBlocked(\r\n        channelObject.channelState === 3 || channelObject.channelState === 2 //dont display channel if blocked //dont display channel if deactivated\r\n      );\r\n    } else {\r\n      // if this key (verifiedBy) is not present it means we are searching and should fetch the channel object from chain again\r\n      epnsReadProvider.channels(channelObject.addr).then((response) => {\r\n        setChannelObject({\r\n          ...response,\r\n          addr: channelObject.addr,\r\n          alias_address: channelObject.alias_address,\r\n          memberCount: channelObject.memberCount,\r\n          isSubscriber: channelObject.isSubscriber,\r\n        });\r\n        fetchChannelJson();\r\n      });\r\n    }\r\n  }, [account, channelObject, chainId]);\r\n\r\n  React.useEffect(() => {\r\n    if (!channelObjectProp) return;\r\n    setChannelObject(channelObjectProp);\r\n  }, [channelObjectProp]);\r\n\r\n  React.useEffect(() => {\r\n    if (!isVerified || channelObject?.verifiedBy === ZERO_ADDRESS) return;\r\n    ChannelsDataStore.instance\r\n      .getChannelJsonAsync(channelObject.verifiedBy)\r\n      .then((verifierDetails) => {\r\n        setVerifierDetails(verifierDetails);\r\n      })\r\n      .catch((err) => {\r\n        console.log(channelObject.verifiedBy, err);\r\n      });\r\n  }, [isVerified, channelObject]);\r\n\r\n  const EPNS_DOMAIN = {\r\n    name: \"EPNS COMM V1\",\r\n    chainId: chainId,\r\n    verifyingContract: epnsCommReadProvider.address,\r\n  };\r\n  // to fetch channels\r\n  const fetchChannelJson = async () => {\r\n    try {\r\n      let channelJson = {};\r\n      setCopyText(channelObject.addr);\r\n      if (channelsCache[channelObject.addr]) {\r\n        channelJson = channelsCache[channelObject.addr];\r\n      } else {\r\n        channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(\r\n          channelObject.addr\r\n        );\r\n        dispatch(\r\n          cacheChannelInfo({\r\n            address: channelObject.addr,\r\n            meta: channelJson,\r\n          })\r\n        );\r\n      }\r\n      let channelAddress = channelObject.addr;\r\n      if (!onCoreNetwork) {\r\n        channelAddress = channelObject.alias_address;\r\n      }\r\n      if (!channelAddress) return;\r\n\r\n      setIsPushAdmin(pushAdminAddress === account);\r\n      setMemberCount(channelObject.memberCount);\r\n      setSubscribed(channelObject.isSubscriber);\r\n      setChannelJson({\r\n        ...channelJson,\r\n        addr: channelObject.addr,\r\n        memberCount: channelObject.memberCount,\r\n        isSubscriber: channelObject.isSubscriber,\r\n      });\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setIsBlocked(true);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!channelObject) return;\r\n    setIsVerified(\r\n      Boolean(\r\n        (channelObject.verifiedBy &&\r\n          channelObject.verifiedBy !== ZERO_ADDRESS) ||\r\n          channelObject.addr === pushAdminAddress\r\n      )\r\n    );\r\n    setCanUnverify(channelObject.verifiedBy == account);\r\n  }, [channelObject]);\r\n\r\n  // toast customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Oval color={color} height={30} width={30} />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  );\r\n\r\n  // to subscribe\r\n  const subscribe = async () => {\r\n    console.log(\"click executed\");\r\n    subscribeAction(false);\r\n  };\r\n  const formatAddress = (addressText) => {\r\n    return addressText.length > 40\r\n      ? `${addressText.slice(0, 4)}....${addressText.slice(36)}`\r\n      : addressText;\r\n  };\r\n\r\n  // Toastify\r\n  let notificationToast = () =>\r\n    toaster.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />, {\r\n      position: \"bottom-right\",\r\n      autoClose: false,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n  const verifyChannel = () => {\r\n    setvLoading(true);\r\n    // post op\r\n    epnsWriteProvider\r\n      .verifyChannel(channelObject.addr)\r\n      .then(async (tx) => {\r\n        console.log(tx);\r\n        console.log(\"Transaction Sent!\");\r\n\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transaction sent\",\r\n          type: toaster.TYPE.INFO,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        // await tx.wait(1);\r\n        // console.log (\"Transaction Mined!\");\r\n        setIsVerified(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"!!!Error verifyChannel() --> %o\", err);\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transacion Failed: \" + err.error?.message || \"Unknown Error\",\r\n          type: toaster.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setvLoading(false);\r\n      });\r\n  };\r\n\r\n  const unverifyChannel = () => {\r\n    setvLoading(true);\r\n    epnsWriteProvider\r\n      .unverifyChannel(channelObject.addr)\r\n      .then(async (tx) => {\r\n        console.log(tx);\r\n        console.log(\"Transaction Sent!\");\r\n\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transaction sent\",\r\n          type: toaster.TYPE.INFO,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        await tx.wait(1);\r\n        console.log(\"Transaction Mined!\");\r\n        setIsVerified(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transacion Failed: \" + err.error?.message || \"Unknown Error\",\r\n          type: toaster.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n      });\r\n    setvLoading(false);\r\n  };\r\n  const blockChannel = () => {\r\n    setBLoading(true);\r\n    epnsWriteProvider\r\n      .blockChannel(channelObject.addr)\r\n      .then(async (tx) => {\r\n        console.log(tx);\r\n        console.log(\"Transaction Sent!\");\r\n\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transaction Sent\",\r\n          type: toaster.TYPE.INFO,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        // await tx.wait(1);\r\n        // console.log (\"Transaction Mined!\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transacion Failed: \" + err.error.message,\r\n          type: toaster.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n      })\r\n      .finally(() => {\r\n        // post op\r\n        setBLoading(false);\r\n        setIsBlocked(true);\r\n      });\r\n  };\r\n\r\n  const subscribeToast = useToast();\r\n  const subscribeAction = async () => {\r\n    setTxInProgress(true);\r\n    // let txToast;\r\n    try {\r\n      const type = {\r\n        Subscribe: [\r\n          { name: \"channel\", type: \"address\" },\r\n          { name: \"subscriber\", type: \"address\" },\r\n          { name: \"action\", type: \"string\" },\r\n        ],\r\n      };\r\n\r\n      let channelAddress = channelObject.addr;\r\n      if (!onCoreNetwork) {\r\n        channelAddress = channelObject.alias_address;\r\n      }\r\n\r\n      const message = {\r\n        channel: channelAddress,\r\n        subscriber: account,\r\n        action: \"Subscribe\",\r\n      };\r\n\r\n      const signature = await library\r\n        .getSigner(account)\r\n        ._signTypedData(EPNS_DOMAIN, type, message);\r\n      // txToast = toaster.dark(\r\n      //   <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\r\n      //   {\r\n      //     position: \"bottom-right\",\r\n      //     autoClose: false,\r\n      //     hideProgressBar: true,\r\n      //     closeOnClick: true,\r\n      //     pauseOnHover: true,\r\n      //     draggable: true,\r\n      //     progress: undefined,\r\n      //   }\r\n      // );\r\n      subscribeToast.showToast(\"Waiting for Confirmation...\");\r\n\r\n      if (run) {\r\n        console.log(\"in run\");\r\n        // toaster.update(txToast, {\r\n        //   render: \"Successfully opted into channel !\",\r\n        //   type: toaster.TYPE.SUCCESS,\r\n        //   autoClose: 5000,\r\n        // });\r\n        subscribeToast.updateToast(\r\n          \"Success\",\r\n          \"Successfully opted into channel !\",\r\n          \"SUCCESS\",\r\n          (size) => <MdCheckCircle size={size} color=\"green\" />\r\n        );\r\n\r\n        dispatch(\r\n          addNewWelcomeNotif({\r\n            cta: \"\",\r\n            title: channelJson.info,\r\n            message: `Welcome to ${channelJson.name} Channel. From now onwards, you'll be getting notifications from this channel`,\r\n            icon: channelJson.icon,\r\n            url: channelJson.url,\r\n            sid: \"\",\r\n            app: channelJson.name,\r\n            image: \"\",\r\n          })\r\n        );\r\n        setTxInProgress(false);\r\n        setSubscribed(true);\r\n        if (stepIndex === 5) {\r\n          console.log(\"this is working\");\r\n          dispatch(incrementStepIndex());\r\n        }\r\n        return;\r\n      }\r\n\r\n      postReq(\"/channels/subscribe\", {\r\n        signature,\r\n        message,\r\n        op: \"write\",\r\n        chainId,\r\n        contractAddress: epnsCommReadProvider.address,\r\n      }).then((res) => {\r\n        dispatch(cacheSubscribe({ channelAddress: channelObject.addr }));\r\n        setSubscribed(true);\r\n        setMemberCount(memberCount + 1);\r\n\r\n        // toaster.update(txToast, {\r\n        //   render: \"Successfully opted into channel !\",\r\n        //   type: toaster.TYPE.SUCCESS,\r\n        //   autoClose: 5000,\r\n        // });\r\n        subscribeToast.updateToast(\r\n          \"Success\",\r\n          \"Successfully opted into channel !\",\r\n          \"SUCCESS\",\r\n          (size) => <MdCheckCircle size={size} color=\"green\" />\r\n        );\r\n\r\n        console.log(res);\r\n        setTxInProgress(false);\r\n      });\r\n    } catch (err) {\r\n      // toaster.update(txToast, {\r\n      //   render: \"There was an error opting into channel (\" + err.message + \")\",\r\n      //   type: toaster.TYPE.ERROR,\r\n      //   autoClose: 5000,\r\n      // });\r\n      subscribeToast.updateToast(\r\n        \"Error\",\r\n        `There was an error opting into channel ( ${err.message} )`,\r\n        \"ERROR\",\r\n        (size) => <MdError size={size} color=\"red\" />\r\n      );\r\n\r\n      console.log(err);\r\n    } finally {\r\n      setTxInProgress(false);\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = (address) => {\r\n    let hostname = window.location.hostname;\r\n    // if we are on localhost, attach the port\r\n    if (hostname === \"localhost\") {\r\n      hostname = hostname + \":3000\";\r\n    }\r\n    const url = `${hostname}/#/channels?channel=${address}`;\r\n    // fallback for non navigator browser support\r\n    if (navigator && navigator.clipboard) {\r\n      navigator.clipboard.writeText(url);\r\n    } else {\r\n      const el = document.createElement(\"textarea\");\r\n      el.value = url;\r\n      document.body.appendChild(el);\r\n      el.select();\r\n      document.execCommand(\"copy\");\r\n      document.body.removeChild(el);\r\n    }\r\n  };\r\n\r\n  const unsubscribeToast = useToast();\r\n  const unsubscribeAction = async () => {\r\n    // let txToast;\r\n    try {\r\n      const type = {\r\n        Unsubscribe: [\r\n          { name: \"channel\", type: \"address\" },\r\n          { name: \"unsubscriber\", type: \"address\" },\r\n          { name: \"action\", type: \"string\" },\r\n        ],\r\n      };\r\n\r\n      let channelAddress = channelObject.addr;\r\n      if (!onCoreNetwork) {\r\n        channelAddress = channelObject.alias_address;\r\n      }\r\n\r\n      const message = {\r\n        channel: channelAddress,\r\n        unsubscriber: account,\r\n        action: \"Unsubscribe\",\r\n      };\r\n      const signature = await library\r\n        .getSigner(account)\r\n        ._signTypedData(EPNS_DOMAIN, type, message);\r\n\r\n      // txToast = toaster.dark(\r\n      //   <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\r\n      //   {\r\n      //     position: \"bottom-right\",\r\n      //     autoClose: false,\r\n      //     hideProgressBar: true,\r\n      //     closeOnClick: true,\r\n      //     pauseOnHover: true,\r\n      //     draggable: true,\r\n      //     progress: undefined,\r\n      //   }\r\n      // );\r\n      unsubscribeToast.showToast(\"Waiting for Confirmation...\");\r\n\r\n      postReq(\"/channels/unsubscribe\", {\r\n        signature,\r\n        message,\r\n        op: \"write\",\r\n        chainId,\r\n        contractAddress: epnsCommReadProvider.address,\r\n      })\r\n        .then((res) => {\r\n          dispatch(cacheUnsubscribe({ channelAddress: channelObject.addr }));\r\n          setSubscribed(false);\r\n          setMemberCount(memberCount - 1);\r\n\r\n          // toaster.update(txToast, {\r\n          //   render: \"Successfully opted out of channel !\",\r\n          //   type: toaster.TYPE.SUCCESS,\r\n          //   autoClose: 5000,\r\n          // });\r\n          unsubscribeToast.updateToast(\r\n            \"Success\",\r\n            \"Successfully opted out of channel !\",\r\n            \"SUCCESS\",\r\n            (size) => <MdCheckCircle size={size} color=\"green\" />\r\n          );\r\n\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          // toaster.update(txToast, {\r\n          //   render:\r\n          //     \"There was an error opting into channel (\" + err.message + \")\",\r\n          //   type: toaster.TYPE.ERROR,\r\n          //   autoClose: 5000,\r\n          // });\r\n          unsubscribeToast.updateToast(\r\n            \"Error\",\r\n            `There was an error opting into channel ( ${err.message} )`,\r\n            \"ERROR\",\r\n            (size) => <MdError size={size} color=\"red\" />\r\n          );\r\n\r\n          console.log(err);\r\n        })\r\n        .finally(() => {\r\n          setTxInProgress(false);\r\n        });\r\n    } finally {\r\n      setTxInProgress(false);\r\n    }\r\n  };\r\n\r\n  const CTA_OVERRIDE_CACHE = {\r\n    \"0xb1676B5Ab63F01F154bb9938F5e8999d9Da5444B\": \"https://boardroom.io/\",\r\n    \"0x7DA9A33d15413F499299687cC9d81DE84684E28E\":\r\n      \"https://rmm.realtoken.network/dashboard\",\r\n    \"0x90A48D5CF7343B08dA12E067680B4C6dbfE551Be\": \"https://shapeshift.com\",\r\n  };\r\n  if (isBlocked) return <></>;\r\n  if (isChannelBlacklisted) return <></>;\r\n\r\n  // render\r\n  return (\r\n    <Container key={channelObject.addr}>\r\n      <ChannelLogo>\r\n        <ChannelLogoOuter>\r\n          <ChannelLogoInner>\r\n            {loading ? (\r\n              <Skeleton color={themes.interfaceSkeleton} height=\"100%\" />\r\n            ) : (\r\n              <ChannelLogoImg src={`${channelJson.icon}`} />\r\n            )}\r\n          </ChannelLogoInner>\r\n        </ChannelLogoOuter>\r\n      </ChannelLogo>\r\n\r\n      <ChannelInfo>\r\n        <ChannelTitle>\r\n          {loading ? (\r\n            <Skeleton\r\n              color={themes.interfaceSkeleton}\r\n              width=\"50%\"\r\n              height={24}\r\n            />\r\n          ) : (\r\n            <ChannelTitleLink\r\n              href={CTA_OVERRIDE_CACHE[channelObject.addr] || channelJson.url}\r\n              target=\"_blank\"\r\n              rel=\"nofollow\"\r\n            >\r\n              <Span>\r\n                {channelJson.name}\r\n                {isVerified && (\r\n                  <Span margin=\"0px 5px\">\r\n                    <GoVerified\r\n                      size={18}\r\n                      color={themes.viewChannelVerifiedBadge}\r\n                    />\r\n                  </Span>\r\n                )}\r\n              </Span>\r\n            </ChannelTitleLink>\r\n          )}\r\n        </ChannelTitle>\r\n\r\n        <ChannelDesc>\r\n          {loading ? (\r\n            <>\r\n              <SkeletonWrapper atH={5} atW={100}>\r\n                <Skeleton\r\n                  color={themes.interfaceSkeleton}\r\n                  width=\"100%\"\r\n                  height={5}\r\n                />\r\n              </SkeletonWrapper>\r\n\r\n              <SkeletonWrapper atH={5} atW={100}>\r\n                <Skeleton\r\n                  color={themes.interfaceSkeleton}\r\n                  width=\"100%\"\r\n                  height={5}\r\n                />\r\n              </SkeletonWrapper>\r\n\r\n              <SkeletonWrapper atH={5} atW={100}>\r\n                <Skeleton\r\n                  color={themes.interfaceSkeleton}\r\n                  width=\"40%\"\r\n                  height={5}\r\n                />\r\n              </SkeletonWrapper>\r\n            </>\r\n          ) : (\r\n            <ChannelDescLabel>{channelJson.info}</ChannelDescLabel>\r\n          )}\r\n        </ChannelDesc>\r\n\r\n        <ChannelMeta>\r\n          {loading ? (\r\n            <>\r\n              <SkeletonWrapper atH={10} atW={30} marginBottom=\"0\">\r\n                <Skeleton color={themes.interfaceSkeleton} />\r\n              </SkeletonWrapper>\r\n            </>\r\n          ) : (\r\n            <ItemH align=\"center\" justify=\"flex-start\" margin=\"0px -5px\">\r\n              <MetaInfoDisplayer\r\n                externalIcon={\r\n                  <IoMdPeople\r\n                    size={20}\r\n                    color={themes.viewChannelSecondaryIcon}\r\n                  />\r\n                }\r\n                internalIcon={null}\r\n                text={memberCount}\r\n                bgColor={themes.viewChannelSecondaryBG}\r\n              />\r\n\r\n              <MetaInfoDisplayer\r\n                externalIcon={\r\n                  <FaRegAddressCard\r\n                    size={20}\r\n                    color={themes.viewChannelSecondaryIcon}\r\n                  />\r\n                }\r\n                internalIcon={<AiOutlineShareAlt />}\r\n                text={formatAddress(copyText)}\r\n                bgColor={themes.viewChannelSecondaryBG}\r\n                onClick={() => {\r\n                  copyToClipboard(channelJson.addr);\r\n                  setCopyText(\"copied\");\r\n                }}\r\n                onMouseEnter={() => {\r\n                  setCopyText(\"click to copy\");\r\n                }}\r\n                onMouseLeave={() => {\r\n                  setCopyText(channelJson.addr);\r\n                }}\r\n              />\r\n\r\n              {isChannelTutorialized(channelObject.addr) && (\r\n                <ChannelTutorial\r\n                  addr={channelObject.addr}\r\n                  bgColor={themes.viewChannelSecondaryBG}\r\n                  loadTeaser={loadTeaser}\r\n                  playTeaser={playTeaser}\r\n                />\r\n              )}\r\n\r\n              {verifierDetails && (\r\n                <Subscribers>\r\n                  <VerifiedBy>Verified by:</VerifiedBy>\r\n                  <VerifierIcon src={verifierDetails.icon} />\r\n                  <VerifierName>{verifierDetails.name}</VerifierName>\r\n                </Subscribers>\r\n              )}\r\n            </ItemH>\r\n          )}\r\n        </ChannelMeta>\r\n      </ChannelInfo>\r\n      {!!account && !!library && (\r\n        <>\r\n          <LineBreak />\r\n          <ChannelActions>\r\n            {loading && (\r\n              <SkeletonButton>\r\n                <Skeleton color={themes.interfaceSkeleton} />\r\n              </SkeletonButton>\r\n            )}\r\n            {!loading && isPushAdmin && (\r\n              <SubscribeButton onClick={blockChannel} disabled={bLoading}>\r\n                {bLoading && (\r\n                  <ActionLoader>\r\n                    <Oval color=\"#FFF\" height={16} width={16} />\r\n                  </ActionLoader>\r\n                )}\r\n                <ActionTitle hideit={bLoading}>Block channel</ActionTitle>\r\n              </SubscribeButton>\r\n            )}\r\n            {!loading && (isPushAdmin || canVerify) && !isVerified && (\r\n              <SubscribeButton onClick={verifyChannel} disabled={vLoading}>\r\n                {vLoading && (\r\n                  <ActionLoader>\r\n                    <Oval color=\"#FFF\" height={16} width={16} />\r\n                  </ActionLoader>\r\n                )}\r\n                <ActionTitle hideit={vLoading}>Verify Channel</ActionTitle>\r\n              </SubscribeButton>\r\n            )}\r\n            {!loading && (isPushAdmin || canUnverify) && isVerified && (\r\n              <UnsubscribeButton onClick={unverifyChannel} disabled={vLoading}>\r\n                {vLoading && (\r\n                  <ActionLoader>\r\n                    <Oval color=\"#FFF\" height={16} width={16} />\r\n                  </ActionLoader>\r\n                )}\r\n                <ActionTitle hideit={vLoading}>Unverify Channel</ActionTitle>\r\n              </UnsubscribeButton>\r\n            )}\r\n            {!loading && !subscribed && (\r\n              <SubscribeButton\r\n                onClick={subscribe}\r\n                disabled={txInProgress}\r\n                className=\"optin\"\r\n              >\r\n                {txInProgress && (\r\n                  <ActionLoader>\r\n                    <Oval color=\"#FFF\" height={16} width={16} />\r\n                  </ActionLoader>\r\n                )}\r\n                <ActionTitle hideit={txInProgress}>Opt-In</ActionTitle>\r\n              </SubscribeButton>\r\n            )}\r\n            {!loading && subscribed && (\r\n              <>\r\n                {isOwner && <OwnerButton disabled>Owner</OwnerButton>}\r\n                {!isOwner && (\r\n                  <UnsubscribeButton\r\n                    onClick={unsubscribeAction}\r\n                    disabled={txInProgress}\r\n                  >\r\n                    {txInProgress && (\r\n                      <ActionLoader>\r\n                        <Oval color=\"#FFF\" height={16} width={16} />\r\n                      </ActionLoader>\r\n                    )}\r\n                    <ActionTitle hideit={txInProgress}>Opt-Out</ActionTitle>\r\n                  </UnsubscribeButton>\r\n                )}\r\n              </>\r\n            )}\r\n          </ChannelActions>\r\n        </>\r\n      )}\r\n      {toast && (\r\n        <NotificationToast notification={toast} clearToast={clearToast} />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst FlexBox = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst ColumnFlex = styled(FlexBox)`\r\n  flex-direction: column;\r\n`;\r\n// css styles\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  background: ${(props) => props.theme.mainBg};\r\n  border-radius: 10px;\r\n  border: 1px solid ${(props) => props.theme.viewChannelOuterBorder};\r\n\r\n  margin: 15px 0px;\r\n  justify-content: center;\r\n  padding: 10px;\r\n\r\n  align-self: stretch;\r\n`;\r\n\r\nconst SkeletonWrapper = styled.div`\r\n  overflow: hidden;\r\n  width: ${(props) => props.atW + \"%\" || \"100%\"};\r\n  height: ${(props) => props.atH}px;\r\n  border-radius: ${(props) => props.borderRadius || 10}px;\r\n  margin-bottom: ${(props) => props.marginBottom || 5}px;\r\n  margin-right: ${(props) => props.marginRight || 0}px;\r\n`;\r\n\r\nconst ChannelLogo = styled.div`\r\n  max-width: 100px;\r\n  min-width: 32px;\r\n  flex: 1;\r\n  margin: 5px;\r\n  padding: 10px;\r\n  border: 2px solid ${(props) => props.theme.viewChannelIconBorder};\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-self: flex-start;\r\n`;\r\n\r\nconst ChannelLogoOuter = styled.div`\r\n  padding-top: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst ChannelLogoInner = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ChannelLogoImg = styled.img`\r\n  object-fit: contain;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ChannelInfo = styled.div`\r\n  flex: 1;\r\n  margin: 5px 10px;\r\n  min-width: 240px;\r\n  flex-grow: 4;\r\n  flex-direction: column;\r\n  display: flex;\r\n\r\n  @media (max-width: 480px) {\r\n    min-width: 210px;\r\n  }\r\n`;\r\n\r\nconst ChannelTitle = styled(ItemH)`\r\n  padding: 5px 10px 5px 0px;\r\n  justify-content: flex-start;\r\n  margin: 0;\r\n  flex: initial;\r\n  align-items: center;\r\n`;\r\n\r\nconst ChannelTitleLink = styled.a`\r\n  text-decoration: none;\r\n  display: flex;\r\n  flex: 1;\r\n  align-item: center;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n\r\n  & > span {\r\n    font-weight: 600;\r\n    color: ${(props) => props.theme.viewChannelLink};\r\n    font-size: 20px;\r\n  }\r\n\r\n  & > span > span {\r\n    vertical-align: middle;\r\n  }\r\n`;\r\n\r\nconst VerifiedBy = styled.span`\r\n  color: #ec008c;\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.05em;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst VerifierIcon = styled.img`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  margin-left: 6px;\r\n  margin-right: 4px;\r\n`;\r\n\r\nconst VerifierName = styled.span`\r\n  font-weight: 400;\r\n  color: ${(props) => props.theme.color};\r\n  font-size: 16px;\r\n  letter-spacing: 0em;\r\n`;\r\n\r\nconst ChannelDesc = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  font-size: 14px;\r\n  color: rgba(0, 0, 0, 0.75);\r\n  padding: 5px 0px 10px 0px;\r\n  font-weight: 400;\r\n  flex-direction: column;\r\n  color: ${(props) => props.theme.color};\r\n`;\r\n\r\nconst ChannelDescLabel = styled.label`\r\n  flex: 1;\r\n`;\r\n\r\nconst ChannelMeta = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  padding: 5px 0px;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst ChannelMetaBox = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  padding: 5px 10px;\r\n  display: flex;\r\n  border-radius: 10px;\r\n  font-size: 11px;\r\n  gap: 3px;\r\n`;\r\n\r\nconst Subscribers = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst SubscribersCount = styled(ChannelMetaBox)`\r\n  background: ${(props) => props.theme.viewChannelSecondaryBG};\r\n  transition: 300ms;\r\n`;\r\n\r\nconst Pool = styled.div`\r\n  margin: 0px 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst PoolShare = styled(ChannelMetaBox)`\r\n  background: #674c9f;\r\n`;\r\n\r\nconst LineBreak = styled.div`\r\n  display: none;\r\n  flex-basis: 100%;\r\n  height: 0;\r\n\r\n  @media ${Device.tablet} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst ChannelActions = styled.div`\r\n  margin: 5px;\r\n  flex-grow: 1;\r\n  // max-width: 250px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  // justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ChannelActionButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${(props) =>\r\n    props.disabled &&\r\n    css`\r\n      &:hover {\r\n        opacity: 1;\r\n        cursor: default;\r\n        pointer: default;\r\n      }\r\n      &:active {\r\n        opacity: 1;\r\n        cursor: default;\r\n        pointer: default;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst ActionTitle = styled.span`\r\n  ${(props) =>\r\n    props.hideit &&\r\n    css`\r\n      visibility: hidden;\r\n    `};\r\n`;\r\n\r\nconst ActionLoader = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst SkeletonButton = styled.div`\r\n  border: 0;\r\n  outline: 0;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px;\r\n  border-radius: 5px;\r\n  flex: 1;\r\n`;\r\n\r\nconst SubscribeButton = styled(ChannelActionButton)`\r\n  background: #e20880;\r\n  min-width: 80px;\r\n`;\r\n\r\nconst UnsubscribeButton = styled(ChannelActionButton)`\r\n  background: #674c9f;\r\n  min-width: 80px;\r\n`;\r\n\r\nconst OwnerButton = styled(ChannelActionButton)`\r\n  background: #35c5f3;\r\n`;\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`;\r\n\r\n// Export Default\r\nexport default ViewChannelItem;\r\n","import React from \"react\";\r\n\r\nimport { useTheme } from 'styled-components';\r\nimport { Item, ItemH, Span, Anchor} from '../primaries/SharedStyling';\r\n\r\nimport { FaGasPump } from 'react-icons/fa';\r\n\r\n// Faucet URLs\r\nfunction Faucets({chainId}) {\r\n  const themes = useTheme();\r\n\r\n  const faucetInfo = {\r\n    \"42\": {\r\n      name: \"Kovan Ether\",\r\n      network: \"Kovan\",\r\n      url: \"https://gitter.im/kovan-testnet/faucet\"\r\n    },\r\n    \"80001\": {\r\n      name: \"Mumbai Matic\",\r\n      network: \"Polygon\",\r\n      url: \"https://faucet.polygon.technology/\"\r\n    }\r\n  }\r\n\r\n  // render\r\n  return (\r\n    <ItemH\r\n      self=\"flex-end\"\r\n      flex=\"initial\"\r\n      bg={`${themes.faucetBg}`}\r\n      radius=\"8px\"\r\n      padding=\"30px 10px 10px 10px\"\r\n      margin=\"10px\"\r\n      border={`1px solid ${themes.faucetBorder}`}\r\n      overflow=\"hidden\"\r\n      align=\"center\"\r\n    >\r\n      <Span\r\n        pos=\"absolute\"\r\n        top=\"10px\"\r\n        right=\"0px\"\r\n        padding=\"5px 10px\"\r\n        bg={`${themes.faucetHeader}`}\r\n        color=\"#fff\"\r\n        size=\"12px\"\r\n        weight=\"600\"\r\n      >\r\n        Get Free {faucetInfo[chainId].name}\r\n      </Span>\r\n\r\n      <Item margin=\"5px\">\r\n        <Anchor\r\n          direction=\"column\"\r\n          href=\"https://faucet.metamask.io/\"\r\n          target=\"_blank\"\r\n          rel=\"nofollow\"\r\n        >\r\n          <FaGasPump size={30} color={`${themes.faucetIcon}`}/>\r\n          <Span\r\n            bg=\"#000\"\r\n            color=\"#fff\"\r\n            size=\"10px\"\r\n            weight=\"600\"\r\n            spacing=\"0.1em\"\r\n            textAlign=\"center\"\r\n            padding=\"5px 10px\"\r\n            margin=\"10px 0px 0px 0px\"\r\n            textTransform=\"uppercase\"\r\n            radius=\"8px\"\r\n          >\r\n            Metamask Faucet\r\n          </Span>\r\n        </Anchor>\r\n      </Item>\r\n      <Item margin=\"5px\">\r\n        <Anchor\r\n          direction=\"column\"\r\n          href={faucetInfo[chainId].url}\r\n          target=\"_blank\"\r\n          rel=\"nofollow\"\r\n        >\r\n          <FaGasPump size={30} color={`${themes.faucetIcon}`}/>\r\n          <Span\r\n            bg=\"#000\"\r\n            color=\"#fff\"\r\n            size=\"10px\"\r\n            weight=\"600\"\r\n            spacing=\"0.1em\"\r\n            textAlign=\"center\"\r\n            padding=\"5px 10px\"\r\n            margin=\"10px 0px 0px 0px\"\r\n            textTransform=\"uppercase\"\r\n            radius=\"8px\"\r\n          >\r\n            Faucet {faucetInfo[chainId].network}\r\n          </Span>\r\n        </Anchor>\r\n      </Item>\r\n\r\n    </ItemH>\r\n  );\r\n}\r\n\r\n// Export Default\r\nexport default Faucets;\r\n","import React from \"react\";\r\nimport styled, { useTheme } from \"styled-components\";\r\nimport { Oval } from \"react-loader-spinner\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postReq } from \"api\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { envConfig } from \"@project/contracts\";\r\n\r\nimport { Item, ItemH } from \"../primaries/SharedStyling\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\n\r\nimport UtilityHelper from 'helpers/UtilityHelper';\r\n\r\nimport DisplayNotice from \"../primaries/DisplayNotice\";\r\nimport ViewChannelItem from \"components/ViewChannelItem\";\r\nimport Faucets from \"components/Faucets\";\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport { setChannelMeta, incrementPage } from \"redux/slices/channelSlice\";\r\nimport { incrementStepIndex } from \"redux/slices/userJourneySlice\";\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\n\r\nconst CHANNELS_PER_PAGE = 10; //pagination parameter which indicates how many channels to return over one iteration\r\nconst SEARCH_TRIAL_LIMIT = 5; //ONLY TRY SEARCHING 5 TIMES BEFORE GIVING UP\r\nconst DEBOUNCE_TIMEOUT = 500; //time in millisecond which we want to wait for then to finish typing\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/;\r\nconst SEARCH_DELAY = 1500;\r\n\r\n// Create Header\r\nfunction ViewChannels({ loadTeaser, playTeaser }) {\r\n  const themes = useTheme();\r\n  const dispatch = useDispatch();\r\n  const { account, chainId } = useWeb3React();\r\n  const { channels, page, ZERO_ADDRESS } = useSelector((state: any) => state.channels);\r\n  const {\r\n    run,\r\n    stepIndex\r\n  } = useSelector((state: any) => state.userJourney);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [moreLoading, setMoreLoading] = React.useState(false);\r\n  const [search, setSearch] = React.useState(\"\");\r\n  const [channelToShow, setChannelToShow] = React.useState([]);\r\n  const [loadingChannel, setLoadingChannel] = React.useState(false);\r\n  const [trialCount, setTrialCount] = React.useState(0);\r\n\r\n  const channelsVisited = page * CHANNELS_PER_PAGE;\r\n\r\n  // fetch channel data if we are just getting to this pae\r\n  React.useEffect(() => {\r\n    setLoading(!channels.length); //if there are no channels initially then, set the loader\r\n    fetchInitialsChannelMeta();\r\n  }, [account, chainId]);\r\n\r\n  // to update a page\r\n  const updateCurrentPage = () => {\r\n    if (loading || moreLoading) return;\r\n    // fetch more channel information\r\n    setMoreLoading(true);\r\n    dispatch(incrementPage());\r\n    loadMoreChannelMeta(page + 1); //load the meta for the next page\r\n  };\r\n\r\n  // to fetch initial channels and logged in user data\r\n  const fetchInitialsChannelMeta = async () => {\r\n    // fetch the meta of the first `CHANNELS_PER_PAGE` channels\r\n    const channelsMeta = await ChannelsDataStore.instance.getChannelFromApi(\r\n      channelsVisited,\r\n      CHANNELS_PER_PAGE,\r\n      account,\r\n      chainId\r\n    );\r\n    dispatch(incrementPage())\r\n    if (!channels.length) {\r\n      dispatch(setChannelMeta(channelsMeta));\r\n    }\r\n\r\n    // increases the step once the channel are loaded\r\n    if (\r\n      run &&\r\n      stepIndex === 3\r\n    ) {\r\n      dispatch(incrementStepIndex());\r\n      dispatch(incrementStepIndex());\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  // load more channels when we get to the bottom of the page\r\n  const loadMoreChannelMeta = async (newPageNumber: any) => {\r\n    const startingPoint = newPageNumber * CHANNELS_PER_PAGE;\r\n    const moreChannels = await ChannelsDataStore.instance.getChannelFromApi(\r\n      startingPoint,\r\n      CHANNELS_PER_PAGE,\r\n      account,\r\n      chainId\r\n    );\r\n    dispatch(setChannelMeta([...channels, ...moreChannels]));\r\n    setMoreLoading(false);\r\n  };\r\n\r\n  // conditionally display the waymore bar which loads more information\r\n  // load more channels when we are at the bottom of the page\r\n  const showWayPoint = (index: any) => {\r\n    return Number(index) === channels.length - 1;\r\n  };\r\n\r\n  // Search Channels Feature\r\n  React.useEffect(() => {\r\n    if (!channels.length) return;\r\n    setChannelToShow(channels);\r\n  }, [channels]);\r\n\r\n  function searchForChannel() {\r\n    if (loadingChannel) return; //if we are already loading, do nothing\r\n    if (search) {\r\n      setLoadingChannel(true); //begin loading here\r\n      setChannelToShow([]); //maybe remove later\r\n      let payloadToSearchApiObj;\r\n      if (envConfig.coreContractChain === 42) {\r\n        payloadToSearchApiObj = {\r\n          query: search,\r\n          op: \"read\",\r\n          page: 1,\r\n          address: account,\r\n          pageSize: 1000,\r\n          chainId: chainId,\r\n        };\r\n      } else {\r\n        payloadToSearchApiObj = {\r\n          query: search,\r\n          op: \"read\",\r\n        };\r\n      }\r\n      postReq(\"/channels/_search\", payloadToSearchApiObj)\r\n        .then((data) => {\r\n          setChannelToShow(data.data.channels || []);\r\n          setLoadingChannel(false);\r\n        })\r\n        .catch(() => {\r\n          // if there's an error search for three times before giving up and displaying the normal channels\r\n          if (trialCount < SEARCH_TRIAL_LIMIT) {\r\n            setTrialCount((t) => t + 1);\r\n            searchForChannel(); //if theres an error, recursively search\r\n          } else {\r\n            setChannelToShow(channels);\r\n            setLoadingChannel(false);\r\n          }\r\n        });\r\n    } else {\r\n      // if no search item, then set it back to the channels\r\n      setLoadingChannel(false);\r\n      setChannelToShow(channels);\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // this is done so that we only make a request after the user stops typing\r\n    const timeout = setTimeout(searchForChannel, DEBOUNCE_TIMEOUT);\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [search]);\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n    const parsedChannel = window.location.href.toString().slice(window.location.href.toString().length - 42)\r\n    if (!ADDRESS_REGEX.test(parsedChannel)) return;\r\n    setTimeout(() => {\r\n      setSearch(parsedChannel);\r\n    }, SEARCH_DELAY)\r\n  }, [])\r\n\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Container>\r\n        <ScrollItem>\r\n          {!loading && (\r\n            <ItemH\r\n              padding=\"10px 0px\"\r\n              flex=\"initial\"\r\n            >\r\n              <SearchContainer\r\n                flex=\"1\"\r\n                margin=\"10px\"\r\n              >\r\n                <SearchBar\r\n                  type=\"text\"\r\n                  value={search}\r\n                  onChange={(e: any) => setSearch(e.target.value)}\r\n                  className=\"input\"\r\n                  placeholder=\"Search By Name/Address\"\r\n                />\r\n                <Item\r\n                  position=\"absolute\"\r\n                  top=\"0\"\r\n                  bottom=\"0\"\r\n                  left=\"12px\"\r\n\r\n                >\r\n                  <AiOutlineSearch size={20} style={{ color: themes.viewChannelSearchIcon }} />\r\n                </Item>\r\n              </SearchContainer>\r\n\r\n              {!UtilityHelper.isMainnet(chainId) &&\r\n                <Faucets chainId={chainId} />\r\n              }\r\n\r\n            </ItemH>\r\n          )}\r\n\r\n          {/* render all channels depending on if we are searching or not */}\r\n          {(search ? channelToShow : channels).map(\r\n            (channel: any, index: any) =>\r\n              channel &&\r\n              channel.addr !== ZERO_ADDRESS && (\r\n                <>\r\n                  <ViewChannelItems key={channel.addr} self=\"stretch\">\r\n                    <ViewChannelItem channelObjectProp={channel} loadTeaser={loadTeaser} playTeaser={playTeaser} />\r\n                  </ViewChannelItems>\r\n\r\n                  {showWayPoint(index) && (\r\n                    <Waypoint onEnter={updateCurrentPage} />\r\n                  )}\r\n                </>\r\n              )\r\n          )}\r\n          {/* render all channels depending on if we are searching or not */}\r\n\r\n          {/* if we are in search mode and there are no channels then display error message */}\r\n          {search && !channelToShow?.length && !loadingChannel && (\r\n            <CenteredContainerInfo>\r\n              <DisplayNotice\r\n                title=\"No channels match your query, please search for another name/address\"\r\n                theme=\"third\"\r\n              />\r\n            </CenteredContainerInfo>\r\n          )}\r\n\r\n          {/* display loader if pagination is loading next batch of channelTotalList */}\r\n          {((moreLoading && channels.length) ||\r\n            loading ||\r\n            loadingChannel) && (\r\n              <CenterContainer>\r\n                <Oval color=\"#35c5f3\" height={40} width={40} />\r\n              </CenterContainer>\r\n            )}\r\n        </ScrollItem>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst SearchBar = styled.input`\r\n  width: 100%;\r\n  padding-right: 50px;\r\n  height: 60px;\r\n  padding-left: 40px;\r\n\r\n  background: ${props => props.theme.viewChannelSearchBg};\r\n  border: 1px solid ${props => props.theme.viewChannelSearchBorder} !important;\r\n  color: ${props => props.theme.viewChannelSearchText};\r\n  box-sizing: border-box;\r\n  border-radius: 10px;\r\n  text-transform: capitalize;\r\n  font-size: 16px;\r\n\r\n  input[type=\"reset\"] {\r\n    display: none;\r\n  }\r\n  &::placeholder {\r\n    letter-spacing: 0.15em;\r\n  }\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:focus {\r\n    border: 1px solid #ec008c;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  max-height: 92vh;\r\n`;\r\n\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst ViewChannelItems = styled.div`\r\n  align-self: stretch;\r\n`\r\n\r\nconst CenteredContainerInfo = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CenterContainer = styled(ContainerInfo)`\r\n  width: fit-content;\r\n  align-self: center;\r\n`;\r\n\r\nconst ScrollItem = styled(Item)`\r\n  display: flex;\r\n  align-self: stretch;\r\n  align-items: stretch;\r\n  justify-content: stretch;\r\n  flex-wrap: nowrap;\r\n  \r\n  flex: 1;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background-color: ${props => props.theme.scrollBg};\r\n    border-radius: 10px;\r\n  }\r\n\r\n  &::-webkit-scrollbar {\r\n    background-color: ${props => props.theme.scrollBg};\r\n    width: 6px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    border-radius: 10px;\r\n    background-image: -webkit-gradient(linear,\r\n                       left top,\r\n                       left bottom,\r\n                       color-stop(0.44, #35c5f3),\r\n                       color-stop(0.72, #35b0f3),\r\n                       color-stop(0.86, #35a1f3));\r\n  }\r\n`;\r\n\r\nconst SearchContainer = styled(Item)`\r\n  min-width: 320px;\r\n\r\n  @media (max-width: 768px) {\r\n    min-width: 320px;\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    min-width: 210px;\r\n  }\r\n`;\r\n\r\n// Export Default\r\nexport default ViewChannels;\r\nexport { ScrollItem };\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { MultiSelect } from \"react-multi-select-component\";\r\nimport styled, { useTheme } from \"styled-components\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport {Oval} from \"react-loader-spinner\";\r\nimport { Item } from '../primaries/SharedStyling';\r\n\r\nexport default function SearchFilter(props) {\r\n\r\n    const [search, setSearch] = useState('');\r\n    const [startDate, setStartDate] = useState();\r\n    const [endDate, setEndDate] = useState();\r\n    const themes = useTheme();\r\n\r\n    const applySearch = async () => {\r\n        var channels = [];\r\n        selectedOption.length ? selectedOption.map(each => channels.push(each.value)) : (channels = []);\r\n        await props.filterNotifications(search, channels, startDate, endDate);\r\n    }\r\n\r\n    var options = [];\r\n    props.notifications.map(each => options.push({ label: each.app, value: each.channel }));\r\n    var uniqueOptions = [...new Map(options.map((item) => [item[\"value\"], item])).values()];\r\n    const [showFilter, setShowFilter] = useState(false);\r\n    const [selectedOption, setSelectedOption] = useState(uniqueOptions);\r\n    // console.log(props.notifications);\r\n\r\n    const reset = async () => {\r\n        setStartDate(null);\r\n        setEndDate(null);\r\n        setSearch('');\r\n        setSelectedOption(uniqueOptions);\r\n        props.reset();\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={themes}>\r\n            <Container>\r\n                <TopBar mbtm={showFilter ? '1rem' : '0px'}>\r\n                    <Left>\r\n                        {themes.scheme === 'light' ? (<img style={{ height: \"20px\", width: \"20px\", marginTop: \"1rem\", marginLeft: \"2rem\", marginRight: \"1rem\" }} src='/svg/filterIcon.svg' alt=\"Filter Icon\" />) : (<img style={{ height: \"20px\", width: \"20px\", marginTop: \"1rem\", marginLeft: \"2rem\", marginRight: \"1rem\" }} src='/svg/filterw.png' alt=\"Filter Icon\" />)}\r\n                        {!props.loadFilter ?\r\n                            <FilterShow onClick={() => { showFilter ? setShowFilter(false) : setShowFilter(true) }}>\r\n                                <Filter style={{ marginTop: \"1rem\", fontWeight: \"400\", color: \"#B4B4B4\" }} >Filter Notifications</Filter>\r\n                                <Arrow>\r\n                                    <ToggleArrowImg>\r\n                                        <img alt=\"arrow\" className={`${showFilter ? \"down\" : \"up\"}`} src=\"/svg/arrow.svg\" />\r\n                                    </ToggleArrowImg>\r\n                                </Arrow>\r\n                            </FilterShow>\r\n                            :\r\n                            <FilterShow>\r\n                                <Filter style={{ marginTop: \"1rem\", fontWeight: \"400\", color: \"#B4B4B4\" }} >Filter Notifications</Filter>\r\n                                <Item\r\n                                    padding=\"10px 20px\"\r\n                                >\r\n                                    <Oval color=\"#35c5f3\" height={20} width={20} />\r\n                                </Item>\r\n                            </FilterShow>\r\n                        }\r\n\r\n                    </Left>\r\n                    {\r\n                        showFilter ? (<Buttons>\r\n                            <ButtonFeed bgColor='#e20880' onClick={applySearch}>\r\n                                Apply\r\n                            </ButtonFeed>\r\n                            <ButtonFeed bgColor='#35c5f3' onClick={reset}>\r\n                                Reset\r\n                            </ButtonFeed>\r\n                        </Buttons>) : (<></>)\r\n                    }\r\n\r\n\r\n                </TopBar>\r\n\r\n                {\r\n                    showFilter ? (<SearchOptions>\r\n                        <SectionSearch mright='3.5rem' mtop='3.6rem'>\r\n\r\n                            <SelectChannel>\r\n                                <SMultiSelect\r\n                                    options={uniqueOptions}\r\n                                    valueRenderer={() => {\r\n                                        if (selectedOption.length === 0) return 'By Channel Name'\r\n                                        return `${selectedOption.length} Selected`\r\n                                    }}\r\n                                    value={selectedOption}\r\n                                    onChange={setSelectedOption}\r\n                                    labelledBy=\"Search Notifications from\"\r\n                                    placeholder=\"Search Notifications from\"\r\n                                />\r\n\r\n                            </SelectChannel>\r\n                            <InputWrapper>\r\n\r\n                                <Input value={search} type=\"text\" placeholder=\"By Keyword\" onChange={(e) => {\r\n                                    setSearch(e.target.value);\r\n                                }} />\r\n                            </InputWrapper>\r\n                        </SectionSearch>\r\n                        <SectionSearch mleft='3.5rem'>\r\n                            <p style={{ fontSize: \"1.2rem\", color: \"#B4B4B4\", fontWeight: \"500\", \"fontFamily\": \"Source Sans Pro\" }}>By time of notification sent</p>\r\n                            <RangeSection mtop=\"0.5rem\">\r\n                                <TimeLabelDiv>\r\n                                    <div>Start Date</div>\r\n                                </TimeLabelDiv>\r\n                                <SDateTimePicker className=\"date\" value={startDate} onChange={setStartDate} />\r\n                            </RangeSection>\r\n                            <RangeSection mttop=\"1.5rem\">\r\n                                <TimeLabelDiv>\r\n                                    <div>End Date</div>\r\n                                </TimeLabelDiv>\r\n                                <SDateTimePicker className=\"date\" value={endDate} onChange={setEndDate} />\r\n                            </RangeSection>\r\n                        </SectionSearch>\r\n                    </SearchOptions>) : (<></>)\r\n                }\r\n            </Container>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\n\r\nconst SDateTimePicker = styled(DateTimePicker)`\r\n    padding-right: 4px;\r\n    flex: 6;\r\n    display: flex;\r\n    align-items: center !important;\r\n    font-family: Source Sans Pro;\r\n    .react-datetime-picker__wrapper {\r\n        border: 0px !important;\r\n        border-radius: 5px !important;\r\n        height: 40px !important;\r\n    }\r\n    \r\n    .react-datetime-picker__inputGroup {\r\n        text-align: center !important;\r\n        @media(max-width:850px)\r\n            {\r\n                width: 4rem !important;\r\n                margin-right: -2px !important;\r\n                margin: 0px !important;\r\n            }\r\n    }\r\n    \r\n    .react-datetime-picker__inputGroup__input {\r\n        font-weight: 500 !important;\r\n    }\r\n    .react-datetime-picker__inputGroup__input{\r\n        font-weight: 500 !important;\r\n        color : ${props => props.theme.scheme === \"dark\" ? `#fff` : `#000`};\r\n    }\r\n\r\n    .react-datetime-picker__button svg {\r\n        stroke : ${props => props.theme.scheme === \"dark\" ? `#fff` : `#000`};\r\n    }\r\n    .react-datetime-picker__button{\r\n        @media(max-width:850px)\r\n            {\r\n                margin: 0px !important;\r\n                padding: 0px !important;\r\n            }\r\n    }\r\n    .react-datetime-picker__inputGroup__input--hasLeadingZero {\r\n        font-weight: 500 !important;\r\n    }\r\n    .react-datetime-picker__inputGroup__minute {\r\n        font-weight: 400 !important;\r\n    }\r\n\r\n    .react-datetime-picker__clock {\r\n        display: none;\r\n    }\r\n    .react-datetime-picker__inputGroup__divider {\r\n        font-weight: 400;\r\n    }\r\n`\r\n\r\nconst TimeLabelDiv = styled.div`\r\n    flex: 2;\r\n    padding: 0 10px;\r\n    background-color: #35c5f3;\r\n    align-self: stretch;\r\n    text-align: center;\r\n    color: white;\r\n    font-weight: bold;\r\n\r\n\r\n    div{\r\n        margin-top: 10px;\r\n        font-family: Source Sans Pro;\r\n    }\r\n\r\n    @media(max-width: 400px){\r\n        padding: 0 4px;\r\n    }\r\n`\r\n\r\n\r\nconst SMultiSelect = styled(MultiSelect)`\r\n    font-weight: 400 !important;\r\n    font-size: 1.1rem !important;\r\n    margin-top: 3px;\r\n    .search input{\r\n        color : ${props => props.theme.scheme === \"dark\" ? `#fff` : `#000`};\r\n    }\r\n\r\n    input {\r\n        height: 35px;\r\n        outline: none !important;\r\n        border: 0px solid white !important;\r\n        font-weight: 400;\r\n        background-color: inherit;\r\n    }\r\n\r\n    /* Aligns the option label with the checkbox */\r\n    .select-item{\r\n        position: relative;\r\n    }\r\n    .select-item span{\r\n        position: absolute;\r\n        margin-top: 7px;\r\n        margin-left: 22px;\r\n    }\r\n    .dropdown-container {\r\n        border: 0px solid white !important;\r\n        margin: 0px !important;\r\n        padding: 0px !important;\r\n    }\r\n\r\n    .dropdown-heading {\r\n       &:focus {\r\n        border: 0px solid white !important;\r\n        box-shadow: 0 0 0px white !important;\r\n            }\r\n        }\r\n\r\n    .dropdown-content {\r\n        .panel-content {\r\n            overflow: hidden;\r\n            font-family: Source Sans Pro;\r\n            font-weight:18px;\r\n                }\r\n            }\r\n        \r\n    .dropdown-container {\r\n        border: 0px solid white !important;\r\n        margin: 0px !important;\r\n        padding: 0px !important;\r\n    }\r\n\r\n    .dropdown-container {\r\n        &:focus-within {\r\n        border: 0px solid white !important;\r\n        box-shadow: 0 0 0 0px white !important;\r\n        }\r\n    }\r\n\r\n\r\n    ${props => props.theme.scheme === \"dark\" && `\r\n        --rmsc-main: #4285f4;\r\n        --rmsc-hover: #0e0c0a;\r\n        --rmsc-selected: #1d1915;\r\n        --rmsc-border: #333333;\r\n        --rmsc-gray: #555555;\r\n        --rmsc-bg: #000000;\r\n        color: #fff;\r\n    `}\r\n`\r\n\r\n\r\nconst SelectChannel = styled.div`\r\nborder: 1px solid ${props => props.theme.faucetBorder};\r\nborder-radius: 5px;\r\nfont-family: Source Sans Pro;\r\n`;\r\n\r\nconst FilterShow = styled.span`\r\ndisplay: flex;\r\nflex-direction: row;\r\n&:hover {\r\n    cursor: pointer;\r\n}\r\n`;\r\n\r\nconst Input = styled.input`\r\n    border: 0px solid white;\r\n    font-size: 1.1rem;\r\n    margin-top: 2.5px;\r\n    font-weight: 400;\r\n    position: relative;\r\n    color: #35C5F3;\r\n    padding-left: 0.7rem;\r\n    width: 100%;\r\n    height: 35px;\r\n    outline: none !important;\r\n    border: 0px solid white !important;\r\n    font-weight: 400;\r\n    background-color: inherit;\r\n    $:focus {\r\n        height: 35px;\r\n        outline: none !important;\r\n        border: 0px solid white !important;\r\n        font-weight: 400;\r\n        background-color: inherit;\r\n    }\r\n    &::placeholder {\r\n        opacity: 1;\r\n        font-weight: 400;\r\n        font-family: Source Sans Pro;\r\n        color: #B0B0B0 !important;\r\n      }\r\n`;\r\n\r\nconst Filter = styled.span`\r\nmargin-bottom: 1rem;\r\n&:hover {\r\n    cursor: pointer;\r\n}\r\n`;\r\n\r\nconst Arrow = styled.span`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nmargin-left: 0.7rem;\r\n&:hover {\r\n    cursor: pointer;\r\n}\r\n`;\r\n\r\nconst RangeSection = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nborder: 1px solid ${props => props.theme.faucetBorder};\r\n\r\nborder-radius: 5px;\r\njustify-content: space-between;\r\nalign-items: center;\r\nheight: \"40px\";\r\n\r\nposition: relative;\r\nmargin-top:  ${(props) => (props.mttop ? props.mttop : \"\")};\r\n@media(max-width:600px)\r\n{\r\n    margin-top:  ${(props) => (props.mtop ? props.mtop : \"\")};\r\n}\r\n`;\r\n\r\nconst Container = styled.div`\r\nwidth: -webkit-fill-available;\r\ndisplay: flex;\r\nflex-direction: column;\r\n// border:  0.5px solid #674C9F;\r\n// border:${(props) => (props.Border ? props.Border : \"\")}\r\nborder: 1px solid ${props => props.theme.faucetBorder};\r\nborder-radius: 10px;\r\nmargin: 1.3rem;\r\n\r\n@media(max-width: 400px){\r\n    margin-left: 0.5rem;\r\n    margin-right: 0.5rem;\r\n}\r\n`;\r\n\r\n\r\nconst TopBar = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: space-between;\r\nborder-bottom: 1px solid ${props => props.theme.faucetBorder};\r\nborder-top-left-radius: 5px;\r\nborder-top-right-radius: 5px;\r\nmargin-bottom: ${(props) => (props.mbtm ? props.mbtm : \"\")};\r\nfont-family: Source Sans Pro;\r\n`;\r\n\r\nconst Left = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nfont-family: Source Sans Pro;\r\n`;\r\n\r\nconst Buttons = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: space-between;\r\nmargin-right: 2rem;\r\nmargin-top: 0.3rem;\r\nmargin-bottom: 0.5rem;\r\n@media (max-width: 600px)\r\n{\r\n    margin-right: 1.5rem;\r\n    margin-left: 2rem;\r\n    width: 4rem;\r\n    flex-direction: column;\r\n    \r\n}\r\nfont-family: Source Sans Pro;\r\n\r\n`;\r\n\r\nconst ButtonFeed = styled.button`\r\n\r\nheight: 30px;\r\nmargin :3px;\r\ncolor: white;\r\nwidth: 75px;\r\nborder-radius: 5px;\r\nborder: 2px solid white;\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:center;\r\nbackground-color:  ${(props) => (props.bgColor ? props.bgColor : \"\")};\r\nmargin-right:  ${(props) => (props.mright ? props.mright : \"\")};\r\n&:hover {\r\n  cursor: pointer;\r\n  pointer: hand;\r\n}\r\n@media (max-width: 500px)\r\n{\r\n    margin-right:  ${(props) => (props.mright ? \"1.5rem\" : \"\")};\r\n}\r\nfont-family: Source Sans Pro;\r\n`;\r\n\r\n\r\nconst SearchOptions = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nmargin-left: 2rem;\r\nmargin-right: 2rem;\r\nmargin-bottom: 1rem;\r\njustify-content: space-between;\r\nfont-family: Source Sans Pro;\r\n\r\n@media(max-width: 600px)\r\n{\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-item: center;\r\n    margin-left: 0.5rem;\r\n    margin-right: 0.5rem;\r\n}\r\n`;\r\n\r\nconst SectionSearch = styled.div`\r\ndisply: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\njustify-content: center;\r\nflex: 1;\r\n@media(min-width: 600px)\r\n{\r\n    margin-right:  ${(props) => (props.mright ? props.mright : \"\")};\r\n    margin-left:  ${(props) => (props.mleft ? props.mleft : \"\")};\r\n    margin-top:  ${(props) => (props.mtop ? props.mtop : \"\")};\r\n}\r\n`;\r\n\r\n\r\nconst InputWrapper = styled.div`\r\n    display:flex;\r\n    height: 40px;\r\n\r\n    border: 1px solid ${props => props.theme.faucetBorder};\r\n    border-radius: 5px;\r\n    margin-top: 1.5rem;\r\n    padding: 1px;\r\n    @media(max-width:600px)\r\n    {\r\n        margin-bottom: 1rem;\r\n    }\r\n`;\r\n\r\n\r\nconst ToggleArrowImg = styled.div`\r\n\r\n    .down {\r\n        transform: rotate(-180deg);\r\n        transition: transform .25s;\r\n    }\r\n\r\n    .up{\r\n        transform: rotate(-360deg);\r\n        transition: transform .25s;\r\n    }\r\n`\r\n","/**\r\n * This file helps us maintain the notifications fetched in state, so when tabs are switched we can retain the notification information\r\n */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    page: 1, //the current page\r\n    notifications: [],// the actual notifications\r\n    finishedFetching: false,\r\n    toggler: false\r\n}\r\n\r\nexport const contractSlice = createSlice({\r\n    name: \"notifications\",\r\n    initialState,\r\n    reducers: {\r\n        toggleToggler: (state) => {\r\n            state.toggler = !state.toggler;\r\n        },\r\n        resetState: (state) => {\r\n            state.page = initialState.page;\r\n            state.notifications = initialState.notifications;\r\n            state.finishedFetching = initialState.finishedFetching;\r\n        },\r\n        addPaginatedNotifications: (state, action) => {\r\n            state.notifications = [ ...state.notifications, ...action.payload ];\r\n            state.page += 1;\r\n        },\r\n        incrementPage: (state) => {\r\n            state.page += 1;\r\n        },\r\n        addNewNotification: (state, action) => {\r\n            state.notifications = [{...action.payload}, ...state.notifications]\r\n        },\r\n        setFinishedFetching: (state) => {\r\n            state.finishedFetching = true;\r\n        },\r\n        updateTopNotifications: (state, action) => {\r\n            console.log({pp: action.payload});\r\n            state.notifications = [...action.payload.notifs, ...state.notifications.slice(action.payload.pageSize)];\r\n            console.log({sn: state.notifications});\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    toggleToggler,\r\n    addPaginatedNotifications,\r\n    incrementPage,\r\n    addNewNotification,\r\n    setFinishedFetching,\r\n    resetState,\r\n    updateTopNotifications\r\n} = contractSlice.actions;\r\n\r\nexport default contractSlice.reducer;\r\n","import React from \"react\";\r\nimport styled, { useTheme } from \"styled-components\";\r\nimport { Oval } from \"react-loader-spinner\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ScrollItem } from \"./ViewChannels\";\r\nimport DisplayNotice from \"../primaries/DisplayNotice\";\r\nimport SearchFilter from \"components/SearchFilter\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport * as EpnsAPI from \"@epnsproject/sdk-restapi\";\r\nimport { NotificationItem } from \"@epnsproject/sdk-uiweb\";\r\nimport {\r\n  addPaginatedNotifications,\r\n  incrementPage,\r\n  setFinishedFetching,\r\n  updateTopNotifications,\r\n} from \"redux/slices/notificationSlice\";\r\n\r\nimport { toast as toaster } from \"react-toastify\";\r\nimport NotificationToast from \"../primaries/NotificationToast\";\r\nimport CryptoHelper from \"helpers/CryptoHelper\";\r\n\r\nimport { Item } from \"../primaries/SharedStyling\";\r\nconst NOTIFICATIONS_PER_PAGE = 10;\r\n\r\n// Create Header\r\nfunction Feedbox() {\r\n  const dispatch = useDispatch();\r\n  const { account, library, chainId } = useWeb3React();\r\n  const { notifications, page, finishedFetching, toggle } = useSelector(\r\n    (state: any) => state.notifications\r\n  );\r\n\r\n  const themes = useTheme();\r\n\r\n  // toast related section\r\n  const [toast, showToast] = React.useState(null);\r\n  const clearToast = () => showToast(null);\r\n\r\n  const { run, welcomeNotifs } = useSelector((state: any) => state.userJourney);\r\n\r\n  const [limit, setLimit] = React.useState(10);\r\n  const [allNotf, setNotif] = React.useState([]);\r\n  const [filteredNotifications, setFilteredNotifications] = React.useState([]);\r\n  const [filter, setFilter] = React.useState(false);\r\n  const [loadFilter, setLoadFilter] = React.useState(false);\r\n  const [bgUpdateLoading, setBgUpdateLoading] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const NormalToast = ({ msg }) => (\r\n    <Toaster>\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  )\r\n\r\n  //clear toast variable after it is shown\r\n  React.useEffect(() => {\r\n    if (toast) {\r\n      clearToast();\r\n    }\r\n  }, [toast]);\r\n\r\n  const reset = () => setFilter(false);\r\n  const filterNotifications = async (query, channels, startDate, endDate) => {\r\n    if (startDate == null) startDate = new Date('January 1, 2000');\r\n    if (endDate == null) endDate = new Date('January 1, 3000');\r\n    startDate = startDate.getTime() / 1000;\r\n    endDate = endDate.getTime() / 1000;\r\n\r\n    if (loading) return;\r\n    setBgUpdateLoading(true);\r\n    setLoading(true);\r\n    setFilter(true);\r\n    var Filter = {\r\n      channels: channels,\r\n      date: { lowDate: startDate, highDate: endDate }\r\n    };\r\n    if (channels.length == 0) delete Filter.channels;\r\n\r\n    setFilteredNotifications([]);\r\n    try {\r\n      let filterNotif = [];\r\n      for (const notif of allNotf) {\r\n        let timestamp;\r\n        const matches = notif.message.match(/\\[timestamp:(.*?)\\]/);\r\n        if (matches) {\r\n          timestamp = matches[1];\r\n        }\r\n        else timestamp = notif.epoch;\r\n        if (\r\n          ((Filter.channels === undefined ? true : (Filter.channels.includes(notif.channel))) &&\r\n            timestamp >= startDate && timestamp <= endDate\r\n            && (query === \"\" || notif.message.toLowerCase().includes(query.toLowerCase())))\r\n        )\r\n          filterNotif.push(notif);\r\n      }\r\n      await setFilteredNotifications(filterNotif);\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setLoading(false);\r\n      setBgUpdateLoading(false);\r\n    }\r\n  }\r\n  const loadNotifications = async () => {\r\n    if (loading || finishedFetching) return;\r\n    setLoading(true);\r\n    try {\r\n      const { count, results } = await EpnsAPI.fetchNotifications({\r\n        user: account,\r\n        pageSize: NOTIFICATIONS_PER_PAGE,\r\n        page,\r\n        chainId,\r\n        dev: true,\r\n      });\r\n      const parsedResponse = EpnsAPI.parseApiResponse(results);\r\n      dispatch(addPaginatedNotifications(parsedResponse));\r\n      if (count === 0) {\r\n        dispatch(setFinishedFetching());\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const fetchLatestNotifications = async () => {\r\n    if (loading || bgUpdateLoading) return;\r\n    setBgUpdateLoading(true);\r\n    setLoading(true);\r\n    try {\r\n      const { count, results } = await EpnsAPI.fetchNotifications({\r\n        user: account,\r\n        pageSize: NOTIFICATIONS_PER_PAGE,\r\n        page: 1,\r\n        chainId,\r\n        dev: true,\r\n      });\r\n      if (!notifications.length) {\r\n        dispatch(incrementPage());\r\n      }\r\n      const parsedResponse = EpnsAPI.parseApiResponse(results);\r\n      const map1 = new Map();\r\n      const map2 = new Map();\r\n      results.forEach(each => {\r\n        map1.set(each.payload.data.sid, each.epoch);\r\n        map2.set(each.payload.data.sid, each.channel);\r\n      })\r\n      parsedResponse.forEach(each => {\r\n        each['date'] = map1.get(each.sid);\r\n        each['epoch'] = (new Date(each['date']).getTime() / 1000);\r\n        each['channel'] = map2.get(each.sid);\r\n      })\r\n      dispatch(\r\n        updateTopNotifications({\r\n          notifs: parsedResponse,\r\n          pageSize: NOTIFICATIONS_PER_PAGE,\r\n        })\r\n      );\r\n      if (count === 0) {\r\n        dispatch(setFinishedFetching());\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setBgUpdateLoading(false);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchAllNotif = async () => {\r\n    setLoadFilter(true);\r\n    try {\r\n      const { count, results } = await EpnsAPI.fetchNotifications({\r\n        user: account,\r\n        pageSize: 100000,\r\n        page: 1,\r\n        chainId,\r\n        dev: true,\r\n      });\r\n      if (!notifications.length) {\r\n        dispatch(incrementPage());\r\n      }\r\n      const parsedResponse = EpnsAPI.parseApiResponse(results);\r\n      const map1 = new Map();\r\n      const map2 = new Map();\r\n      results.forEach(each => {\r\n        map1.set(each.payload.data.sid, each.epoch);\r\n        map2.set(each.payload.data.sid, each.channel);\r\n      })\r\n      parsedResponse.forEach(each => {\r\n        each['date'] = map1.get(each.sid);\r\n        each['epoch'] = (new Date(each['date']).getTime() / 1000);\r\n        each['channel'] = map2.get(each.sid);\r\n      })\r\n      setNotif(parsedResponse);\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setLoadFilter(false);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchLatestNotifications();\r\n    fetchAllNotif();\r\n  }, [toggle]);\r\n\r\n  //function to query more notifications\r\n  const handlePagination = async () => {\r\n    if (filter) {\r\n      setLimit(limit + 10);\r\n    }\r\n    else {\r\n      loadNotifications();\r\n      dispatch(incrementPage());\r\n    }\r\n  };\r\n\r\n  const showWayPoint = (index: any) => {\r\n    if (!filter) {\r\n      return (\r\n        Number(index) === notifications.length - 1 &&\r\n        !finishedFetching &&\r\n        !bgUpdateLoading\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        Number(index) === limit - 1\r\n      );\r\n    }\r\n\r\n  };\r\n\r\n  const onDecrypt = async ({ secret, title, message, image, cta }) => {\r\n    let txToast;\r\n    try {\r\n      let decryptedSecret = await CryptoHelper.decryptWithWalletRPCMethod(library.provider, secret, account);\r\n\r\n      // decrypt notification message\r\n      const decryptedBody = await CryptoHelper.decryptWithAES(message, decryptedSecret);\r\n\r\n      // decrypt notification title\r\n      let decryptedTitle = await CryptoHelper.decryptWithAES(title, decryptedSecret);\r\n\r\n      // decrypt notification image\r\n      let decryptedImage = await CryptoHelper.decryptWithAES(image, decryptedSecret);\r\n\r\n      // decrypt notification cta\r\n      let decryptedCta = await CryptoHelper.decryptWithAES(cta, decryptedSecret);\r\n      return { title: decryptedTitle, body: decryptedBody, image: decryptedImage, cta: decryptedCta };\r\n    } catch (error) {\r\n      if (error.code === 4001) {\r\n        // EIP-1193 userRejectedRequest error\r\n        console.error(error);\r\n        txToast = toaster.dark(\r\n          <NormalToast msg=\"User denied message decryption\" />,\r\n          {\r\n            position: \"bottom-right\",\r\n            type: toaster.TYPE.ERROR,\r\n            autoClose: 5000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          }\r\n        );\r\n      } else if (error.code === -32601) {\r\n        console.error(error);\r\n        txToast = toaster.dark(\r\n          <NormalToast msg=\"Your wallet doesn't support message decryption.\" />,\r\n          {\r\n            position: \"bottom-right\",\r\n            type: toaster.TYPE.ERROR,\r\n            autoClose: 5000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          }\r\n        );\r\n      } else {\r\n        console.error(error);\r\n        txToast = toaster.dark(\r\n          <NormalToast msg=\"There was an error in message decryption\" />,\r\n          {\r\n            position: \"bottom-right\",\r\n            type: toaster.TYPE.ERROR,\r\n            autoClose: 5000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  // Render\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Container>\r\n        <SearchFilter\r\n          notifications={allNotf}\r\n          filterNotifications={filterNotifications}\r\n          filter={filter}\r\n          reset={reset}\r\n          loadFilter={loadFilter}\r\n        />\r\n        <ScrollItem>\r\n          {((!run && !notifications.length) ||\r\n            (!run && filter && !filteredNotifications.length) ||\r\n            (run && !welcomeNotifs.length)) &&\r\n            !loading && (\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <DisplayNotice\r\n                  title=\"You currently have no notifications, try subscribing to some channels.\"\r\n                  theme=\"third\"\r\n                ></DisplayNotice>\r\n              </div>\r\n            )}\r\n          {notifications && (\r\n            <Notifs id=\"scrollstyle-secondary\">\r\n              {bgUpdateLoading && (\r\n                <Item padding=\"10px 20px\">\r\n                  <Oval color=\"#35c5f3\" height={40} width={40} />\r\n                </Item>\r\n              )}\r\n              {run &&\r\n                welcomeNotifs.map((oneNotification, index) => {\r\n                  const {\r\n                    cta,\r\n                    title,\r\n                    message,\r\n                    app,\r\n                    icon,\r\n                    image,\r\n                    blockchain,\r\n                    url\r\n                  } = oneNotification;\r\n\r\n                  // render the notification item\r\n                  return (\r\n                    <div key={`${message}+${title}`}>\r\n                      <NotificationItem\r\n                        notificationTitle={title}\r\n                        notificationBody={message}\r\n                        cta={cta}\r\n                        app={app}\r\n                        icon={icon}\r\n                        image={image}\r\n                        theme={themes.scheme}\r\n                        chainName={blockchain}\r\n                        url={url}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n              {(filter\r\n                ? filteredNotifications.slice(0, limit)\r\n                : notifications\r\n              ).map((oneNotification, index) => {\r\n                const {\r\n                  cta,\r\n                  title,\r\n                  message,\r\n                  app,\r\n                  icon,\r\n                  image,\r\n                  secret,\r\n                  notification,\r\n                  blockchain,\r\n                  url\r\n                } = oneNotification;\r\n                if (run) return;\r\n                // render the notification item\r\n                return (\r\n                  <div key={index}>\r\n                    {showWayPoint(index) && (\r\n                      <Waypoint onEnter={() => handlePagination()} />\r\n                    )}\r\n                    <NotificationItem\r\n                      notificationTitle={notification.title}\r\n                      notificationBody={notification.body}\r\n                      cta={cta}\r\n                      app={app}\r\n                      icon={icon}\r\n                      image={image}\r\n                      isSecret={secret != \"\"}\r\n                      decryptFn={() =>\r\n                        onDecrypt({ secret, title, message, image, cta })\r\n                      }\r\n                      chainName={blockchain}\r\n                      theme={themes.scheme}\r\n                      url={url}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n\r\n              {loading && !bgUpdateLoading && (\r\n                <Item padding=\"10px 20px\">\r\n                  <Oval color=\"#35c5f3\" height={40} width={40} />\r\n                </Item>\r\n              )}\r\n            </Notifs>\r\n          )}\r\n\r\n          {toast && (\r\n            <NotificationToast notification={toast} clearToast={clearToast} />\r\n          )}\r\n        </ScrollItem>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  background: ${props => props.theme.mainBg};\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: stretch;\r\n  justify-content: center;\r\n  height: inherit;\r\n`;\r\n\r\nconst Notifs = styled.div`\r\n  align-self: stretch;\r\n  flex: 1;\r\n`;\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`;\r\n\r\n// Export Default\r\nexport default Feedbox;\r\n","import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport styled, { useTheme, ThemeProvider } from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { Item, Button } from \"../primaries/SharedStyling\";\r\nimport { envConfig } from \"@project/contracts\";\r\nimport { postReq } from \"api\";\r\n\r\nimport { toast as toaster } from \"react-toastify\";\r\nimport NotificationToast from \"../primaries/NotificationToast\";\r\n\r\nimport { Oval } from \"react-loader-spinner\";\r\n\r\nimport Feedbox from \"segments/Feedbox\";\r\n\r\n\r\nimport GLOBALS from \"config/Globals\";\r\nexport const ALLOWED_CORE_NETWORK = envConfig.coreContractChain;\r\n\r\n// Create Header\r\nfunction InboxPage() {\r\n\t// React GA Analytics\r\n\tReactGA.pageview(\"/inbox\");\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst { account, chainId, library } = useWeb3React();\r\n\tconst { epnsReadProvider, epnsCommReadProvider } = useSelector(\r\n\t\t(state) => state.contracts\r\n\t);\r\n\r\n\t// toast related section\r\n\tconst [toast, showToast] = React.useState(null);\r\n\tconst clearToast = () => showToast(null);\r\n\r\n\t// whether secret notif are enabled\r\n\tconst [enabledSecretNotif, setEnabledSecretNotif] = React.useState(false);\r\n\r\n\tconst themes = useTheme();\r\n\tconst onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\r\n\r\n\t//clear toast variable after it is shown\r\n\tReact.useEffect(() => {\r\n\t\tif (toast) {\r\n\t\t\tclearToast();\r\n\t\t}\r\n\t}, [toast]);\r\n\t// toast related section\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst fetchEncryptionKey = async () => {\r\n\t\t\t// get public key from Backend API\r\n\t\t\tlet encryptionKey = await postReq('/encryption_key/get_encryption_key', {\r\n\t\t\t\taddress: account,\r\n\t\t\t\top: \"read\"\r\n\t\t\t}).then(res => {\r\n\t\t\t\treturn res.data?.encryption_key;\r\n\t\t\t});\r\n\r\n\t\t\tif (encryptionKey != null) {\r\n\t\t\t\tsetEnabledSecretNotif(true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetchEncryptionKey();\r\n\t}, [enabledSecretNotif])\r\n\r\n\t// toast customize\r\n\tconst LoaderToast = ({ msg, color }) => (\r\n\t\t<Toaster>\r\n\t\t\t<Oval color={color} height={30} width={30} />\r\n\t\t\t<ToasterMsg>{msg}</ToasterMsg>\r\n\t\t</Toaster>\r\n\t);\r\n\r\n\tconst NormalToast = ({ msg }) => (\r\n\t\t<Toaster>\r\n\t\t\t<ToasterMsg>{msg}</ToasterMsg>\r\n\t\t</Toaster>\r\n\t)\r\n\r\n\tconst registerPubKey = async (encryptionPublicKey) => {\r\n\t\tlet txToast;\r\n\t\ttry {\r\n\t\t\tconst type = {\r\n\t\t\t\tRegister: [\r\n\t\t\t\t\t{ name: \"user\", type: \"address\" },\r\n\t\t\t\t\t{ name: \"encryptionKey\", type: \"string\" },\r\n\t\t\t\t\t{ name: \"action\", type: \"string\" },\r\n\t\t\t\t],\r\n\t\t\t};\r\n\r\n\t\t\tconst message = {\r\n\t\t\t\tuser: account,\r\n\t\t\t\tencryptionKey: encryptionPublicKey,\r\n\t\t\t\taction: \"Register\",\r\n\t\t\t};\r\n\r\n\t\t\tlet EPNS_DOMAIN = {\r\n\t\t\t\tname: \"EPNS COMM V1\",\r\n\t\t\t\tchainId: chainId,\r\n\t\t\t\tverifyingContract: epnsCommReadProvider?.address,\r\n\t\t\t};\r\n\r\n\t\t\t// loader toast\r\n\t\t\ttxToast = toaster.dark(\r\n\t\t\t\t<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\r\n\t\t\t\t{\r\n\t\t\t\t\tposition: \"bottom-right\",\r\n\t\t\t\t\tautoClose: false,\r\n\t\t\t\t\thideProgressBar: true,\r\n\t\t\t\t\tcloseOnClick: true,\r\n\t\t\t\t\tpauseOnHover: true,\r\n\t\t\t\t\tdraggable: true,\r\n\t\t\t\t\tprogress: undefined,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tconst signature = await library\r\n\t\t\t\t.getSigner(account)\r\n\t\t\t\t._signTypedData(EPNS_DOMAIN, type, message);\r\n\r\n\t\t\tconst objPayload = {\r\n\t\t\t\taddress: account,\r\n\t\t\t\tencryptionKey: encryptionPublicKey,\r\n\t\t\t\tsignature,\r\n\t\t\t\tmessage,\r\n\t\t\t\top: \"write\",\r\n\t\t\t\tchainId,\r\n\t\t\t\tcontractAddress: epnsCommReadProvider.address,\r\n\t\t\t};\r\n\r\n\t\t\tconst result = await postReq(\r\n\t\t\t\t\"/encryption_key/register\",\r\n\t\t\t\tobjPayload\r\n\t\t\t);\r\n\t\t\tconsole.log(result);\r\n\r\n\t\t\ttoaster.update(txToast, {\r\n\t\t\t\trender: \"Successfully enabled secret notifications !\",\r\n\t\t\t\ttype: toaster.TYPE.SUCCESS,\r\n\t\t\t\tautoClose: 5000,\r\n\t\t\t});\r\n\r\n\t\t\tsetEnabledSecretNotif(true);\r\n\t\t} catch (err) {\r\n\t\t\tif (err.code === 4001) {\r\n\t\t\t\t// EIP-1193 userRejectedRequest error\r\n\t\t\t\ttoaster.update(txToast, {\r\n\t\t\t\t\trender: \"User denied message signature.\",\r\n\t\t\t\t\ttype: toaster.TYPE.ERROR,\r\n\t\t\t\t\tautoClose: 5000,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\ttoaster.update(txToast, {\r\n\t\t\t\t\trender: \"There was an error registering the public key\",\r\n\t\t\t\t\ttype: toaster.TYPE.ERROR,\r\n\t\t\t\t\tautoClose: 5000,\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst enableSecretNotif = async () => {\r\n\t\tlet txToast;\r\n\t\tif (enabledSecretNotif) {\r\n\t\t\ttxToast = toaster.dark(\r\n\t\t\t\t<NormalToast msg=\"Secret Notifications are already enabled.\" />,\r\n\t\t\t\t{\r\n\t\t\t\t\tposition: \"bottom-right\",\r\n\t\t\t\t\ttype: toaster.TYPE.SUCCESS,\r\n\t\t\t\t\tautoClose: 3000,\r\n\t\t\t\t\thideProgressBar: true,\r\n\t\t\t\t\tcloseOnClick: true,\r\n\t\t\t\t\tpauseOnHover: true,\r\n\t\t\t\t\tdraggable: true,\r\n\t\t\t\t\tprogress: undefined,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!epnsCommReadProvider?.address) return;\r\n\t\tlet encryptionPublicKey;\r\n\t\tawait library.provider\r\n\t\t\t.request({\r\n\t\t\t\tmethod: \"eth_getEncryptionPublicKey\",\r\n\t\t\t\tparams: [account], // you must have access to the specified account\r\n\t\t\t})\r\n\t\t\t.then((result) => {\r\n\t\t\t\tencryptionPublicKey = result;\r\n\t\t\t\tregisterPubKey(encryptionPublicKey);\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tif (error.code === 4001) {\r\n\t\t\t\t\t// EIP-1193 userRejectedRequest error\r\n\t\t\t\t\tconsole.log(\"User Rejected the Request to the Key\");\r\n\t\t\t\t\ttxToast = toaster.dark(\r\n\t\t\t\t\t\t<NormalToast msg=\"User denied message EncryptionPublicKey\" />,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tposition: \"bottom-right\",\r\n\t\t\t\t\t\t\ttype: toaster.TYPE.ERROR,\r\n\t\t\t\t\t\t\tautoClose: 5000,\r\n\t\t\t\t\t\t\thideProgressBar: true,\r\n\t\t\t\t\t\t\tcloseOnClick: true,\r\n\t\t\t\t\t\t\tpauseOnHover: true,\r\n\t\t\t\t\t\t\tdraggable: true,\r\n\t\t\t\t\t\t\tprogress: undefined,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (error.code === -32601) {\r\n\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t\ttxToast = toaster.dark(\r\n\t\t\t\t\t\t<NormalToast msg=\"Your wallet doesn't support providing public encryption key.\" />,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tposition: \"bottom-right\",\r\n\t\t\t\t\t\t\ttype: toaster.TYPE.ERROR,\r\n\t\t\t\t\t\t\tautoClose: 5000,\r\n\t\t\t\t\t\t\thideProgressBar: true,\r\n\t\t\t\t\t\t\tcloseOnClick: true,\r\n\t\t\t\t\t\t\tpauseOnHover: true,\r\n\t\t\t\t\t\t\tdraggable: true,\r\n\t\t\t\t\t\t\tprogress: undefined,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t\ttxToast = toaster.dark(\r\n\t\t\t\t\t\t<NormalToast msg=\"There was an error getting public encryption key.\" />,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tposition: \"bottom-right\",\r\n\t\t\t\t\t\t\ttype: toaster.TYPE.ERROR,\r\n\t\t\t\t\t\t\tautoClose: 5000,\r\n\t\t\t\t\t\t\thideProgressBar: true,\r\n\t\t\t\t\t\t\tcloseOnClick: true,\r\n\t\t\t\t\t\t\tpauseOnHover: true,\r\n\t\t\t\t\t\t\tdraggable: true,\r\n\t\t\t\t\t\t\tprogress: undefined,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\t// Render\r\n\treturn (\r\n\t\t<ThemeProvider theme={themes}>\r\n\t\t\t<Container>\r\n\t\t\t\t<Item>\r\n\t\t\t\t\t<Item margin=\"16px 20px 0px 0px\" self=\"self-end\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tpadding=\"12px\"\r\n\t\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\t\tborder={`1px solid ${themes.faucetBorder}`}\r\n\t\t\t\t\t\t\tbg={\r\n\t\t\t\t\t\t\t\tthemes.scheme === \"light\"\r\n\t\t\t\t\t\t\t\t\t? GLOBALS.COLORS.GRADIENT_PRIMARY\r\n\t\t\t\t\t\t\t\t\t: GLOBALS.COLORS.GRADIENT_SECONDARY\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tradius=\"50px\"\r\n\t\t\t\t\t\t\tonClick={enableSecretNotif}\r\n\t\t\t\t\t\t\tdisabled={enabledSecretNotif}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span style={{ color: \"#fff\" }}>\r\n\t\t\t\t\t\t\t\t{enabledSecretNotif ? 'Secret Notifications are enabled' : 'Enable Secret Notifications'}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Item>\r\n\t\t\t\t</Item>\r\n\t\t\t\t<div className=\"joyride\"></div>\r\n\t\t\t\t<Feedbox />\r\n\t\t\t\t{toast && (\r\n\t\t\t\t\t<NotificationToast\r\n\t\t\t\t\t\tnotification={toast}\r\n\t\t\t\t\t\tclearToast={clearToast}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Container>\r\n\t\t</ThemeProvider>\r\n\t);\r\n}\r\n\r\n// css style\r\nconst Container = styled.div`\r\n\tflex-direction: column;\r\n\tbackground: ${(props) => props.theme.mainBg};\r\n\theight: calc(100vh - ${GLOBALS.CONSTANTS.HEADER_HEIGHT}px - 52px - ${props => props.theme.interfaceTopPadding});\r\n\talign-items: stretch;\r\n\talign-self: stretch;\r\n`;\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`;\r\n\r\n// Export Default\r\nexport default InboxPage;\r\n","/**\r\n * This file helps us maintain the spamnotifications fetched in state, so when tabs are switched we can retain the notification information\r\n */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    page: 1, //the current page\r\n    notifications: [],// the actual notifications\r\n    finishedFetching: false,\r\n    toggler: false\r\n}\r\n\r\nexport const contractSlice = createSlice({\r\n    name: \"spam\",\r\n    initialState,\r\n    reducers: {\r\n        toggleToggler: (state) => {\r\n            state.toggler = !state.toggler;\r\n        },\r\n        resetState: (state) => {\r\n            state.page = initialState.page;\r\n            state.notifications = initialState.notifications;\r\n            state.finishedFetching = initialState.finishedFetching;\r\n        },\r\n        addPaginatedNotifications: (state, action) => {\r\n            state.notifications = [ ...state.notifications, ...action.payload ];\r\n            state.page += 1;\r\n        },\r\n        incrementPage: (state) => {\r\n            state.page += 1;\r\n        },\r\n        addNewNotification: (state, action) => {\r\n            state.notifications = [{...action.payload}, ...state.notifications]\r\n        },\r\n        setFinishedFetching: (state) => {\r\n            state.finishedFetching = true;\r\n        },\r\n        updateTopNotifications: (state, action) => {\r\n            state.notifications = [...action.payload.notifs, ...state.notifications.slice(action.payload.pageSize)];\r\n            console.log({sn: state.notifications});\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    toggleToggler,\r\n    addPaginatedNotifications,\r\n    incrementPage,\r\n    addNewNotification,\r\n    setFinishedFetching,\r\n    resetState,\r\n    updateTopNotifications\r\n} = contractSlice.actions;\r\n\r\nexport default contractSlice.reducer;","import React, { useState } from \"react\";\r\nimport styled, { useTheme } from 'styled-components';\r\nimport { Oval } from \"react-loader-spinner\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { envConfig } from \"@project/contracts\";\r\nimport SearchFilter from '../components/SearchFilter';\r\nimport * as EpnsAPI from \"@epnsproject/sdk-restapi\";\r\nimport { NotificationItem } from \"@epnsproject/sdk-uiweb\";\r\nimport {\r\n  addPaginatedNotifications,\r\n  incrementPage,\r\n  setFinishedFetching,\r\n  updateTopNotifications\r\n} from \"redux/slices/spamSlice\";\r\nimport { cacheSubscribe } from \"redux/slices/channelSlice\";\r\nimport { getReq, postReq } from \"api\";\r\nimport DisplayNotice from \"../primaries/DisplayNotice\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport CryptoHelper from \"helpers/CryptoHelper\";\r\nimport { toast as toaster } from \"react-toastify\";\r\nimport NotificationToast from \"../primaries/NotificationToast\";\r\nimport { convertAddressToAddrCaip } from \"helpers/CaipHelper\";\r\n\r\nconst NOTIFICATIONS_PER_PAGE = 10;\r\n// Create Header\r\nfunction SpamBox({ currentTab }) {\r\n  const dispatch = useDispatch();\r\n  const { account, chainId, library } = useWeb3React();\r\n  const { epnsCommReadProvider } = useSelector(\r\n    (state: any) => state.contracts\r\n  );\r\n\r\n  const themes = useTheme();\r\n\r\n  // toast related section\r\n  const [toast, showToast] = React.useState(null);\r\n  const clearToast = () => showToast(null);\r\n\r\n  const { run } = useSelector((state: any) => state.userJourney);\r\n\r\n  const { notifications, page, finishedFetching } = useSelector((state: any) => state.spam);\r\n  const EPNS_DOMAIN = {\r\n    name: \"EPNS COMM V1\",\r\n    chainId: chainId,\r\n    verifyingContract: epnsCommReadProvider?.address,\r\n  };\r\n  const [allNotif, setNotif] = React.useState([]);\r\n  const [loadFilter, setLoadFilter] = React.useState(false);\r\n  const [filteredNotifications, setFilteredNotifications] = React.useState([]);\r\n  const [filter, setFilter] = React.useState(false);\r\n  const [bgUpdateLoading, setBgUpdateLoading] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const onCoreNetwork = (chainId === envConfig.coreContractChain);\r\n\r\n  const NormalToast = ({ msg }) => (\r\n    <Toaster>\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  )\r\n\r\n  //clear toast variable after it is shown\r\n  React.useEffect(() => {\r\n    if (toast) {\r\n      clearToast();\r\n    }\r\n  }, [toast]);\r\n\r\n  const nameToIdDev = {\r\n    \"POLYGON_TEST_MUMBAI\": 80001,\r\n    \"ETH_TEST_KOVAN\": 42\r\n  }\r\n\r\n  const nameToIdProd = {\r\n    \"POLYGON_MAINNET\": 137,\r\n    \"ETH_MAINNET\": 1\r\n  }\r\n\r\n  const reset = () => setFilter(false);\r\n  const filterNotifications = async (query, channels, startDate, endDate) => {\r\n    if (loading) return;\r\n    setLoading(true);\r\n    setBgUpdateLoading(true);\r\n    setFilter(true);\r\n    if (startDate == null) startDate = new Date('January 1, 2000');\r\n    if (endDate == null) endDate = new Date('January 1, 3000');\r\n    startDate = startDate.getTime() / 1000;\r\n    endDate = endDate.getTime() / 1000;\r\n    var Filter = {\r\n      channels: channels,\r\n      date: { lowDate: startDate, highDate: endDate }\r\n    };\r\n    if (channels.length == 0) delete Filter.channels;\r\n\r\n\r\n    setFilteredNotifications([]);\r\n\r\n    let filterNotif = [];\r\n    for (const notif of allNotif) {\r\n      let timestamp;\r\n      const matches = notif.message.match(/\\[timestamp:(.*?)\\]/);\r\n      if (matches) {\r\n        timestamp = matches[1];\r\n      }\r\n      else timestamp = notif.epoch;\r\n      if (\r\n        ((Filter.channels === undefined ? true : (Filter.channels.includes(notif.channel))) &&\r\n          timestamp >= startDate && timestamp <= endDate\r\n          && notif.message.toLowerCase().includes(query.toLowerCase()))\r\n      )\r\n        filterNotif.push(notif);\r\n    }\r\n    setFilteredNotifications(filterNotif);\r\n    // }\r\n    setLoading(false);\r\n    setBgUpdateLoading(false);\r\n  }\r\n\r\n  const loadNotifications = async () => {\r\n    if (loading || finishedFetching || run) return;\r\n    setLoading(true);\r\n    try {\r\n      const { count, results } = await EpnsAPI.fetchSpamNotifications({\r\n        user: account,\r\n        pageSize: NOTIFICATIONS_PER_PAGE,\r\n        page,\r\n        chainId,\r\n        dev: true,\r\n      });\r\n        let parsedResponse = EpnsAPI.parseApiResponse(results);\r\n          parsedResponse.forEach( (each,i) => {\r\n              each['date'] = results[i].epoch;\r\n              each['epoch'] = (new Date(each['date']).getTime() / 1000);\r\n          })\r\n          const parsedResponsePromise = parsedResponse.map(async (elem: any, i: any) => {\r\n            elem.channel = results[i].channel;\r\n            let address = results[i].channel;\r\n            \r\n            const {\r\n              data: { subscribers },\r\n            } = await postReq(\"/channels/_get_subscribers\", {\r\n              channel: address,\r\n              blockchain: chainId,\r\n              op: \"read\",\r\n            });\r\n            elem.subscribers = subscribers;\r\n            return { ...elem };\r\n        });\r\n      parsedResponse = await Promise.all(parsedResponsePromise);\r\n      dispatch(addPaginatedNotifications(parsedResponse));\r\n      if (count === 0) {\r\n        dispatch(setFinishedFetching());\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchLatestNotifications = async () => {\r\n    if (loading || bgUpdateLoading || run) return;\r\n    setBgUpdateLoading(true);\r\n    setLoading(true);\r\n\r\n    try {\r\n      const { count, results } = await EpnsAPI.fetchSpamNotifications({\r\n        user: account,\r\n        pageSize: NOTIFICATIONS_PER_PAGE,\r\n        page: 1,\r\n        chainId,\r\n        dev: true,\r\n      });\r\n      if (!notifications.length) {\r\n        dispatch(incrementPage());\r\n      }\r\n      let parsedResponse = EpnsAPI.parseApiResponse(results);\r\n      parsedResponse.forEach((each, i) => {\r\n        each['date'] = results[i].epoch;\r\n        each['epoch'] = (new Date(each['date']).getTime() / 1000);\r\n      })\r\n      const parsedResponsePromise = parsedResponse.map(async (elem: any, i: any) => {\r\n        elem.channel = results[i].channel;\r\n        let address = results[i].channel;\r\n\r\n          const {\r\n            data: { subscribers },\r\n          } = await postReq(\"/channels/_get_subscribers\", {\r\n            channel: address,\r\n            blockchain: chainId,\r\n            op: \"read\",\r\n          });\r\n          elem.subscribers = subscribers;\r\n          return { ...elem };\r\n        });\r\n      parsedResponse = await Promise.all(parsedResponsePromise);\r\n      dispatch(\r\n        updateTopNotifications({\r\n          notifs: parsedResponse,\r\n          pageSize: NOTIFICATIONS_PER_PAGE,\r\n        })\r\n      );\r\n      if (count === 0) {\r\n        dispatch(setFinishedFetching());\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setBgUpdateLoading(false);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchAllNotif = async () => {\r\n    setLoadFilter(true);\r\n    try {\r\n      const { count, results } = await EpnsAPI.fetchSpamNotifications({\r\n        user: account,\r\n        pageSize: 100000,\r\n        page: 1,\r\n        chainId,\r\n        dev: true,\r\n      });\r\n      if (!notifications.length) {\r\n        dispatch(incrementPage());\r\n      }\r\n      let parsedResponse = EpnsAPI.parseApiResponse(results);\r\n        parsedResponse.forEach( (each,i) => {\r\n            each['date'] = results[i].epoch;\r\n            each['epoch'] = (new Date(each['date']).getTime() / 1000);\r\n        })\r\n        const parsedResponsePromise = parsedResponse.map(async (elem: any, i: any) => {\r\n          elem.channel = results[i].channel;\r\n          let address = results[i].channel;\r\n          \r\n          const {\r\n            data: { subscribers },\r\n          } = await postReq(\"/channels/_get_subscribers\", {\r\n            channel: address,\r\n            op: \"read\",\r\n          });\r\n          elem.subscribers = subscribers;\r\n          return { ...elem };\r\n        });\r\n      parsedResponse = await Promise.all(parsedResponsePromise);\r\n      let res = parsedResponse.filter(notif => !isSubscribedFn(notif['subscribers']));\r\n      setNotif(res);\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setBgUpdateLoading(false);\r\n      setLoading(false);\r\n      setLoadFilter(false);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchLatestNotifications();\r\n    fetchAllNotif();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (epnsCommReadProvider) {\r\n      loadNotifications();\r\n    }\r\n  }, [epnsCommReadProvider, account]);\r\n\r\n  const fetchAliasAddress = async (channelAddress) => {\r\n    if (channelAddress === null) return;\r\n    const userAddressInCaip = convertAddressToAddrCaip(channelAddress, chainId);\r\n    const ethAlias = await getReq(`/v1/alias/${userAddressInCaip}/channel`).then(({ data }) => {\r\n      let aliasAccount;\r\n      if (data) {\r\n        aliasAccount = data.alias_address;\r\n      }\r\n      return aliasAccount;\r\n    });\r\n\r\n    return ethAlias;\r\n  }\r\n\r\n  const fetchEthAddress = async (channelAddress) => {\r\n    if (channelAddress === null) return;\r\n    const userAddressInCaip = convertAddressToAddrCaip(account, chainId);\r\n    const aliasEth = await getReq(`/v1/alias/${userAddressInCaip}/channel`).then(({ data }) => {\r\n      let ethAccount;\r\n      if (data) {\r\n        ethAccount = data.channel;\r\n      }\r\n      return ethAccount;\r\n    });\r\n\r\n    return aliasEth;\r\n  }\r\n\r\n  //function to query more notifications\r\n  const handlePagination = async () => {\r\n    loadNotifications();\r\n    dispatch(incrementPage());\r\n  };\r\n\r\n  const showWayPoint = (index: any) => {\r\n    return (\r\n      Number(index) === notifications.length - 1 &&\r\n      !finishedFetching &&\r\n      !bgUpdateLoading\r\n    );\r\n  };\r\n\r\n  const onSubscribeToChannel = async (channelAddress, blockchain) => {\r\n    if (!channelAddress) return;\r\n    let address = channelAddress;\r\n\r\n    const nameToObj = (envConfig.coreContractChain === 1) ? nameToIdProd : nameToIdDev;\r\n    if (chainId !== nameToObj[blockchain]) {\r\n      if (!onCoreNetwork) {\r\n        address = await fetchAliasAddress(channelAddress);\r\n      } else {\r\n        address = await fetchEthAddress(channelAddress);\r\n      }\r\n    }\r\n\r\n    if (!address) return;\r\n    const type = {\r\n      Subscribe: [\r\n        { name: \"channel\", type: \"address\" },\r\n        { name: \"subscriber\", type: \"address\" },\r\n        { name: \"action\", type: \"string\" },\r\n      ],\r\n    };\r\n    const message = {\r\n      channel: address,\r\n      subscriber: account,\r\n      action: \"Subscribe\",\r\n    };\r\n\r\n    const signature = await library\r\n      .getSigner(account)\r\n      ._signTypedData(EPNS_DOMAIN, type, message);\r\n    return postReq(\"/channels/subscribe\", {\r\n      signature,\r\n      message,\r\n      op: \"write\",\r\n      chainId,\r\n      contractAddress: epnsCommReadProvider.address,\r\n    }).then((res) => {\r\n      dispatch(cacheSubscribe({ channelAddress: channelAddress }));\r\n    });;\r\n  };\r\n\r\n  const isSubscribedFn = (subscribers: any) => {\r\n    return subscribers\r\n      .map((a) => a.toLowerCase())\r\n      .includes(account.toLowerCase());\r\n  };\r\n\r\n  const onDecrypt = async ({ secret, title, message, image, cta }) => {\r\n    let txToast;\r\n    try {\r\n      let decryptedSecret = await CryptoHelper.decryptWithWalletRPCMethod(library.provider, secret, account);\r\n\r\n      // decrypt notification message\r\n      const decryptedBody = await CryptoHelper.decryptWithAES(message, decryptedSecret);\r\n\r\n      // decrypt notification title\r\n      let decryptedTitle = await CryptoHelper.decryptWithAES(title, decryptedSecret);\r\n\r\n      // decrypt notification image\r\n      let decryptedImage = await CryptoHelper.decryptWithAES(image, decryptedSecret);\r\n\r\n      // decrypt notification cta\r\n      let decryptedCta = await CryptoHelper.decryptWithAES(cta, decryptedSecret);\r\n      return { title: decryptedTitle, body: decryptedBody, image: decryptedImage, cta: decryptedCta };\r\n    } catch (error) {\r\n      if (error.code === 4001) {\r\n        // EIP-1193 userRejectedRequest error\r\n        console.error(error);\r\n        txToast = toaster.dark(\r\n          <NormalToast msg=\"User denied message decryption\" />,\r\n          {\r\n            position: \"bottom-right\",\r\n            type: toaster.TYPE.ERROR,\r\n            autoClose: 5000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          }\r\n        );\r\n      } else if (error.code === -32601) {\r\n        console.error(error);\r\n        txToast = toaster.dark(\r\n          <NormalToast msg=\"Your wallet doesn't support message decryption.\" />,\r\n          {\r\n            position: \"bottom-right\",\r\n            type: toaster.TYPE.ERROR,\r\n            autoClose: 5000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          }\r\n        );\r\n      } else {\r\n        console.error(error);\r\n        txToast = toaster.dark(\r\n          <NormalToast msg=\"There was an error in message decryption\" />,\r\n          {\r\n            position: \"bottom-right\",\r\n            type: toaster.TYPE.ERROR,\r\n            autoClose: 5000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  // Render\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Container>\r\n        <SearchFilter notifications={allNotif} filterNotifications={filterNotifications} filter={filter} reset={reset} loadFilter={loadFilter} />\r\n        {bgUpdateLoading && (\r\n          <div style={{ marginTop: \"10px\" }}>\r\n            <Oval color=\"#35c5f3\" height={40} width={40} />\r\n          </div>\r\n        )}\r\n        {notifications && (\r\n          <Items id=\"scrollstyle-secondary\">\r\n            {(filter && !run ? filteredNotifications : allNotif).map((oneNotification, index) => {\r\n              const {\r\n                cta,\r\n                title,\r\n                message,\r\n                app,\r\n                icon,\r\n                image,\r\n                secret,\r\n                notification,\r\n                channel,\r\n                subscribers,\r\n                blockchain,\r\n                url\r\n              } = oneNotification;\r\n              // render the notification item\r\n              // console.log(app , index);\r\n              return (\r\n                <div key={index}>\r\n                  {showWayPoint(index) && !loading && (\r\n                    <Waypoint onEnter={handlePagination} />\r\n                  )}\r\n                  <NotificationItem\r\n                    notificationTitle={notification.title}\r\n                    notificationBody={notification.body}\r\n                    cta={cta}\r\n                    app={app}\r\n                    icon={icon}\r\n                    image={image}\r\n                    theme={themes.scheme}\r\n                    subscribeFn={() => onSubscribeToChannel(channel, blockchain)}\r\n                    isSpam\r\n                    isSubscribedFn={async () => isSubscribedFn(subscribers)}\r\n                    isSecret={secret != ''}\r\n                    decryptFn={() => onDecrypt({ secret, title, message, image, cta })}\r\n                    chainName={blockchain}\r\n                    url={url}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </Items>\r\n        )}\r\n        {loading && !bgUpdateLoading && (\r\n          <Oval color=\"#35c5f3\" height={40} width={40} />\r\n        )}\r\n        {(!notifications.length || (filter && !filteredNotifications.length)) && !loading && (\r\n          <CenteredContainerInfo>\r\n            <DisplayNotice\r\n              title=\"You currently have no spam notifications.\"\r\n              theme=\"third\"\r\n            />\r\n          </CenteredContainerInfo>\r\n        )}\r\n        {toast && (\r\n          <NotificationToast\r\n            notification={toast}\r\n            clearToast={clearToast}\r\n          />\r\n        )}\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nconst CenteredContainerInfo = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n`;\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  max-height: 100vh;\r\n  background: ${props => props.theme.mainBg};\r\n\r\n  // padding: 20px;\r\n  // font-size: 16px;\r\n  // display: flex;\r\n  // font-weight: 200;\r\n  // align-content: center;\r\n  // align-items: center;\r\n  // justify-content: center;\r\n  // width: 100%;\r\n  // min-height: 40vh;\r\n`;\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`;\r\n\r\n// Export Default\r\nexport default SpamBox;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SpamBox from \"segments/spam\";\r\n\r\n// Create Header\r\nfunction Spambox() {\r\n\r\n  // Render\r\n  return (\r\n    <FullWidth>\r\n      <SpamBox currentTab=\"inbox\" />\r\n    </FullWidth>\r\n  );\r\n}\r\n\r\nconst FullWidth = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\n// Export Default\r\nexport default Spambox;\r\n","import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport styled from \"styled-components\";\r\nimport Spambox from \"segments/Spambox\";\r\n\r\n// Create Header\r\nfunction InboxPage() {\r\n  ReactGA.pageview(\"/spam\");\r\n\r\n  // Render\r\n  return (\r\n    <Container>\r\n      <Interface>\r\n        <Spambox />\r\n      </Interface>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css style\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: block;\r\n  flex-direction: column;\r\n  min-height: calc(100vh - 100px);\r\n`;\r\n\r\nconst Interface = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n\r\n  margin-bottom: 15px;\r\n  overflow: hidden;\r\n`;\r\n\r\n// Export Default\r\nexport default InboxPage;\r\n","import React, { useRef, useState } from 'react';\r\nimport { useClickAway } from 'react-use';\r\nimport styled, { ThemeProvider, useTheme } from 'styled-components';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { Oval } from 'react-loader-spinner';\r\nimport { postReq } from \"../api\";\r\nimport { Item, H2, H3, Span, Button, Input } from '../primaries/SharedStyling';\r\n\r\nconst ethers = require(\"ethers\");\r\n\r\nexport default function AliasVerificationModal({\r\n  onClose,\r\n  onSuccess,\r\n  verificationStatus,\r\n  aliasEthAccount,\r\n}) {\r\n  const { account, library } = useWeb3React();\r\n  const signer = library.getSigner(account);\r\n\r\n  const themes = useTheme();\r\n\r\n  const modalRef = useRef(null);\r\n  const polygonCommsContract = new ethers.Contract(\r\n    addresses.epnsPolyComm,\r\n    abis.epnsComm,\r\n    signer\r\n  );\r\n  const [loading, setLoading] = useState(\"\");\r\n  const mainAddress = aliasEthAccount;\r\n\r\n  // Form signer and contract connection\r\n  useClickAway(modalRef, () => onClose(loading !== \"\"));\r\n\r\n  const checkAlias = async () => {\r\n    if (mainAddress == aliasEthAccount) {\r\n      submitAlias();\r\n    } else {\r\n      setLoading(\"Enter Correct Eth Channel Address\");\r\n      setTimeout(() => {\r\n        setLoading(\"\");\r\n      }, 4000);\r\n    }\r\n\r\n    const submitAlias = () => {\r\n      setLoading(\"loading\");\r\n      const anotherSendTxPromise = polygonCommsContract.verifyChannelAlias(\r\n        mainAddress\r\n      );\r\n      anotherSendTxPromise\r\n        .then(async (tx) => {\r\n          console.log(tx);\r\n          setLoading(\"Transaction Sent! It usually takes 5mins to verify.\");\r\n\r\n          await tx.wait(1);\r\n          setTimeout(() => {\r\n            setLoading(\"Transaction Mined!\");\r\n          }, 2000);\r\n\r\n          setTimeout(() => {\r\n            setLoading(\"Loading...\");\r\n          }, 2000);\r\n\r\n          const intervalId = setInterval(async () => {\r\n            const response = await postReq(\"/channels/getAliasVerification\", {\r\n              aliasAddress: account,\r\n              op: \"read\",\r\n            });\r\n            const status = response?.data?.status;\r\n            if (status == true) {\r\n              clearInterval(intervalId);\r\n              onSuccess();\r\n              onClose();\r\n            }\r\n          }, 5000);\r\n        })\r\n        .catch(() => {\r\n          setLoading(\"There was an error\");\r\n          setTimeout(() => {\r\n            setLoading(\"\");\r\n          }, 2000);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={themes}>\r\n            <Overlay>\r\n                <AliasModal ref={modalRef}>\r\n                    <Item align=\"flex-start\">\r\n                        <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n                            <Span weight=\"200\" color={themes.color}> Verify</Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\r\n                                Alias\r\n                            </Span>\r\n                        </H2>\r\n                        {\r\n                            verificationStatus === null ?\r\n                                (\r\n                                    <H3 color={themes.color}>There has been an error in the verification of your alias, Please contact the admin</H3>\r\n                                ) : (\r\n                                    <H3 color={themes.color}>Before you can use this channel on this chain, you first need to verify your Alias.</H3>\r\n                                )\r\n                        }\r\n                    </Item>\r\n                    {\r\n                        verificationStatus !== null && (\r\n                            <>\r\n                                <Item align=\"flex-start\">\r\n                                    <CustomInput\r\n                                        placeholder={aliasEthAccount}\r\n                                        radius=\"4px\"\r\n                                        padding=\"12px\"\r\n                                        border=\"1px solid #674c9f\"\r\n                                        bg=\"#fff\"\r\n                                        disabled\r\n                                        readOnly={true}\r\n                                    />\r\n                                </Item>\r\n                                {loading && (\r\n                                    <Item margin=\"20px 0px 10px 0px\">\r\n                                        <Oval\r\n                                            color=\"black\"\r\n                                            height={16}\r\n                                            width={16}\r\n                                        />\r\n                                    </Item>\r\n                                )}\r\n                                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                                    <Button\r\n                                        bg='#e20880'\r\n                                        color='#fff'\r\n                                        flex=\"1\"\r\n                                        radius=\"0px\"\r\n                                        padding=\"20px 10px\"\r\n                                        disabled={mainAddress.length !== 42 || loading !== ''}\r\n                                        onClick={checkAlias}\r\n                                    >\r\n                                        <StyledInput\r\n                                            cursor=\"hand\"\r\n                                            textTransform=\"uppercase\"\r\n                                            color=\"#fff\" weight=\"400\"\r\n                                            size=\"0.8em\" spacing=\"0.2em\"\r\n                                            value={loading ? loading : \"Verify Alias\"}\r\n                                        />\r\n                                    </Button>\r\n                                </Item>\r\n                            </>\r\n                        )\r\n                    }\r\n                </AliasModal>\r\n            </Overlay>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nconst StyledInput = styled(Input)`\r\n    width: 100%;\r\n    text-align: center;\r\n    caret-color: transparent;\r\n  `;\r\n\r\n  const CustomInput = styled(Input)`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    margin: 20px 0px;\r\n  `;\r\n\r\n  const Overlay = styled.div`\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background: ${(props) => props.theme.scrollBg};\r\n    height: 100%;\r\n    width: 100%;\r\n    z-index: 1000;\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow-y: scroll;\r\n  `;\r\n\r\n  const AliasModal = styled.div`\r\n    padding: 20px 30px;\r\n    background: ${(props) => props.theme.backgroundBG};\r\n  `;\r\n}\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\n// Other Information URLs\r\nfunction ViewInfoItem() {\r\n  // render\r\n  return (\r\n    <>\r\n    <Container id=\"epns-browser\">\r\n      <ChannelInfo >\r\n        <ChannelTitle>\r\n          <>\r\n          <AppLinkText>\r\n            <AppLink href={`${process.env.REACT_APP_BROWSER_EXTENSION_URL}`} target=\"_blank\" rel=\"nofollow\">\r\n              Download EPNS Browser Extension\r\n            </AppLink>\r\n          </AppLinkText>\r\n          \r\n          </>\r\n        </ChannelTitle>\r\n      </ChannelInfo>\r\n    </Container>\r\n    <Container id=\"epns-app-ios\">\r\n      <ChannelInfo >\r\n        <ChannelTitle>\r\n          <>\r\n          <AppLinkText>\r\n            <AppLink href={`${process.env.REACT_APP_IOS_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\r\n              Download EPNS App (iOS)\r\n            </AppLink>\r\n          </AppLinkText>\r\n           For iOS Users\r\n          </>\r\n        </ChannelTitle>\r\n      </ChannelInfo>\r\n    </Container>\r\n    <Container id=\"epns-app\">\r\n      <ChannelInfo >\r\n        <ChannelTitle>\r\n          <>\r\n          <AppLinkText>\r\n            <AppLink href={`${process.env.REACT_APP_ANDROID_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\r\n              Download EPNS App (Android)\r\n            </AppLink>\r\n          </AppLinkText>\r\n           For Android Users\r\n          </>\r\n        </ChannelTitle>\r\n      </ChannelInfo>\r\n    </Container>\r\n    <Container >\r\n      <ChannelInfo>\r\n        <ChannelTitle>\r\n          <ChannelTitleLink href={process.env.REACT_APP_HOW_TO_GUIDE} target=\"_blank\" rel=\"nofollow\">\r\n            Click here for our How to Guides\r\n          </ChannelTitleLink>\r\n        </ChannelTitle>\r\n      </ChannelInfo>\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  // display: flex;\r\n  // flex-wrap: wrap;\r\n\r\n  background: ${props => props.theme.mainBg};\r\n\r\n  color:${props => props.theme.color};\r\n  border-radius: 10px;\r\n  border: 1px solid rgb(237, 237, 237);\r\n\r\n  margin: 15px 0px;\r\n  justify-content: center;\r\n  padding: 10px;\r\n`\r\n\r\nconst ChannelTitleLink = styled.a`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\nconst AppLink = styled.a`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\nconst AppLinkText = styled.div`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n`\r\nconst ChannelInfo = styled.div`\r\n  flex: 1;\r\n  margin: 5px 10px;\r\n  min-width: 120px;\r\n  flex-grow: 4;\r\n  flex-direction: column;\r\n  display: flex;\r\n`\r\n\r\nconst ChannelTitle = styled.div`\r\n  margin-bottom: 5px;\r\n`\r\n\r\n// Export Default\r\nexport default ViewInfoItem;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nimport ViewInfoItem from \"components/ViewInfoItem\";\r\n\r\nimport * as dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\n// Other Information section\r\nfunction Info() {\r\n\r\n  return (\r\n    <Container>\r\n      <InfoBox>\r\n        <ViewInfoItem />\r\n      </InfoBox>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  max-height: 80vh;\r\n`\r\n\r\nconst InfoBox = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  background: ${props => props.theme.mainBg};\r\n`\r\n\r\n// Export Default\r\nexport default Info;\r\n","import React, { useRef, useState } from 'react';\r\nimport { useClickAway } from 'react-use';\r\nimport styled, { useTheme } from 'styled-components';\r\nimport { Oval } from 'react-loader-spinner';\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nimport { Item, H2, H3, Span, Button, Input } from 'primaries/SharedStyling';\r\n\r\nexport default function AddDelegateModal({\r\n    onClose, onSuccess, addDelegate\r\n}) {\r\n\r\n    const themes = useTheme();\r\n    console.log(themes);\r\n    const modalRef = useRef(null);\r\n    const [mainAdress, setMainAddress] = useState('');\r\n    const [loading, setLoading] = useState('');\r\n\r\n    // Form signer and contract connection\r\n    useClickAway(modalRef, onClose);\r\n\r\n    const addDelegateFunction = () => {\r\n        setLoading('loading')\r\n        addDelegate(mainAdress)\r\n            .then(async (tx) => {\r\n                console.log(tx);\r\n                setLoading(\"Transaction Sent!\");\r\n\r\n                setTimeout(() => {\r\n                    onSuccess();\r\n                    onClose();\r\n                }, 2000);\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log({\r\n                    err\r\n                })\r\n                setLoading('There was an error');\r\n                setTimeout(() => {\r\n                    setLoading('')\r\n                }, 2000)\r\n            })\r\n    };\r\n\r\n\r\n    return (\r\n        <ThemeProvider theme={themes}>\r\n            <Overlay>\r\n                <AliasModal ref={modalRef} background={themes}>\r\n                    <Item align=\"flex-start\">\r\n                        <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n                            <Span weight=\"200\" color={themes.fontColor}>Add </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Delegate</Span>\r\n                        </H2>\r\n                        <H3 weight=\"200\" color={themes.fontColor}>Add an account who can send notifications on your behalf.</H3>\r\n                    </Item>\r\n                    <Item align=\"flex-start\">\r\n                        <CustomInput\r\n                            required\r\n                            placeholder=\"Enter the ethereum address\"\r\n                            radius=\"4px\"\r\n                            padding=\"12px\"\r\n                            border=\"1px solid #674c9f\"\r\n                            bg=\"#fff\"\r\n                            value={mainAdress}\r\n                            onChange={(e) => { setMainAddress(e.target.value) }}\r\n                        />\r\n                    </Item>\r\n                    <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                        <Button\r\n                            bg='#e20880'\r\n                            color='#fff'\r\n                            flex=\"1\"\r\n                            radius=\"0px\"\r\n                            padding=\"20px 10px\"\r\n                            disabled={mainAdress.length !== 42}\r\n                            onClick={addDelegateFunction}\r\n                        >\r\n                            {loading && <Oval\r\n                                color=\"#FFF\"\r\n                                height={16}\r\n                                width={16}\r\n                            />\r\n                            }\r\n                            <StyledInput\r\n                                cursor=\"hand\"\r\n                                textTransform=\"uppercase\"\r\n                                color=\"#fff\" weight=\"400\"\r\n                                size=\"0.8em\" spacing=\"0.2em\"\r\n                                value={loading ? loading : \"Add Delegate\"}\r\n                            />\r\n                        </Button>\r\n                    </Item>\r\n                </AliasModal>\r\n            </Overlay>\r\n\r\n        </ThemeProvider>\r\n\r\n    )\r\n}\r\n\r\nconst StyledInput = styled(Input)`\r\n    width: 100%;\r\n    text-align: center;\r\n    caret-color: transparent;\r\n`\r\n\r\nconst CustomInput = styled(Input)`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    margin: 20px 0px;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background: rgba(0,0,0,0.85);\r\n    height: 100%;\r\n    width: 100%;\r\n    z-index: 1000;\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst AliasModal = styled.div`\r\n    padding: 20px 30px;\r\n    background: ${props => props.background.mainBg};\r\n`;","import React, { useRef, useState } from 'react';\r\nimport { useClickAway } from 'react-use';\r\nimport styled, { useTheme } from 'styled-components';\r\nimport {Oval} from 'react-loader-spinner';\r\n\r\nimport { Item, H2, H3, Span, Button, Input } from 'primaries/SharedStyling';\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nexport default function RemoveDelegateModal({\r\n    onClose, onSuccess, removeDelegate, address = \"\"\r\n}) {\r\n    const themes = useTheme();\r\n    const modalRef = useRef(null);\r\n    const [mainAdress, setMainAddress] = useState(address);\r\n    const [loading, setLoading] = useState('');\r\n\r\n    // Form signer and contract connection\r\n    useClickAway(modalRef, onClose);\r\n\r\n    const addDelegateFunction = () => {\r\n        setLoading('loading')\r\n        removeDelegate(mainAdress)\r\n            .then(async (tx) => {\r\n                console.log(tx);\r\n                setLoading(\"Transaction Sent!\");\r\n\r\n                setTimeout(() => {\r\n                    onSuccess();\r\n                    onClose();\r\n                }, 2000);\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log({\r\n                    err\r\n                })\r\n                setLoading('There was an error');\r\n                setTimeout(() => {\r\n                    setLoading('')\r\n                }, 2000)\r\n            })\r\n    };\r\n\r\n\r\n    return (\r\n        <ThemeProvider theme={themes}>\r\n            <Overlay>\r\n                <AliasModal ref={modalRef} background={themes}>\r\n                    <Item align=\"flex-start\">\r\n                        <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n                            <Span weight=\"200\" color={themes.fontColor}>Remove </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Delegate</Span>\r\n                        </H2>\r\n                        <H3 color={themes.fontColor}>Remove an account who can send notifications on your behalf.</H3>\r\n                    </Item>\r\n                    <Item align=\"flex-start\">\r\n                        <CustomInput\r\n                            required\r\n                            placeholder=\"Enter the ethereum address\"\r\n                            radius=\"4px\"\r\n                            padding=\"12px\"\r\n                            border=\"1px solid #674c9f\"\r\n                            bg=\"#fff\"\r\n                            // bg = {themes.scheme==\"dark\" ? \"#000\" : \"#fff\"}\r\n                            value={mainAdress}\r\n                            onChange={(e) => { setMainAddress(e.target.value) }}\r\n                        />\r\n                    </Item>\r\n                    <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                        <Button\r\n                            bg='#e20880'\r\n                            color='#fff'\r\n                            flex=\"1\"\r\n                            radius=\"0px\"\r\n                            padding=\"20px 10px\"\r\n                            disabled={mainAdress.length !== 42}\r\n                            onClick={addDelegateFunction}\r\n                        >\r\n                            {loading && <Oval\r\n                                color=\"#FFF\"\r\n                                height={16}\r\n                                width={16}\r\n                            />\r\n                            }\r\n                            <StyledInput\r\n                                cursor=\"hand\"\r\n                                textTransform=\"uppercase\"\r\n                                color=\"#fff\" weight=\"400\"\r\n                                size=\"0.8em\" spacing=\"0.2em\"\r\n                                value={loading ? loading : \"Remove Delegate\"}\r\n                            />\r\n                        </Button>\r\n                    </Item>\r\n                </AliasModal>\r\n            </Overlay>\r\n        </ThemeProvider>\r\n\r\n    )\r\n}\r\n\r\nconst StyledInput = styled(Input)`\r\n    width: 100%;\r\n    text-align: center;\r\n    caret-color: transparent;\r\n`\r\n\r\nconst CustomInput = styled(Input)`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    margin: 20px 0px;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background: rgba(0,0,0,0.85);\r\n    height: 100%;\r\n    width: 100%;\r\n    z-index: 1000;\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst AliasModal = styled.div`\r\n    padding: 20px 30px;\r\n    background: ${props => props.theme.scheme === \"dark\" ? `black` : `white`};\r\n`;","import React from \"react\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport styled from \"styled-components\";\r\nimport { Oval } from \"react-loader-spinner\";\r\nimport { useClickAway } from \"react-use\";\r\nimport {\r\n  Section,\r\n  Content,\r\n  Item,\r\n  H3,\r\n  Span,\r\n  Button,\r\n} from \"primaries/SharedStyling\";\r\n\r\nconst MIN_STAKE_FEES = 50;\r\n\r\nexport default function ActivateChannelModal({\r\n  activateChannel,\r\n  loading,\r\n  setChannelStakeFees,\r\n  channelStakeFees,\r\n  onClose,\r\n}) {\r\n  const popupRef = React.useRef(null);\r\n  useClickAway(popupRef, onClose); //close the popoup when we click away\r\n  return (\r\n    <PopupOverlay>\r\n      <PopupSlider ref={popupRef}>\r\n        <Section>\r\n          <Content padding=\"50px 0px 0px 0px\">\r\n            <Item align=\"flex-start\" margin=\"0px 20px\">\r\n              <H3 color=\"#e20880\">Set your staking fees in DAI</H3>\r\n            </Item>\r\n\r\n            <Item\r\n              margin=\"-10px 20px 20px 20px\"\r\n              padding=\"20px 20px 10px 20px\"\r\n              bg=\"#f1f1f1\"\r\n            >\r\n              <Slider\r\n                defaultValue={MIN_STAKE_FEES}\r\n                onChangeCommitted={(_, value) =>\r\n                  setChannelStakeFees(Number(value))\r\n                }\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                step={MIN_STAKE_FEES}\r\n                marks\r\n                min={MIN_STAKE_FEES}\r\n                max={25000}\r\n              />\r\n              <Span\r\n                weight=\"400\"\r\n                size=\"1.0em\"\r\n                textTransform=\"uppercase\"\r\n                spacing=\"0.2em\"\r\n              >\r\n                Amount Staked: {channelStakeFees} DAI\r\n              </Span>\r\n            </Item>\r\n\r\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\r\n              <Button\r\n                bg=\"#e20880\"\r\n                color=\"#fff\"\r\n                flex=\"1\"\r\n                radius=\"0px\"\r\n                padding=\"20px 10px\"\r\n                onClick={activateChannel}\r\n              >\r\n                {loading ? (\r\n                  <Oval color=\"#FFF\" height={16} width={16} />\r\n                ) : (\r\n                  <Span\r\n                    color=\"#fff\"\r\n                    weight=\"400\"\r\n                    textTransform=\"uppercase\"\r\n                    spacing=\"0.1em\"\r\n                  >\r\n                    Reactivate Channel\r\n                  </Span>\r\n                )}\r\n              </Button>\r\n            </Item>\r\n          </Content>\r\n        </Section>\r\n      </PopupSlider>\r\n    </PopupOverlay>\r\n  );\r\n}\r\n\r\nconst PopupOverlay = styled.div`\r\n  background: rgba(0, 0, 0, 0.5);\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst PopupSlider = styled.div`\r\n  height: 200px;\r\n  width: 70vw;\r\n  background: white;\r\n`;\r\n","import React, { useRef, useState } from \"react\";\r\nimport styled, { ThemeProvider, useTheme } from \"styled-components\";\r\nimport { Oval } from \"react-loader-spinner\";\r\nimport { useClickAway } from \"react-use\";\r\nimport {\r\n    Item,\r\n    H3,\r\n    Span,\r\n    Button,\r\n    H2,\r\n    Input\r\n} from \"primaries/SharedStyling\";\r\nconst ethers = require(\"ethers\");\r\n\r\nexport default function AddSubGraphIdModal({\r\n    onClose, onSuccess, addSubGraphDetails\r\n}) {\r\n\r\n    const themes = useTheme();\r\n    const modalRef = useRef(null);\r\n    const [subGraphId, setSubGraphId] = useState('');\r\n    const [pollTime, setPollTime] = useState('');\r\n    const [loading, setLoading] = useState('');\r\n\r\n    // Form signer and contract connection\r\n    useClickAway(modalRef, () => onClose(loading !== ''));\r\n\r\n    const addSubGraphDetailsSubmit = async () => {\r\n        if (pollTime == '' || subGraphId == '') {\r\n            setLoading('Fields are empty! Retry');\r\n            setTimeout(() => {\r\n                setLoading('')\r\n            }, 2000);\r\n            return;\r\n        } else if (pollTime < 60) {\r\n            setLoading('Poll Time must be at least 60 sec');\r\n            setTimeout(() => {\r\n                setLoading('')\r\n            }, 2000);\r\n            return;\r\n        }\r\n        try {\r\n            setLoading('loading');\r\n\r\n            const input = pollTime + \"+\" + subGraphId;\r\n\r\n            // Prepare Identity bytes\r\n            const identityBytes = ethers.utils.toUtf8Bytes(input);\r\n\r\n            addSubGraphDetails(identityBytes)\r\n                .then(async (tx) => {\r\n                    console.log(tx);\r\n                    setLoading(\"Transaction Sent!\");\r\n\r\n                    setTimeout(() => {\r\n                        onSuccess();\r\n                        onClose();\r\n                    }, 2000);\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    setLoading('There was an error');\r\n                    setTimeout(() => {\r\n                        setLoading('')\r\n                    }, 2000);\r\n                    onClose();\r\n                })\r\n        } catch (err) {\r\n            console.log(err)\r\n            setLoading('There was an error');\r\n            setTimeout(() => {\r\n                setLoading('')\r\n            }, 2000);\r\n            onClose();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={themes}>\r\n            <Overlay>\r\n                <AliasModal ref={modalRef} background={themes}>\r\n                    <Item align=\"flex-start\">\r\n                        <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n                            <Span weight=\"200\" color={themes.color}>Add </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">SubGraph</Span>\r\n                        </H2>\r\n                        <H3 color={themes.color}>Enter SubGraph Id and Poll Time (at least 60 sec)</H3>\r\n                    </Item>\r\n                    <Item align=\"flex-start\">\r\n                        <CustomInput\r\n                            required\r\n                            placeholder=\"Enter SubGraph Id\"\r\n                            radius=\"4px\"\r\n                            padding=\"12px\"\r\n                            border=\"1px solid #674c9f\"\r\n                            bg=\"#fff\"\r\n                            value={subGraphId}\r\n                            onChange={(e) => { setSubGraphId(e.target.value) }}\r\n                        />\r\n                    </Item>\r\n                    <Item align=\"flex-start\">\r\n                        <CustomInput\r\n                            required\r\n                            type=\"number\"\r\n                            min=\"60\"\r\n                            placeholder=\"Enter Poll Time (in seconds)\"\r\n                            radius=\"4px\"\r\n                            padding=\"12px\"\r\n                            border=\"1px solid #674c9f\"\r\n                            bg=\"#fff\"\r\n                            value={pollTime}\r\n                            onChange={(e) => { setPollTime(e.target.value) }}\r\n                        />\r\n                    </Item>\r\n                    <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                        <Button\r\n                            bg='#e20880'\r\n                            color='#fff'\r\n                            flex=\"1\"\r\n                            disabled={loading != ''}\r\n                            radius=\"0px\"\r\n                            padding=\"20px 20px\"\r\n                            onClick={addSubGraphDetailsSubmit}\r\n                        >\r\n                            {loading && <Oval\r\n                                color=\"#FFF\"\r\n                                height={16}\r\n                                width={16}\r\n                            />\r\n                            }\r\n                            <StyledInput\r\n                                cursor=\"hand\"\r\n                                textTransform=\"uppercase\"\r\n                                color=\"#fff\" weight=\"400\"\r\n                                size=\"0.8em\" spacing=\"0.2em\"\r\n                                value={loading ? loading : \"Add Subgraph Details\"}\r\n                            />\r\n                        </Button>\r\n                    </Item>\r\n                </AliasModal>\r\n            </Overlay>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nconst StyledInput = styled(Input)`\r\nwidth: 100%;\r\ntext-align: center;\r\ncaret-color: transparent;\r\n`\r\n\r\nconst CustomInput = styled(Input)`\r\nbox-sizing: border-box;\r\nwidth: 100%;\r\nmargin: 20px 0px;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\ntop: 0;\r\nleft: 0;\r\nright: 0;\r\nbackground: rgba(0,0,0,0.85);\r\nheight: 100%;\r\nwidth: 100%;\r\nz-index: 1000;\r\nposition: fixed;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\noverflow-y: scroll;\r\n`;\r\n\r\nconst AliasModal = styled.div`\r\npadding: 20px 25px;\r\nbackground: ${props => props.background.mainBg};\r\n`;\r\n","/**\r\n * This file helps us to maintain the state of the logged in user user(if they have an account)\r\n * as well as the privilidges the logged in user has\r\n */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  channelDetails: \"unfetched\",\r\n  coreChannelAdmin: null,\r\n  canVerify: false,\r\n  aliasDetails: {\r\n    aliasAddr: null,\r\n    aliasAddrFromContract: null,\r\n    aliasEthAddr: null,\r\n    isAliasVerified: null,\r\n  },\r\n  delegatees: null,\r\n  canVerify: false,\r\n};\r\n\r\nexport const contractSlice = createSlice({\r\n  name: \"admin\",\r\n  initialState,\r\n  reducers: {\r\n    setUserChannelDetails: (state, action) => {\r\n      state.channelDetails = action.payload;\r\n    },\r\n    setCoreChannelAdmin: (state, action) => {\r\n      state.coreChannelAdmin = action.payload;\r\n    },\r\n    setCanVerify: (state, action) => {\r\n      state.canVerify = action.payload;\r\n    },\r\n    setDelegatees: (state, action) => {\r\n      state.delegatees = action.payload;\r\n    },\r\n    setAliasAddress: (state, action) => {\r\n      state.aliasDetails[\"aliasAddr\"] = action.payload;\r\n    },\r\n    setAliasAddressFromContract: (state, action) => {\r\n      state.aliasDetails['aliasAddrFromContract'] = action.payload;\r\n    },\r\n    setAliasEthAddress: (state, action) => {\r\n      state.aliasDetails[\"aliasEthAddr\"] = action.payload;\r\n    },\r\n    setAliasVerified: (state, action) => {\r\n      state.aliasDetails[\"isAliasVerified\"] = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setUserChannelDetails,\r\n  setCoreChannelAdmin,\r\n  setAliasVerified,\r\n  setCanVerify,\r\n  setDelegatees,\r\n  setAliasAddress,\r\n  setAliasAddressFromContract,\r\n  setAliasEthAddress,\r\n} = contractSlice.actions;\r\n\r\nexport default contractSlice.reducer;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled, { css , useTheme } from \"styled-components\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { toast as toaster } from \"react-toastify\";\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { postReq } from \"api\";\r\n\r\nimport { envConfig } from \"@project/contracts\";\r\nimport AddDelegateModal from \"./AddDelegateModal\";\r\nimport RemoveDelegateModal from \"./RemoveDelegateModal\";\r\nimport ActivateChannelModal from \"./ActivateChannelModal\";\r\nimport AddSubGraphIdModal from \"./AddSubGraphIdModal\";\r\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport { setUserChannelDetails } from \"redux/slices/adminSlice\";\r\n\r\n\r\nimport {\r\n  AiOutlineUserAdd,\r\n  AiOutlineUserDelete,\r\n  AiTwotoneDelete,\r\n  AiOutlineDropbox\r\n} from 'react-icons/ai';\r\n\r\nimport \"react-dropdown/style.css\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nimport {Oval} from \"react-loader-spinner\";\r\nconst ethers = require(\"ethers\");\r\n\r\nconst MIN_STAKE_FEES = 50;\r\nconst ALLOWED_CORE_NETWORK = envConfig.coreContractChain;\r\n\r\n// Create Header\r\nfunction ChannelSettings({props}) {\r\n  const dispatch = useDispatch();\r\n  const { account, library, chainId } = useWeb3React();\r\n  const { epnsWriteProvider, epnsCommWriteProvider } = useSelector(\r\n    (state: any) => state.contracts\r\n  );\r\n  const { channelDetails } = useSelector((state: any) => state.admin);\r\n  const {\r\n    CHANNNEL_DEACTIVATED_STATE,\r\n    CHANNEL_BLOCKED_STATE,\r\n    CHANNEL_ACTIVE_STATE,\r\n  } = useSelector((state: any) => state.channels);\r\n\r\n  const theme = useTheme();\r\n  const { channelState } = channelDetails;\r\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [\r\n    showActivateChannelPopup,\r\n    setShowActivateChannelPopup,\r\n  ] = React.useState(false);\r\n  const [channelStakeFees, setChannelStakeFees] = React.useState(\r\n    MIN_STAKE_FEES\r\n  );\r\n  const [poolContrib, setPoolContrib] = React.useState(0);\r\n  const [addDelegateLoading, setAddDelegateLoading] = React.useState(false);\r\n  const [addModalOpen, setAddModalOpen] = React.useState(false);\r\n  const [addSubGraphIdOpen, setAddSubGraphIdOpen] = React.useState(false);\r\n  const [addSubgraphDetailsLoading, setAddSubgraphDetailsLoading] = React.useState(false);\r\n  const [removeDelegateLoading, setRemoveDelegateLoading] = React.useState(\r\n    false\r\n  );\r\n  const [removeModalOpen, setRemoveModalOpen] = React.useState(false);\r\n\r\n  // toaster customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Oval color={color} height={30} width={30} />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  );\r\n\r\n  // Toastify\r\n  let notificationToast = () =>\r\n    toaster.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />, {\r\n      position: \"bottom-right\",\r\n      autoClose: false,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n  const isChannelDeactivated = channelState === CHANNNEL_DEACTIVATED_STATE;\r\n  const isChannelBlocked = channelState === CHANNEL_BLOCKED_STATE;\r\n  const channelInactive = isChannelBlocked || isChannelDeactivated;\r\n\r\n  React.useEffect(() => {\r\n    // To set channel info from a channel details\r\n    // setChannelState(channelDetails.channelState);\r\n    setPoolContrib(\r\n      +EPNSCoreHelper.formatBigNumberToMetric(\r\n        channelDetails.poolContribution,\r\n        true\r\n      )\r\n    );\r\n  }, [account, channelDetails.poolContribution]);\r\n\r\n  const toggleChannelActivationState = () => {\r\n    if (isChannelBlocked) return;\r\n    if (isChannelDeactivated) {\r\n      setShowActivateChannelPopup(true);\r\n    } else {\r\n      deactivateChannel();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Function to activate a channel that has been deactivated\r\n   */\r\n  const activateChannel = async () => {\r\n    // First Approve DAI\r\n    setLoading(true);\r\n    var signer = library.getSigner(account);\r\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\r\n    const fees = ethers.utils.parseUnits(channelStakeFees.toString(), 18);\r\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\r\n    const tx = await sendTransactionPromise;\r\n\r\n    console.log(tx);\r\n    console.log(\"waiting for tx to finish\");\r\n\r\n    await library.waitForTransaction(tx.hash);\r\n    await epnsWriteProvider\r\n      .reactivateChannel(fees)\r\n      .then(async (tx: any) => {\r\n        console.log(tx);\r\n        console.log(\"Transaction Sent!\");\r\n\r\n        toaster.update(notificationToast(), {\r\n          render: \"Reactivating Channel\",\r\n          type: toaster.TYPE.INFO,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        await tx.wait(1);\r\n        toaster.update(notificationToast(), {\r\n          render: \"Channel Reactivated\",\r\n          type: toaster.TYPE.INFO,\r\n          autoClose: 5000,\r\n        });\r\n        dispatch(\r\n          setUserChannelDetails({\r\n            ...channelDetails,\r\n            channelState: CHANNEL_ACTIVE_STATE,\r\n          })\r\n        );\r\n      })\r\n      .catch((err: any) => {\r\n        console.log(\"!!!Error reactivateChannel() --> %o\", err);\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transacion Failed: \" + err.error?.message || err.message,\r\n          type: toaster.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n        setShowActivateChannelPopup(false);\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Function to deactivate a channel that has been deactivated\r\n   */\r\n  const deactivateChannel = async () => {\r\n    setLoading(true);\r\n    if (!poolContrib) return;\r\n\r\n    const amountToBeConverted = parseInt(\"\" + poolContrib) - 10;\r\n    console.log(\"Amount To be converted==>\", amountToBeConverted);\r\n\r\n    const { data: response } = await postReq(\"/channels/getDaiToPush\", {\r\n      value: amountToBeConverted,\r\n    });\r\n\r\n    const pushValue = response.response.data.quote.PUSH.price;\r\n\r\n    await epnsWriteProvider\r\n      // .deactivateChannel(amountsOut.toString().replace(/0+$/, \"\")) //use this to remove trailing zeros 1232323200000000 -> 12323232\r\n      .deactivateChannel(Math.floor(pushValue)) \r\n      .then(async (tx: any) => {\r\n        console.log(tx);\r\n        console.log(\"Transaction Sent!\");\r\n\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transaction sending\",\r\n          type: toaster.TYPE.INFO,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        await tx.wait(1);\r\n        console.log(\"Transaction Mined!\");\r\n        dispatch(\r\n          setUserChannelDetails({\r\n            ...channelDetails,\r\n            channelState: CHANNNEL_DEACTIVATED_STATE,\r\n          })\r\n        );\r\n      })\r\n      .catch((err: any) => {\r\n        console.log(\"!!!Error deactivateChannel() --> %o\", err);\r\n        console.log({\r\n          err,\r\n        });\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transacion Failed: \" + err.error?.message || err,\r\n          type: toaster.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n      })\r\n      .finally(() => {\r\n        // post op\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const addDelegate = async (walletAddress: string) => {\r\n    setAddDelegateLoading(true);\r\n    return epnsCommWriteProvider.addDelegate(walletAddress).finally(() => {\r\n      setAddDelegateLoading(false);\r\n    });\r\n  };\r\n\r\n  const removeDelegate = (walletAddress: string) => {\r\n    setRemoveDelegateLoading(true);\r\n    return epnsCommWriteProvider.removeDelegate(walletAddress).finally(() => {\r\n      setRemoveDelegateLoading(false);\r\n    });\r\n  };\r\n\r\n  const addSubgraphDetails = (input: any) => {\r\n    setAddSubgraphDetailsLoading(true);\r\n    return epnsWriteProvider.addSubGraph(input).finally(() => {\r\n      setAddSubgraphDetailsLoading(false);\r\n    });\r\n  };\r\n\r\n  // if (!onCoreNetwork) {\r\n  //   //temporarily deactivate the deactivate button if not on core network\r\n  //   return <></>;\r\n  //\r\n\r\n  return (\r\n    <div>\r\n      <DropdownWrapper background ={theme}>\r\n        <ActiveChannelWrapper>\r\n          {onCoreNetwork &&\r\n            <ChannelActionButton\r\n              disabled={channelInactive}\r\n              onClick={() => !channelInactive && setAddSubGraphIdOpen(true)}\r\n            >\r\n              <div>\r\n                {addSubgraphDetailsLoading ? (\r\n                  <Oval color=\"#FFF\" height={16} width={16} />\r\n                ) : (\r\n                  <div style={{display:'flex',justifyContent:'start'}}>\r\n                  <AiOutlineDropbox fontSize={20}/>\r\n                  <div style={{width:'10px'}}/>                  \r\n                  Add SubGraph Details\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </ChannelActionButton>\r\n          }\r\n\r\n          <ChannelActionButton\r\n            disabled={channelInactive}\r\n            onClick={() => !channelInactive && setAddModalOpen(true)}\r\n          >\r\n            <div>\r\n              {addDelegateLoading ? (\r\n                <Oval color=\"#FFF\" height={16} width={16} />\r\n              ) : (\r\n                <div style={{display:'flex',justifyContent:'start'}}>\r\n                  <AiOutlineUserAdd fontSize={20}/>\r\n                  <div style={{width:'10px'}}/>                  \r\n                  Add Delegate\r\n                </div>\r\n              )}\r\n            </div>\r\n          </ChannelActionButton>\r\n\r\n          <ChannelActionButton\r\n            disabled={channelInactive}\r\n            onClick={() => !channelInactive && setRemoveModalOpen(true)}\r\n          >\r\n            <div>\r\n              {removeDelegateLoading ? (\r\n                <Oval color=\"#FFF\" height={16} width={16} />\r\n              ) : (\r\n                <div style={{display:'flex',justifyContent:'start'}}>\r\n                  <AiOutlineUserDelete fontSize={20}/>\r\n                  <div style={{width:'10px'}}/>                  \r\n                  Remove Delegate\r\n                </div>\r\n              )}\r\n            </div>\r\n          </ChannelActionButton>\r\n\r\n        <ChannelActionButton\r\n          isChannelDeactivated={isChannelDeactivated}\r\n          onClick={toggleChannelActivationState}\r\n        >\r\n          <div style={{color:'red'}}>\r\n          <div style={{display:'flex',justifyContent:'start'}}>\r\n            <AiTwotoneDelete fontSize={20}/>\r\n            <div style={{width:'10px',color:'red'}}/>                  \r\n            {!onCoreNetwork ? (\r\n              \"\"\r\n              ) : loading ? (\r\n                \"Loading ...\"\r\n                ) : isChannelBlocked ? (\r\n                  \"Channel Blocked\"\r\n                  ) : isChannelDeactivated ? (\r\n                    \"Activate Channel\"\r\n                    ) : (\r\n                      \"Deactivate Channel\"\r\n                      )}\r\n            </div>\r\n          </div>\r\n        </ChannelActionButton>\r\n\r\n          \r\n        </ActiveChannelWrapper>\r\n      </DropdownWrapper>\r\n      {/* modal to display the activate channel popup */}\r\n      {showActivateChannelPopup && (\r\n        <ActivateChannelModal\r\n          onClose={() => {\r\n            if (showActivateChannelPopup) {\r\n              setShowActivateChannelPopup(false);\r\n            }\r\n          }}\r\n          activateChannel={activateChannel}\r\n          loading={loading}\r\n          setChannelStakeFees={setChannelStakeFees}\r\n          channelStakeFees={channelStakeFees}\r\n        />\r\n      )}\r\n      {/* modal to add a delegate */}\r\n      {addModalOpen && (\r\n        <AddDelegateModal\r\n          onClose={() => setAddModalOpen(false)}\r\n          onSuccess={() => {\r\n            toaster.update(notificationToast(), {\r\n              render: \"Delegate Added\",\r\n              type: toaster.TYPE.INFO,\r\n              autoClose: 5000,\r\n            });\r\n          }}\r\n          addDelegate={addDelegate}\r\n        />\r\n      )}\r\n      {/* modal to remove a delegate */}\r\n      {removeModalOpen && (\r\n        <RemoveDelegateModal\r\n          onClose={() => {\r\n            setRemoveModalOpen(false);\r\n          }}\r\n          onSuccess={() => {\r\n            toaster.update(notificationToast(), {\r\n              render: \"Delegate Removed\",\r\n              type: toaster.TYPE.INFO,\r\n              autoClose: 5000,\r\n            });\r\n          }}\r\n          removeDelegate={removeDelegate}\r\n        />\r\n      )}\r\n\r\n      {addSubGraphIdOpen && (\r\n        <AddSubGraphIdModal\r\n        onClose={(val) => setAddSubGraphIdOpen(val)}\r\n        onSuccess={() => {\r\n          toaster.update(notificationToast(), {\r\n            render: \"SubGraph Details Added\",\r\n            type: toaster.TYPE.INFO,\r\n            autoClose: 5000,\r\n          });\r\n        }}\r\n        addSubGraphDetails={addSubgraphDetails}\r\n        />\r\n      ) }\r\n    </div>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst DropdownWrapper = styled.div`\r\n  position: absolute;\r\n  right: 20px;\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  align-items: center;\r\n  width: 240px;\r\n  height: 190px;\r\n  padding: 20px 4px;\r\n  background: ${props => props.background.backgroundBG};\r\n  box-sizing: border-box;\r\n  box-shadow: 0px 4px 30px rgba(0, 0, 0, 0.1);\r\n  border: 1px solid #E5E8F7;\r\n  border-radius: 16px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ActiveChannelWrapper = styled.div`\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  display: ${(props) => (props.inactive ? \"none\" : \"flex\")};\r\n`;\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`;\r\n\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst DeactivateButton = styled.div`\r\n  text-decoration: underline;\r\n  color: ${(props) => (props.isChannelDeactivated ? \"#674C9F\" : \"#e20880\")};\r\n  text-align: center;\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ChannelActionButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  padding: 8px 15px;\r\n  border-radius: 5px;\r\n  position: relative;\r\n  background: ${props => props.theme.backgroundBG};\r\n  color: ${props => props.theme.color};\r\n  height: 23px;\r\n  font-family: 'monospace, monospace';\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 141%;\r\n  align-items: center;\r\n;\r\n  \r\n  &:hover {\r\n    opacity: ${(props) => (props.disabled ? 0.5 : 0.9)};\r\n    cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: ${(props) => (props.disabled ? 0.5 : 0.75)};\r\n    cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\r\n    pointer: hand;\r\n  }\r\n  opacity: ${(props) => (props.disabled ? 0.5 : 1)};\r\n`;\r\n\r\n// Export Default\r\nexport default ChannelSettings;","import React from \"react\";\r\nimport { useClickAway } from \"react-use\";\r\nimport styled from \"styled-components\";\r\nimport ChannelSettingsDropdown from \"./ChannelSettingsDropdown\";\r\n\r\nimport {\r\n  AiOutlineEllipsis,\r\n} from 'react-icons/ai';\r\n\r\n\r\nexport default function ChannelSettings() {\r\n  const [active, setActive] = React.useState(false);\r\n  const modalRef = React.useRef(null);\r\n  const toggleActive = () => {\r\n    setActive((a) => !a);\r\n  };\r\n\r\n  useClickAway(modalRef, () => active && setActive(false));\r\n\r\n  return (\r\n    <SettingsWrapper ref={modalRef}>\r\n      <Settings\r\n        active={active}\r\n        onClick={toggleActive}\r\n      />\r\n      {active && <ChannelSettingsDropdown />}\r\n    </SettingsWrapper>\r\n  );\r\n}\r\n\r\nconst SettingsWrapper = styled.div`\r\n  flex:1;\r\n  display:flex;\r\n  justify-content: flex-end;\r\n  position: relative;\r\n  top: 70px;\r\n  left:-50px;\r\n  @media (max-width: 600px) {\r\n    position: inherit;\r\n    width:100%;\r\n    display:flex;\r\n    justify-content:center;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nconst Settings = styled(AiOutlineEllipsis)`\r\n  position: relative;\r\n  width: 40px;\r\n  height: 36px;\r\n  border: 1px solid #DFDEE9;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: 400ms;\r\n  transform: ${(props) => (props.active ? \"rotateZ(90deg)\" : \"none\")};\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDeviceWidthCheck } from \"hooks\";\r\nimport { AiFillCopy, AiOutlineCopy } from \"react-icons/ai\";\r\nimport { Item } from \"primaries/SharedStyling\";\r\n\r\nconst DelegateInfo = ({ delegateAddress, isDelegate, maxWidth }) => {\r\n  const [addressText, setAddressText] = useState(delegateAddress);\r\n  const [isCopied, setIsCopied] = useState(false);\r\n  const isMobile = useDeviceWidthCheck(1200);\r\n\r\n  useEffect(() => {\r\n    if (!isMobile) {\r\n      setAddressText(delegateAddress);\r\n    } else {\r\n      // clip address\r\n      const clippedAddrs = `${delegateAddress.substring(\r\n        0,\r\n        5\r\n      )}.....${delegateAddress.substring(delegateAddress.length - 5)}`;\r\n      setAddressText(clippedAddrs);\r\n    }\r\n  }, [isMobile]);\r\n\r\n  return (\r\n    <>\r\n      {!isDelegate ? (\r\n        <Wallet\r\n          onMouseLeave={() => setIsCopied(false)}\r\n          minWidth={!isMobile ? \"350px\" : \"120px\"}\r\n        >\r\n          <WalletInfoContent\r\n            {...{ addressText, isCopied, setIsCopied, delegateAddress }}\r\n          />\r\n        </Wallet>\r\n      ) : (\r\n        <HoverWallet\r\n          onMouseLeave={() => setIsCopied(false)}\r\n          minWidth={!isMobile ? \"350px\" : \"120px\"}\r\n        >\r\n          <WalletInfoContent\r\n            {...{ addressText, isCopied, setIsCopied, delegateAddress }}\r\n          />\r\n        </HoverWallet>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst WalletInfoContent = ({\r\n  addressText,\r\n  isCopied,\r\n  setIsCopied,\r\n  delegateAddress,\r\n}) => {\r\n  const isMobile = useDeviceWidthCheck(1000);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <div style={{ paddingTop: 3 }}>{addressText}</div>\r\n      <ItemHere\r\n        isMobile={isMobile ? \"10px\" : \"50px\"}\r\n        onClick={() => {\r\n          navigator.clipboard.writeText(delegateAddress);\r\n          setIsCopied(true);\r\n        }}\r\n      >\r\n        {isCopied ? (\r\n          <AiFillCopy size={18} color=\"white\" style={{ paddingTop: 6 }} />\r\n        ) : (\r\n          <AiOutlineCopy size={18} color=\"white\" style={{ paddingTop: 6 }} />\r\n        )}\r\n      </ItemHere>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ItemHere = styled.div`\r\n  cursor: pointer;\r\n  margin-left: ${(props) => props.isMobile || \"\"};\r\n`;\r\n\r\nconst WalletAddressDisplay = styled.span`\r\n  flex: 3;\r\n  // margin-right: 30px;\r\n  // margin-left: 10px;\r\n  padding: 6px 25px;\r\n  max-height: 30px;\r\n  display: flex;\r\n  align-items: baseline;\r\n  justify-content: space-between;\r\n  max-width: ${(props) => props.maxWidth || \"fit-content\"};\r\n\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n  line-height: 164%;\r\n  border-radius: 13px;\r\n\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n  }\r\n  @media (max-width: 700px) {\r\n    padding: 4px 15px;\r\n  }\r\n`;\r\n\r\nconst HoverWallet = styled(WalletAddressDisplay)`\r\n  color: ${(props) => props.theme.color};\r\n\r\n  &:hover {\r\n    background: rgb(226, 8, 128);\r\n    background: linear-gradient(\r\n      107deg,\r\n      rgba(226, 8, 128, 1) 30%,\r\n      rgba(103, 76, 159, 1) 70%,\r\n      rgba(53, 197, 243, 1) 100%\r\n    );\r\n    opacity: 0.9;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`;\r\n\r\nconst Wallet = styled(WalletAddressDisplay)`\r\n  color: #fff;\r\n  background: rgb(226, 8, 128);\r\n  background: linear-gradient(\r\n    107deg,\r\n    rgba(226, 8, 128, 1) 30%,\r\n    rgba(103, 76, 159, 1) 70%,\r\n    rgba(53, 197, 243, 1) 100%\r\n  );\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`;\r\n\r\nexport default DelegateInfo;\r\n","import React, { useEffect,useState } from \"react\";\r\nimport { Item, Span, Section, Content, H2, H3, Button } from \"primaries/SharedStyling\";\r\nimport { GoTriangleDown, GoTriangleUp } from \"react-icons/go\";\r\nimport { getReq } from \"api\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport styled, { useTheme, css } from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport RemoveDelegateModal from \"./RemoveDelegateModal\";\r\nimport DelegateInfo from \"./DelegateInfo\";\r\nimport {\r\n  AiOutlineUserDelete\r\n} from 'react-icons/ai';\r\nimport { convertAddressToAddrCaip } from \"helpers/CaipHelper\";\r\nimport { useDeviceWidthCheck } from \"hooks\";\r\n\r\nconst isOwner=(account,delegate)=>{\r\n  return account.toLowerCase() !== delegate.toLowerCase() \r\n}\r\n\r\nconst ShowDelegates = () => {\r\n  const { account, chainId } = useWeb3React();\r\n  const [delegatees, setDelegatees] = React.useState([account]);\r\n  const theme = useTheme();\r\n  const [isActiveDelegateDropdown, setIsActiveDelegateDropdown] = React.useState(true);\r\n  const [removeModalOpen, setRemoveModalOpen] = React.useState(false);\r\n  const [delegateToBeRemoved, setDelegateToBeRemoved] = React.useState('');\r\n  const { epnsCommWriteProvider } = useSelector(\r\n    (state) => state.contracts\r\n  );\r\n  const isMobile = useDeviceWidthCheck(700);\r\n\r\n\r\n  const removeDelegate = (walletAddress) => {\r\n    return epnsCommWriteProvider.removeDelegate(walletAddress);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    fetchDelegatees()\r\n  },[])\r\n\r\n  const fetchDelegatees = async () => {\r\n    try {\r\n      const channelAddressinCAIP = convertAddressToAddrCaip(account, chainId);\r\n      const { data } = await getReq(`/v1/channels/${channelAddressinCAIP}/delegates`);\r\n      if (data?.delegates) {\r\n        const delegateeList = data.delegates.map((delegate) => delegate.delegate);\r\n        delegateeList.unshift(account);\r\n        setDelegatees(delegateeList);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  const removeDelegateModalOpen = (delegateAddress) => {\r\n    setDelegateToBeRemoved(delegateAddress);\r\n    setRemoveModalOpen(true);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <Section>\r\n      <Content padding=\"20px 0px\">\r\n      <Item align=\"flex-start\">\r\n          <DelegatesInfoHeader style={{color : theme.color}}>Channel Delegates </DelegatesInfoHeader>\r\n          <div style={{height:'4px'}}/>\r\n          <DelegatesInfoLabel>\r\n            Delegates that can send notifications on behalf of this channel.\r\n          </DelegatesInfoLabel>\r\n      </Item>\r\n      </Content>\r\n    </Section>\r\n      <Item\r\n        flex=\"5\"\r\n        minWidth=\"280px\"\r\n        align=\"stretch\"\r\n        margin=\"10px 0px 30px 0px\"\r\n        radius={isMobile ? \"10px\" : \"20px\"}\r\n        border=\"1px solid #D4DCEA;\"\r\n      >\r\n      {isActiveDelegateDropdown && delegatees && \r\n        <Item\r\n          flex=\"5\"\r\n          justify=\"flex-start\"\r\n          align=\"stretch\"\r\n        >\r\n          {delegatees.map((delegate,idx) => {\r\n            return (\r\n              <Item\r\n                padding={!isMobile ? \"25px\":\"12px\"}\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                key={delegate}\r\n                style={{\r\n                  borderTop: idx !== 0 ? \"1px solid rgba(169, 169, 169, 0.5)\" : \"\"\r\n                }}\r\n              >\r\n                <DelegateInfo delegateAddress={delegate} isDelegate={isOwner(account,delegate)} maxWidth={'200px'}/>\r\n                {isOwner(account,delegate) ?\r\n                  <RemoveButton\r\n                    delegateAddress={delegate}\r\n                    removeDelegateModalOpen={removeDelegateModalOpen}\r\n                  /> : \r\n                  <OwnerButton disabled={true}>\r\n                    Channel Creator\r\n                  </OwnerButton>\r\n                }\r\n              </Item>\r\n            )\r\n          })}\r\n        </Item>\r\n        }\r\n        {removeModalOpen && (\r\n          <RemoveDelegateModal\r\n            onClose={() => {\r\n              setRemoveModalOpen(false);\r\n            }}\r\n            onSuccess={() => setRemoveModalOpen(false)}\r\n            removeDelegate={removeDelegate}\r\n            address={delegateToBeRemoved}\r\n          />\r\n        )}\r\n      </Item>\r\n    </>\r\n  )\r\n}\r\n\r\nconst RemoveButton = ({ delegateAddress, removeDelegateModalOpen }) => {\r\n  const [isHovered,setIsHovered] = useState(false)\r\n  \r\n  const handleMouseOver = () => {\r\n    setIsHovered(true);\r\n  };\r\n\r\n  const handleMouseOut = () => {\r\n    setIsHovered(false);\r\n  };\r\n  return (\r\n    \r\n      <RemoveButtonUI onMouseEnter={handleMouseOver} onMouseLeave={handleMouseOut} onClick={() => removeDelegateModalOpen(delegateAddress)}>\r\n        {\r\n        isHovered ?\r\n        <div style={{display:'flex',width:'100%',alignItems: 'center',justifyContent: 'center'}}>\r\n          <AiOutlineUserDelete fontSize={15}/>\r\n          <div style={{padding:'3px'}}/>\r\n          <div>\r\n            Remove Delegate \r\n          </div>\r\n        </div>\r\n          :\r\n            <div style={{color:\"#657795\",textAlign:'right',width:'100%'}}>\r\n              Delegate\r\n            </div>\r\n        }\r\n      </RemoveButtonUI>\r\n  )\r\n}\r\n\r\nconst ChannelActionButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${(props) =>\r\n    props.disabled &&\r\n    css`\r\n      &:hover {\r\n        opacity: 1;\r\n        cursor: default;\r\n        pointer: default;\r\n      }\r\n      &:active {\r\n        opacity: 1;\r\n        cursor: default;\r\n        pointer: default;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst RemoveButtonUI = styled(ChannelActionButton)`\r\n  background: ${props => props.theme.backgroundBG};\r\n  color: ${props => props.theme.color};\r\n  height: 36px;\r\n  max-width: 164px;\r\n  flex:1; \r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 14px;\r\n  line-height: 141%;\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: right;\r\n  padding: 6px 10px 6px 9px;\r\n  gap: 5px;\r\n  \r\n  &:hover {\r\n    opacity: 0.9;\r\n    background: #E93636;\r\n    border-radius: 8px;\r\n  };\r\n    color: #fff;\r\n    cursor: pointer;\r\n  \r\n`;\r\n\r\nconst OwnerButton = styled(Button)`\r\n  all: unset;\r\n  background: transparent;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  color: #CF1C84;\r\n  cursor: auto;\r\n`;\r\n\r\nconst DelegatesInfoHeader = styled.div`\r\nfont-weight: 600;\r\nfont-size: 18px;\r\nline-height: 150%;\r\ndisplay: flex;\r\nalign-items: center;\r\ncolor: ${(props) => props.theme.color};\r\n`;\r\n\r\nconst DelegatesInfoLabel = styled.div`\r\n  font-weight: 400;\r\n  font-size: 15px;\r\n  line-height: 140%;\r\n  color: #657795;\r\n`;\r\n\r\nexport default ShowDelegates;","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { ethers } from \"ethers\";\r\nimport { envConfig } from \"@project/contracts\";\r\nimport styled, { useTheme } from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport ShowDelegates from \"./ShowDelegates\";\r\nimport { Item } from \"../primaries/SharedStyling\";\r\nimport { getReq, postReq } from \"api\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { convertAddressToAddrCaip } from \"helpers/CaipHelper\";\r\nimport { AiOutlineUser } from \"react-icons/ai\";\r\nimport { useDeviceWidthCheck } from \"hooks\";\r\nimport ChannelSettings from \"./ChannelSettings\";\r\n\r\nconst DATE_FORMAT = \"MMMM Do YYYY\";\r\n\r\nconst networkName = {\r\n  42: \"Polygon Mumbai\",\r\n  1: \"Polygon Mainnet\",\r\n};\r\n\r\nexport default function ChannelDetails() {\r\n  const { chainId } = useWeb3React();\r\n  const {\r\n    channelDetails,\r\n    canVerify,\r\n    aliasDetails: { isAliasVerified, aliasAddrFromContract },\r\n  } = useSelector((state) => state.admin);\r\n\r\n  const { CHANNEL_ACTIVE_STATE, CHANNNEL_DEACTIVATED_STATE } = useSelector(\r\n    (state) => state.channels\r\n  );\r\n  const { processingState } = useSelector((state) => state.channelCreation);\r\n  const [verifyingChannel, setVerifyingChannel] = React.useState([]);\r\n  const [creationDate, setCreationDate] = React.useState(\"\");\r\n  const { channelState } = channelDetails;\r\n  const channelIsActive = channelState === CHANNEL_ACTIVE_STATE;\r\n  const channelIsDeactivated = channelState === CHANNNEL_DEACTIVATED_STATE;\r\n\r\n  const CORE_CHAIN_ID = envConfig.coreContractChain;\r\n  const onCoreNetwork = CORE_CHAIN_ID === chainId;\r\n  const isMobile = useDeviceWidthCheck(600);\r\n\r\n  React.useEffect(() => {\r\n    if (!channelDetails || !canVerify) return;\r\n    (async function() {\r\n      let channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(\r\n        channelDetails.verifiedBy\r\n      );\r\n      setVerifyingChannel(channelJson);\r\n    })();\r\n  }, [channelDetails, canVerify]);\r\n\r\n  React.useEffect(() => {\r\n    if (!channelDetails) return;\r\n    (async function() {\r\n      const bn = channelDetails.channelStartBlock.toString();\r\n\r\n      // using ethers jsonRpcProvider instead of library bcz channels are created on only core chain, that's why block can be fetched from that only\r\n      const block = await new ethers.providers.JsonRpcProvider(\r\n        envConfig.coreRPC\r\n      ).getBlock(+bn);\r\n      const date = moment(block.timestamp * 1000); //convert from millisecs\r\n      setCreationDate(date.format(DATE_FORMAT));\r\n    })();\r\n  }, [channelDetails]);\r\n\r\n  return (\r\n    <ChannelDetailsWrapper>\r\n      <SectionTop>\r\n        <ImageSection src={channelDetails.icon}></ImageSection>\r\n\r\n        <Details>\r\n          <ChannelName>\r\n            {channelDetails.name}\r\n            {canVerify && <VerifyImage src=\"/verify.png\"></VerifyImage>}\r\n          </ChannelName>\r\n          <ChannelStatusContainer>\r\n            {/* <div style={{ width: \"8px\" }} /> */}\r\n            {(onCoreNetwork && aliasAddrFromContract && !isAliasVerified) ||\r\n            (!onCoreNetwork && !isAliasVerified) ? (\r\n              <AliasStateText>Alias Network Setup Pending</AliasStateText>\r\n            ) : (\r\n              <>\r\n                <Subscribers>\r\n                  <img\r\n                    style={{ width: \"15px\" }}\r\n                    src=\"/subcount.svg\"\r\n                    alt=\"subscount\"\r\n                  ></img>\r\n                  <SubscribersCount>\r\n                    {channelDetails.subscribers.length}\r\n                  </SubscribersCount>\r\n                </Subscribers>\r\n                <ChanneStateText active={channelIsActive}>\r\n                  {channelIsActive\r\n                    ? \"Active\"\r\n                    : channelIsDeactivated\r\n                    ? \"Deactivated\"\r\n                    : \"Blocked\"}\r\n                </ChanneStateText>\r\n              </>\r\n            )}\r\n          </ChannelStatusContainer>\r\n          <Date>{creationDate && <>Created {creationDate}</>}</Date>\r\n        </Details>\r\n      </SectionTop>\r\n\r\n      {!isMobile ? \"\" : <ChannelSettings />}\r\n\r\n      <SectionDes>{channelDetails.info}</SectionDes>\r\n\r\n      <SectionDate>\r\n        {canVerify && (\r\n          <Verified>\r\n            <span>verified by:</span>\r\n            <VerifyingIcon src={verifyingChannel.icon}></VerifyingIcon>\r\n            <VerifyingName>{verifyingChannel.name}</VerifyingName>\r\n          </Verified>\r\n        )}\r\n      </SectionDate>\r\n      {processingState === 0 && <ShowDelegates />}\r\n    </ChannelDetailsWrapper>\r\n  );\r\n}\r\n\r\nconst ChannelDetailsWrapper = styled.div`\r\n  padding: 20px 30px;\r\n  padding-bottom: 0;\r\n  @media (max-width: 600px) {\r\n    padding: 20px 10px;\r\n  }\r\n`;\r\n\r\nconst SectionTop = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n  @media (max-width: 600px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst ImageSection = styled.img`\r\n  width: 128px;\r\n  height: 128px;\r\n  margin-right: 20px;\r\n  border-radius: 32px;\r\n  @media (max-width: 600px) {\r\n    width: 70px;\r\n    height: 70px;\r\n    margin-right: 0px;\r\n    border-radius: 20px;\r\n  }\r\n`;\r\n\r\nconst ChannelStatusContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  // justify-content: center;\r\n  margin: 10px 0px;\r\n  // height: 26px;\r\n`;\r\n\r\nconst VerifyImage = styled.img`\r\n  width: 20px;\r\n  height: 25px;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst VerifyingIcon = styled.img`\r\n  height: 20px;\r\n  width: 20px;\r\n  border-radius: 50%;\r\n  margin-left: 6px;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst VerifyingName = styled.div``;\r\n\r\nconst Subscribers = styled.div`\r\n  width: 58px;\r\n  height: 26px;\r\n  background: #ffdbf0;\r\n  color: #cf1c84;\r\n  border-radius: 25px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  padding: 2px;\r\n`;\r\n\r\nconst StateText = styled.div`\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 150%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  padding: 2px 8px;\r\n  border-radius: 25px;\r\n  height: 26px;\r\n  background-color: pink;\r\n`;\r\n\r\nconst ChanneStateText = styled(StateText)`\r\n  color: #2dbd81;\r\n  color: ${(props) => (props.active ? \"#2DBD81\" : \"red\")};\r\n  background-color: #c6efd1;\r\n  margin-left: 10px;\r\n  ${(props) =>\r\n    props.active &&\r\n    `\r\n        &::before {\r\n            width:16px;\r\n            height:16px;\r\n            background: #2DBD81;\r\n            border-radius: 50%;\r\n            content: \"\";\r\n            display: inline-flex;\r\n            align-items: center;\r\n            margin-right: 6px;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst AliasStateText = styled(StateText)`\r\n  color: #e3b61c;\r\n  background-color: #e9eec4;\r\n  &::before {\r\n    width: 16px;\r\n    height: 16px;\r\n    background: #e3b61c;\r\n    border-radius: 50%;\r\n    content: \"\";\r\n    display: inline-flex;\r\n    align-items: center;\r\n    margin-right: 6px;\r\n  }\r\n`;\r\n\r\nconst SubscribersCount = styled.span`\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Details = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 600px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Date = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 340px;\r\n  color: #657795;\r\n  text-transform: none;\r\n  font-weight: 500;\r\n  font-size: 15px;\r\n  line-height: 150%;\r\n  @media (max-width: 600px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Verified = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  & > span {\r\n    color: #ec008c;\r\n    fontsize: 1em;\r\n    fontweight: bolder;\r\n  }\r\n`;\r\n\r\nconst ChannelName = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-right: 8px;\r\n  font-weight: 500;\r\n  font-size: 30px;\r\n  line-height: 141%;\r\n  color: ${(props) => props.theme.color};\r\n  @media (max-width: 600px) {\r\n    flex-direction: column;\r\n    margin-top: 10px;\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst SectionDate = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  line-height: 25px;\r\n  letter-spacing: 0.1em;\r\n  text-transform: uppercase;\r\n  margin-bottom: 18px;\r\n`;\r\n\r\nconst SectionDes = styled.div`\r\n  letter-spacing: 0.1em;\r\n  text-transform: none;\r\n  color: #657795;\r\n  margin-bottom: 40px;\r\n  font-weight: 400;\r\n  font-size: 15px;\r\n  line-height: 140%;\r\n  padding: 0px 20px;\r\n  text-align: left;\r\n  @media (max-width: 600px) {\r\n    text-align: center;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n","/**\r\n * This file helps us maintain the channel creation state\r\n */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n/*\r\nprocessingState {\r\n  0: complete\r\n  1: 1st state (processing alias state)\r\n  2: 2nd state (change network state)\r\n  3: 3rd state (verify alias state)\r\n  null: nothing\r\n}\r\n*/\r\n\r\nconst initialState = {\r\n  processingState: null,\r\n};\r\n\r\nexport const channelCreationSlice = createSlice({\r\n  name: \"channelCreation\",\r\n  initialState,\r\n  reducers: {\r\n    setProcessingState: (state, action) => {\r\n      state.processingState = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setProcessingState } = channelCreationSlice.actions;\r\n\r\nexport default channelCreationSlice.reducer;\r\n","import React from \"react\";\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport { H3, Section, Item, Span, Button } from \"../primaries/SharedStyling\";\r\nimport styled, { css, useTheme } from \"styled-components\";\r\n\r\nconst AliasSetup = () => {\r\n  const themes = useTheme();\r\n  return (\r\n    <Item\r\n      margin=\"15px 20px 15px 20px\"\r\n      flex=\"1\"\r\n      display=\"flex\"\r\n      direction=\"column\"\r\n    >\r\n      <Span\r\n        textAlign=\"center\"\r\n        margin=\"60px 0px 0px 0px\"\r\n        color={themes.color}\r\n        size=\"16px\"\r\n        textTransform=\"none\"\r\n        weight=\"500\"\r\n      >\r\n        We’re setting up your channel on the Polygon Alias Network.\r\n      </Span>{\" \"}\r\n      <Span\r\n        textAlign=\"center\"\r\n        margin=\"5px 0px 60px 0px\"\r\n        color={themes.color}\r\n        size=\"16px\"\r\n        textTransform=\"none\"\r\n        weight=\"500\"\r\n      >\r\n        This usually takes around 5 minutes.\r\n      </Span>\r\n      <Item display=\"flex\" direction=\"row\" align=\"center\" margin=\"50px 0px\">\r\n        <FadeLoader color=\"#cf1c84\" loading={true} height={13} width={4} />\r\n        <H3\r\n          margin=\"auto 15px\"\r\n          family=\"Manrope\"\r\n          textTransform=\"none\"\r\n          color={themes.color}\r\n          size=\"16px\"\r\n          weight=\"600\"\r\n        >\r\n          Processing\r\n        </H3>\r\n      </Item>\r\n    </Item>\r\n  );\r\n};\r\n\r\nexport default AliasSetup;\r\n","import { networkName, CORE_CHAIN_ID, aliasChainIdsMapping, PolygonNetworks } from \"helpers/UtilityHelper\";\r\nimport React from \"react\";\r\nimport styled, { useTheme } from \"styled-components\";\r\nimport { Item, Span, Button } from \"../primaries/SharedStyling\";\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport useToast from \"hooks/useToast\";\r\nimport { utils } from \"ethers\";\r\nimport { MdCheckCircle, MdError } from \"react-icons/md\";\r\n\r\nconst ChangeNetwork = () => {\r\n  const changeNetworkToast = useToast();\r\n  const themes = useTheme();\r\n  const { chainId, library } = useWeb3React();\r\n\r\n  const switchToPolygonNetwork = async (chainId: number, provider: any) => {\r\n    const polygonChainId = aliasChainIdsMapping[chainId];\r\n\r\n    try {\r\n      changeNetworkToast.showToast(\"Waiting for Confirmation...\");\r\n\r\n      await provider.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: utils.hexValue(polygonChainId) }],\r\n      });\r\n\r\n      changeNetworkToast.updateToast(\"Success\", `Successfully switched to ${networkName[polygonChainId]} !`, \"SUCCESS\", (size) => <MdCheckCircle size={size} color=\"green\" />)\r\n    } catch (switchError) {\r\n      changeNetworkToast.updateToast(\"Error\", `There was an error switching Chain ( ${switchError.message} )`, \"ERROR\", (size) => <MdError size={size} color=\"red\" />)\r\n\r\n      // This error code indicates that the chain has not been added to MetaMask.\r\n      if (switchError.code === 4902) {\r\n        try {\r\n          await provider.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [polygonChainId === 80001 ? PolygonNetworks.MUMBAI_TESTNET : PolygonNetworks.POLYGON_MAINNET],\r\n          });\r\n        } catch (addError) {\r\n          console.error(`Unable to add ${networkName[polygonChainId]} Network in wallet`);\r\n        }\r\n      }\r\n      // error toast - Your wallet doesn't support switch network. Kindly, switch the network to Polygon manually.\r\n      changeNetworkToast.updateToast(\"Error\", `Your wallet doesn't support switching chains. Kindly, switch the network to ${networkName[polygonChainId]} manually.( ${switchError.message} )`, \"ERROR\", (size) => <MdError size={size} color=\"red\" />)\r\n      console.error(\"Unable to switch chains\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Item\r\n      margin=\"15px 20px 15px 20px\"\r\n      flex=\"1\"\r\n      display=\"flex\"\r\n      direction=\"column\"\r\n    >\r\n      <Span\r\n        textAlign=\"center\"\r\n        margin=\"60px 0px 0px 0px\"\r\n        color={themes.color}\r\n        size=\"16px\"\r\n        textTransform=\"none\"\r\n        weight=\"500\"\r\n        line=\"24px\"\r\n      >\r\n        Change your wallet network to <TextPink>{networkName[aliasChainIdsMapping[CORE_CHAIN_ID]]}</TextPink> to\r\n        start <br></br>\r\n        verifying your Channel Alias.\r\n      </Span>\r\n\r\n      <Item\r\n        width=\"12.2em\"\r\n        self=\"stretch\"\r\n        align=\"stretch\"\r\n        margin=\"100px auto 50px auto\"\r\n      >\r\n        <Button\r\n          bg=\"#e20880\"\r\n          color=\"#fff\"\r\n          flex=\"1\"\r\n          radius=\"15px\"\r\n          padding=\"20px 20px\"\r\n          onClick={() => switchToPolygonNetwork(chainId, library.provider)}\r\n        >\r\n          <Span\r\n            color=\"#fff\"\r\n            weight=\"600\"\r\n            textTransform=\"none\"\r\n            line=\"22px\"\r\n            size=\"16px\"\r\n          >\r\n            Change Network\r\n          </Span>\r\n        </Button>\r\n      </Item>\r\n    </Item>\r\n  );\r\n};\r\n\r\nconst TextPink = styled.b`\r\n  color: #cf1c84;\r\n`;\r\n\r\nexport default ChangeNetwork;\r\n","import React, { useRef, useState } from \"react\";\r\nimport styled, { css, useTheme } from \"styled-components\";\r\nimport { H3, Section, Item, Span, Button } from \"../primaries/SharedStyling\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { useClickAway } from \"react-use\";\r\nimport { getReq, postReq } from \"../api\";\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport { convertAddressToAddrCaip } from \"helpers/CaipHelper\";\r\nimport { setProcessingState } from \"redux/slices/channelCreationSlice\";\r\nimport { BsFillCheckCircleFill } from \"react-icons/bs\";\r\n\r\nconst ethers = require(\"ethers\");\r\n\r\nconst VerifyAlias = ({ aliasEthAccount, setAliasVerified }) => {\r\n  const themes = useTheme();\r\n  const { account, library, chainId } = useWeb3React();\r\n  const signer = library.getSigner(account);\r\n  const dispatch = useDispatch();\r\n\r\n  // const modalRef = useRef(null);\r\n  const polygonCommsContract = new ethers.Contract(\r\n    addresses.epnsPolyComm,\r\n    abis.epnsComm,\r\n    signer\r\n  );\r\n  const [loading, setLoading] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n  const mainAddress = aliasEthAccount;\r\n\r\n  // Form signer and contract connection\r\n  // useClickAway(modalRef, () => onClose(loading !== \"\"));\r\n\r\n  const checkAlias = async () => {\r\n    if (mainAddress == aliasEthAccount) {\r\n      submitAlias();\r\n    }\r\n  };\r\n\r\n  const checkAliasVerification = async () => {\r\n    const userAddressInCaip = convertAddressToAddrCaip(account, chainId);\r\n    const { aliasVerified } = await getReq(\r\n      `/v1/alias/${userAddressInCaip}/channel`\r\n    ).then(({ data }) => {\r\n      if (data) {\r\n        dispatch(setAliasVerified(data.is_alias_verified));\r\n        return { aliasVerified: data[\"is_alias_verified\"] };\r\n      }\r\n      return { aliasVerified: null };\r\n    });\r\n    return { aliasVerified };\r\n  };\r\n\r\n  const submitAlias = () => {\r\n    setLoading(\"Processing\");\r\n    const anotherSendTxPromise = polygonCommsContract.verifyChannelAlias(\r\n      mainAddress\r\n    );\r\n    anotherSendTxPromise\r\n      .then(async (tx) => {\r\n        console.log(tx);\r\n        setLoading(\"Transaction Sent! It usually takes 5mins to verify.\");\r\n\r\n        await tx.wait(1);\r\n        setTimeout(() => {\r\n          setLoading(\"Transaction Mined!\");\r\n        }, 2000);\r\n\r\n        setTimeout(() => {\r\n          setLoading(\"Loading...\");\r\n        }, 2000);\r\n\r\n        const intervalId = setInterval(async () => {\r\n          const { aliasVerified } = await checkAliasVerification();\r\n          if (aliasVerified) {\r\n            setTimeout(() => {\r\n              setSuccess(true);\r\n            }, 1000);\r\n            clearInterval(intervalId);\r\n            dispatch(setProcessingState(0));\r\n          }\r\n        }, 5000);\r\n      })\r\n      .catch(() => {\r\n        setLoading(\"There was an error\");\r\n        setTimeout(() => {\r\n          setLoading(\"\");\r\n        }, 2000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Item\r\n      margin=\"15px 20px 15px 20px\"\r\n      flex=\"1\"\r\n      display=\"flex\"\r\n      direction=\"column\"\r\n    >\r\n      <Span\r\n        textAlign=\"center\"\r\n        margin=\"60px 0px 0px 0px\"\r\n        color={themes.color}\r\n        size=\"16px\"\r\n        textTransform=\"none\"\r\n        weight=\"500\"\r\n        line=\"24px\"\r\n      >\r\n        You’re almost there! Verify the Channel Alias to enable sending\r\n        <br></br>\r\n        Notifications from it.\r\n      </Span>\r\n\r\n      {loading === \"\" && (\r\n        <Span\r\n          textAlign=\"center\"\r\n          margin=\"60px 0px 0px 0px\"\r\n          color={\"#CF1C84\"}\r\n          size=\"16px\"\r\n          textTransform=\"none\"\r\n          weight=\"500\"\r\n          line=\"24px\"\r\n        >\r\n          {account}\r\n        </Span>\r\n      )}\r\n\r\n      {!success &&\r\n        (loading ? (\r\n          <Item\r\n            display=\"flex\"\r\n            direction=\"row\"\r\n            align=\"center\"\r\n            margin=\"60px 0px 0px 0px\"\r\n          >\r\n            <FadeLoader color=\"#cf1c84\" loading={true} height={13} width={4} />\r\n\r\n            <Span\r\n              color={themes.color}\r\n              weight=\"600\"\r\n              textTransform=\"none\"\r\n              line=\"22px\"\r\n              size=\"16px\"\r\n              margin=\"0px 10px\"\r\n            >\r\n              {loading}\r\n            </Span>\r\n          </Item>\r\n        ) : (\r\n          <Item\r\n            width=\"15em\"\r\n            self=\"stretch\"\r\n            align=\"stretch\"\r\n            margin=\"60px auto 0px auto\"\r\n          >\r\n            <Button\r\n              bg=\"#e20880\"\r\n              color=\"#fff\"\r\n              flex=\"1\"\r\n              radius=\"15px\"\r\n              padding=\"20px 10px\"\r\n              onClick={checkAlias}\r\n            >\r\n              <Span\r\n                color=\"#fff\"\r\n                weight=\"600\"\r\n                textTransform=\"none\"\r\n                line=\"22px\"\r\n                size=\"16px\"\r\n              >\r\n                Verify Alias Address\r\n              </Span>\r\n            </Button>\r\n          </Item>\r\n        ))}\r\n\r\n      {success && (\r\n        <Item\r\n          display=\"flex\"\r\n          direction=\"row\"\r\n          align=\"center\"\r\n          margin=\"60px 0px 0px 0px\"\r\n        >\r\n          <BsFillCheckCircleFill color=\"#30CC8B\" size={30} />\r\n          <Span\r\n            color={themes.color}\r\n            weight=\"600\"\r\n            textTransform=\"none\"\r\n            line=\"22px\"\r\n            size=\"16px\"\r\n            margin=\"0px 10px\"\r\n          >\r\n            Verification Complete\r\n          </Span>\r\n        </Item>\r\n      )}\r\n    </Item>\r\n  );\r\n};\r\n\r\nexport default VerifyAlias;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Section } from \"../primaries/SharedStyling\";\r\nimport AliasSetup from \"./AliasSetup\";\r\nimport ChangeNetwork from \"./ChangeNetwork\";\r\nimport VerifyAlias from \"./VerifyAlias\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst AliasProcessing = ({ aliasEthAccount, setAliasVerified }) => {\r\n  const { processingState } = useSelector((state) => state.channelCreation);\r\n\r\n  return (\r\n    <Section>\r\n      <ItemHere>\r\n        <Tab type={processingState >= 1 ? \"active\" : \"inactive\"}>\r\n          <div>Waiting for Setup</div>\r\n          <Step type={processingState >= 1 ? \"active\" : \"inactive\"} />\r\n        </Tab>\r\n        <Tab type={processingState >= 2 ? \"active\" : \"inactive\"}>\r\n          <div>Change Network</div>\r\n          <Step type={processingState >= 2 ? \"active\" : \"inactive\"} />\r\n        </Tab>\r\n        <Tab type={processingState >= 3 ? \"active\" : \"inactive\"}>\r\n          <div>Verify Alias Network</div>\r\n          <Step type={processingState >= 3 ? \"active\" : \"inactive\"} />\r\n        </Tab>\r\n        <Line />\r\n      </ItemHere>\r\n\r\n      {processingState === 1 && <AliasSetup />}\r\n      {processingState === 2 && <ChangeNetwork />}\r\n      {processingState === 3 && (\r\n        <VerifyAlias\r\n          aliasEthAccount={aliasEthAccount}\r\n          setAliasVerified={setAliasVerified}\r\n        />\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\n\r\nconst ItemHere = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  margin: 50px 0px 0px 0px;\r\n  @media (max-width: 600px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  @media (max-width: 1224px) {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst Step = styled.div`\r\n  height: 5px;\r\n  width: 100%;\r\n  background: #cfd7e4;\r\n  border-radius: 13px;\r\n\r\n  ${({ type }) =>\r\n    type === \"active\" &&\r\n    css`\r\n      background: #e20880;\r\n    `};\r\n`;\r\n\r\nconst Line = styled.div`\r\n  position: absolute;\r\n  height: 5px;\r\n  background: #f1f1f1;\r\n  right: 0;\r\n  left: 0;\r\n  margin: 0px 10px;\r\n  z-index: -1;\r\n`;\r\n\r\nconst Tab = styled.div`\r\n  position: relative;\r\n  width: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n  color: #657795;\r\n  div {\r\n    margin: 5px 0px;\r\n    font-family: \"Manrope\";\r\n    font-style: normal;\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    width: 100%;\r\n  }\r\n\r\n  ${({ type }) =>\r\n    type === \"active\" &&\r\n    css`\r\n      color: #e20880;\r\n    `};\r\n`;\r\n\r\nexport default AliasProcessing;\r\n","import React from \"react\";\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\n\r\nconst override: React.CSSProperties = {\r\n    // width: \"fit-content\",\r\n    height: \"45px\",\r\n};\r\n\r\nconst LoaderSpinner = () => {\r\n    return (\r\n        <FadeLoader\r\n            color=\"#CF1C84\"\r\n            height={9}\r\n            width={2.5}\r\n            margin={0}\r\n            css={override}\r\n        />\r\n    )\r\n}\r\n\r\nexport default LoaderSpinner;","import React from \"react\";\r\nimport styled,{ ThemeProvider, useTheme } from \"styled-components\";\r\nimport { Skeleton } from \"@mui/material\"\r\n\r\nimport LoaderSpinner from \"primaries/LoaderSpinner\";\r\n\r\nconst ChannelLoading = () => {\r\n    const themes = useTheme();\r\n    return (\r\n        <ThemeProvider theme={themes}>\r\n            <ChannelLoadingContainer>\r\n                <SkeletonContainerOuter>\r\n                    <SkeletonContainerUpperRow>\r\n                        <Skeleton\r\n                            variant=\"rectangular\"\r\n                            sx={{ bgcolor: '#F4F5FA' }}\r\n                            style={{\r\n                                width: \"8rem\",\r\n                                height: \"8rem\",\r\n                                borderRadius: \"32px\",\r\n                                marginRight: \"2%\"\r\n                            }} />\r\n\r\n                        <SkeletonContainerUpperCol>\r\n                            <Skeleton\r\n                                variant=\"rectangular\"\r\n                                sx={{ bgcolor: '#F4F5FA' }}\r\n                                style={{\r\n                                    width: \"40%\",\r\n                                    height: \"2.2rem\",\r\n                                    borderRadius: \"5px\",\r\n                                    marginTop: \"3%\"\r\n                                }} />\r\n                            <Skeleton\r\n                                variant=\"rectangular\"\r\n                                sx={{ bgcolor: '#F4F5FA' }}\r\n                                style={{\r\n                                    width: \"20%\",\r\n                                    height: \"1.1rem\",\r\n                                    borderRadius: \"5px\",\r\n                                    marginTop: \"2%\"\r\n                                }} />\r\n                        </SkeletonContainerUpperCol>\r\n                    </SkeletonContainerUpperRow>\r\n                    <Skeleton\r\n                        variant=\"rectangular\"\r\n                        sx={{ bgcolor: '#F4F5FA' }}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"2.7rem\",\r\n                            borderRadius: \"9px\",\r\n                            marginTop: \"4%\"\r\n                        }} />\r\n                </SkeletonContainerOuter>\r\n\r\n                <LoaderContainer>\r\n                    <LoaderSpinner />\r\n                    <LoaderText style={{\r\n                        color: themes.fontColor\r\n                    }}>\r\n                        Loading Channel Details. Please wait...\r\n                    </LoaderText>\r\n                </LoaderContainer>\r\n            </ChannelLoadingContainer>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nconst ChannelLoadingContainer = styled.div`\r\n    width:100%;\r\n    padding: 4.6rem;\r\n    height: 60vh;\r\n    border-radius: 20px;\r\n`\r\n\r\nconst SkeletonContainerOuter = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    `\r\n\r\nconst SkeletonContainerUpperRow = styled.div`\r\n    width: 100%;\r\n    height: fit-content;\r\n    display: flex;\r\n    `\r\n\r\nconst SkeletonContainerUpperCol = styled.div`\r\n    width: 80%;\r\n    height: fit-content;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst LoaderContainer = styled.div`\r\n    height: 35vh;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content: center;\r\n`\r\n\r\nconst LoaderText = styled.div`\r\n//   margin-left: 3%;\r\n  font-family: Manrope;\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n  line-height: 1.3rem;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`;\r\n\r\nexport default ChannelLoading;","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Section, Content, Item } from \"../primaries/SharedStyling\";\r\nimport ChannelSettings from \"components/ChannelSettings\";\r\nimport ChannelDetails from \"components/ChannelDetails\";\r\nimport CreateChannel from \"components/CreateChannel\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { envConfig } from \"@project/contracts\";\r\nimport { ThemeProvider, useTheme } from \"styled-components\";\r\nimport { aliasChainIdsMapping, getAliasFromChannelDetails } from \"helpers/UtilityHelper\";\r\nimport { convertChainIdToChainCaip, getCAIP } from \"helpers/CaipHelper\";\r\nimport { setAliasAddress, setAliasEthAddress, setAliasVerified, setAliasAddressFromContract } from \"redux/slices/adminSlice\";\r\nimport { setProcessingState } from \"redux/slices/channelCreationSlice\";\r\nimport AliasProcessing from \"components/AliasProcessing\"\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport { useDeviceWidthCheck } from \"hooks\";\r\nimport ChannelLoading from \"components/ChannelLoading\";\r\n\r\n// interval after which alias details api will be called, in seconds\r\nconst ALIAS_API_CALL_INTERVAL:number = 10;\r\n\r\n// interval id for calling search api\r\nlet intervalID = null;\r\n\r\n// CREATE CHANNEL OWNER DASHBOARD\r\nconst ChannelOwnerDashboard = () => {\r\n  const theme = useTheme();\r\n  const { account, chainId } = useWeb3React();\r\n  const { channelDetails, delegatees, aliasDetails: {aliasAddr, aliasEthAddr, isAliasVerified, aliasAddrFromContract} } = useSelector((state: any) => state.admin);\r\n  const { processingState } = useSelector((state: any) => state.channelCreation);\r\n\r\n  const isChannelDetails = (channelDetails && channelDetails !== 'unfetched');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [channelDetailsLoading, setChannelDetailsLoading] = useState<boolean>(true); \r\n\r\n  const CORE_CHAIN_ID: number = envConfig.coreContractChain;\r\n  const onCoreNetwork: boolean = CORE_CHAIN_ID === chainId;\r\n  const isMobile = useDeviceWidthCheck(600);\r\n\r\n  \r\n  useEffect(() => {\r\n    if (!onCoreNetwork || !channelDetails || aliasAddrFromContract || channelDetails === 'unfetched') return;\r\n\r\n    const aliasAddress: (string | null) = getAliasFromChannelDetails(channelDetails);\r\n    if (aliasAddress) {\r\n      dispatch(setAliasAddressFromContract(aliasAddress));\r\n      // dispatch(setAliasAddress(aliasAddress));\r\n    } else {\r\n      dispatch(setProcessingState(0));\r\n      // setChannelDetailsLoading(false);\r\n    }\r\n  }, [channelDetails, aliasAddrFromContract]);\r\n\r\n  const fetchChannelDetails = async (address: string) => {\r\n    let { aliasAddress=null, isAliasVerified=null } = await ChannelsDataStore.instance.getChannelDetailsFromAddress(address);\r\n    if (aliasAddress == \"NULL\") aliasAddress = null;\r\n\r\n    return { aliasAddress: aliasAddress, aliasVerified: isAliasVerified };\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (!onCoreNetwork || !aliasAddrFromContract || processingState === 0) return;\r\n\r\n    intervalID = setInterval(async () => {\r\n      const { aliasAddress, aliasVerified } = await fetchChannelDetails(account);\r\n      if (aliasAddress) {\r\n        dispatch(setAliasAddress(aliasAddress));\r\n        if (aliasVerified) {\r\n          // setChannelDetailsLoading(false);\r\n          dispatch(setAliasVerified(true));\r\n          dispatch(setProcessingState(0));\r\n        } else {\r\n          // setChannelDetailsLoading(false);\r\n          dispatch(setProcessingState(2));\r\n          dispatch(setAliasVerified(false));\r\n        }\r\n      } else {\r\n        if (processingState != 0 && processingState != 1)\r\n          dispatch(setProcessingState(1));\r\n        // setChannelDetailsLoading(false);\r\n      }\r\n    }, ALIAS_API_CALL_INTERVAL * 1000);\r\n  }, [aliasAddrFromContract]);\r\n\r\n  if (aliasAddr !== null) {\r\n    clearInterval(intervalID);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Interface>\r\n        {((channelDetails === 'unfetched') || processingState === null) &&\r\n          <ChannelLoading />\r\n        } \r\n      </Interface>\r\n        <ModifiedContent>\r\n          {/* display the create channel page if there are no details */}\r\n          {(!channelDetails && processingState === 0) ? <CreateChannel /> : \"\"}\r\n          {isChannelDetails && processingState !== null &&\r\n            (\r\n              <>\r\n                {channelDetails && !isMobile ? <ChannelSettings /> : \"\"}\r\n                {channelDetails ? <ChannelDetails /> : \"\"}\r\n              </>\r\n            )\r\n          }\r\n          \r\n          {/* processing box */}\r\n          {processingState !== 0 && processingState !== null && isChannelDetails && (\r\n            <ThemeProvider theme={theme}>\r\n              <AliasProcessing aliasEthAccount={aliasEthAddr} setAliasVerified={setAliasVerified} />\r\n            </ThemeProvider>\r\n          )}\r\n          </ModifiedContent>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst ModifiedContent = styled(Content)`\r\n  flex: 1;\r\n  padding: 0px;\r\n  position: relative;\r\n    @media (min-width: 800px) and (max-width: 1600px) {\r\n      padding: 20px 30px;\r\n   }\r\n\r\n   @media (min-width: 1601px) and (max-width: 2200px) {\r\n    padding: 20px 50px;\r\n }\r\n  @media (min-width: 2201px) and (max-width: 2900px) {\r\n    padding: 30px 220px;\r\n  }\r\n  @media (min-width: 2901px) {\r\n    padding: 30px 550px;\r\n  }\r\n\r\n  @media (min-width: 3501px) {\r\n    padding: 30px 1000px;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: block;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Interface = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n\r\n  margin-bottom: 15px;\r\n  overflow: hidden;\r\n`;\r\n\r\n  //   @media screen and (max-width: 1200px) {\r\n  //   min-width: 700px;\r\n  //  }\r\n\r\n  //  @media screen and (max-width: 1600px) {\r\n  //   min-width: 900px;\r\n  // }\r\n\r\n  // @media screen and (max-width: 2000px) {\r\n  //   min-width: 1300px;\r\n  // }\r\n\r\n  // @media screen and (max-width: 2100px) {\r\n  //    min-width: 1200px;\r\n  // }\r\n\r\nconst ChannelLoadingMessage = styled.div`\r\n  width: 100%;\r\n  padding: 40px;\r\n  font-size: 1.5em;\r\n  font-weight: 300;\r\n  text-align: center;\r\n  color: ${props => props.theme.color};\r\n`;\r\n\r\n// Export Default\r\nexport default ChannelOwnerDashboard;\r\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\n\r\n// STATIC SINGLETON\r\nexport const UserEvents = {\r\n    SUBSCRIBED: \"Subscribed\",\r\n    UNSUBSCRIBED: \"Unsubscribed\",\r\n    PUBLIC_KEY_BROADCASTED: \"PublicKeyBroadcasted\",\r\n    CREATED_CHANNEL: \"CreatedChannel\",\r\n    DEACTIVATE_CHANNEL: \"DeactivateChannel\",\r\n}\r\n\r\nexport default class UsersDataStore {\r\n    static instance = UsersDataStore.instance || new UsersDataStore();\r\n\r\n    state = {\r\n      usersCount: -1,\r\n      userMeta: null,\r\n      ownerMeta: null,\r\n\r\n      callbacks: [],\r\n\r\n      account: null,\r\n      epnsReadProvider: null,\r\n      epnsCommReadProvider: null\r\n    }\r\n\r\n    // init\r\n    init = (account, epnsReadProvider, epnsCommReadProvider) => {\r\n      // set account\r\n      this.state.account = account;\r\n\r\n      // First attach listeners then overwrite the old one if any\r\n      this.resetUsersListeners();\r\n      this.state.epnsReadProvider = epnsReadProvider;\r\n      this.state.epnsCommReadProvider = epnsCommReadProvider;\r\n      this.initUsersListenersAsync();\r\n\r\n      // next get store user count & user meta\r\n      this.getOwnerMetaAsync();\r\n      this.getUsersCountAsync();\r\n      this.getUserMetaAsync();\r\n    }\r\n\r\n    // RESET LISTENERS\r\n    resetUsersListeners = () => {\r\n      // only proceed if a read provider is attached\r\n      if (this.state.epnsReadProvider) {\r\n        this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\r\n        this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\r\n        this.state.epnsCommReadProvider.removeAllListeners(\"PublicKeyRegistered\");\r\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\r\n        this.state.epnsReadProvider.removeAllListeners(\"DeactivateChannel\");\r\n      }\r\n\r\n      // reset user meta as well\r\n      this.state.userMeta = null;\r\n    }\r\n\r\n    // init LISTENERS\r\n    initUsersListenersAsync = async () => {\r\n      // Add Listeners\r\n      await this.listenForSubscribedAsync();\r\n      await this.listenForUnsubscribedAsync();\r\n\r\n      if (!this.state.userMeta || (this.state.userMeta && !this.state.userMeta.publicKeyRegistered)) {\r\n        await this.listenForPublicKeyBroadcastAsync();\r\n      }\r\n    }\r\n\r\n    // 1. Listen for Subscribe Async\r\n    listenForSubscribedAsync = async () => {\r\n      // TODO use the right contract comms\r\n      // const contract = this.state.epnsReadProvider;\r\n      // let filter = contract.filters.Subscribe(null, this.state.account);\r\n\r\n      // if (this.state.userMeta) {\r\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.add(1);\r\n      // }\r\n\r\n      // contract.on(filter, async (channel, user) => {\r\n      //   // then perform callbacks\r\n      //   if (this.state.callbacks[UserEvents.SUBSCRIBED]) {\r\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.SUBSCRIBED])) {\r\n      //       if (callback) { callback(channel, user); }\r\n      //     }\r\n      //   }\r\n      // });\r\n    }\r\n\r\n    // 2. Listen for Unsubscribe Async\r\n    listenForUnsubscribedAsync = async () => {\r\n      // TODO Use the COMMUNICATOR CONTRACT\r\n      // const contract = this.state.epnsReadProvider;\r\n      // let filter = contract.filters.Unsubscribe(null, this.state.account);\r\n\r\n      // if (this.state.userMeta) {\r\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.sub(1);\r\n      // }\r\n\r\n      // contract.on(filter, async (channel, user) => {\r\n      //   // then perform callbacks\r\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\r\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\r\n      //       if (callback) { callback(channel, user); }\r\n      //     }\r\n      //   }\r\n      // });\r\n    }\r\n\r\n    // 3. Listen For Public Key Broadcast\r\n    listenForPublicKeyBroadcastAsync = async () => {\r\n        // TODO Use the COMMUNICATOR CONTRACT\r\n      // const contract = this.state.epnsReadProvider;\r\n      // let filter = contract.filters.PublicKeyRegistered(this.state.account, null);\r\n\r\n      // if (this.state.userMeta) {\r\n      //   this.state.userMeta.publicKeyRegistered = true;\r\n      // }\r\n\r\n      // contract.once(filter, async (channel, user) => {\r\n      //   // then perform callbacks\r\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\r\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\r\n      //       if (callback) { callback(channel, user); }\r\n      //     }\r\n      //   }\r\n      // });\r\n    }\r\n\r\n    // FOR CALLBACKS\r\n    addCallbacks = (callbackType, callbackID, callback) => {\r\n      // first check if callback already exists\r\n      if (!this.state.callbacks[callbackType]) {\r\n        this.state.callbacks[callbackType] = {};\r\n      }\r\n\r\n      if (!this.state.callbacks[callbackType][callbackID]) {\r\n        this.state.callbacks[callbackType][callbackID] = callback;\r\n      }\r\n    }\r\n\r\n    removeCallbacks = (callbackType, callbackID) => {\r\n      // first check if callback already exists\r\n      if (this.state.callbacks[callbackType][callbackID]) {\r\n        this.state.callbacks[callbackType][callbackID] = null;\r\n      }\r\n    }\r\n\r\n    // GET OWNER META\r\n    getOwnerMetaAsync = async () => {\r\n      const enableLogs = 0;\r\n\r\n      return new Promise ((resolve, reject) => {\r\n        if (this.state.ownerMeta) {\r\n          if (enableLogs) console.log(\"getOwnerMetaAsync() [CACHED] --> %o\", this.state.ownerMeta);\r\n          resolve(this.state.ownerMeta);\r\n        }\r\n        else {\r\n          EPNSCoreHelper.getOwnerInfo(this.state.epnsReadProvider)\r\n            .then(response => {\r\n              this.state.ownerMeta = response;\r\n\r\n              if (enableLogs) console.log(\"getOwnerMetaAsync() --> %o\", response);\r\n              resolve(this.state.ownerMeta);\r\n            })\r\n            .catch(err => {\r\n              console.log(\"!!!Error, getOwnerMetaAsync() --> %o\", err);\r\n              reject(err);\r\n            });\r\n        }\r\n      });\r\n    }\r\n\r\n    // USERS COUNT\r\n    getUsersCountAsync = async () => {\r\n      return new Promise (async (resolve, reject) => {\r\n        if (this.state.channelsCount == -1) {\r\n          // Count not set, get and set it first\r\n          const count = EPNSCoreHelper.getTotalNumberOfUsers(this.state.epnsReadProvider)\r\n            .then(response => {\r\n              this.state.usersCount = response;\r\n              console.log(\"getUsersCountAsync() --> %o\", response);\r\n              resolve(this.state.usersCount)\r\n            })\r\n            .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\r\n        }\r\n        else {\r\n          resolve(this.state.usersCount);\r\n        }\r\n      });\r\n    }\r\n\r\n    incrementUsersCountAsync = async (incrementCount) => {\r\n      return new Promise ((resolve, reject) => {\r\n        this.getUsersCountAsync()\r\n          .then(response => {\r\n            this.state.usersCount = response + incrementCount;\r\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.usersCount);\r\n            resolve(this.state.usersCount);\r\n          })\r\n          .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\r\n      });\r\n    }\r\n\r\n    // GET USER META\r\n    getUserMetaAsync = async () => {\r\n      const enableLogs = 0;\r\n\r\n      return new Promise ((resolve, reject) => {\r\n        if (this.state.userMeta) {\r\n          if (enableLogs) console.log(\"getUserMetaAsync() [CACHED] --> %o\", this.state.userMeta);\r\n          resolve(this.state.userMeta);\r\n        }\r\n        else {\r\n          EPNSCoreHelper.getUserInfo(this.state.account, this.state.epnsCommReadProvider)\r\n            .then(response => {\r\n              this.state.userMeta = response;\r\n\r\n              if (enableLogs) console.log(\"getUserMetaAsync() --> %o\", this.state.userMeta);\r\n              resolve(this.state.userMeta);\r\n            })\r\n            .catch(err => {\r\n              console.log(\"!!!Error, getUserMetaAsync() --> %o\", err);\r\n              reject(err);\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n}\r\n","/**\r\n * This file helps us maintain a global state of all contracts to be used across the application\r\n * This is used to prevent duplication of logic and instantiating contracts multiple times\r\n * This is also used to prevent passing props everywhere and making the code ugly\r\n */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  ZERO_ADDRESS: \"0x0000000000000000000000000000000000000000\",\r\n  epnsReadProvider: null, // the core contract reader\r\n  epnsWriteProvider: null, // the core contract with signer\r\n  epnsCommReadProvider: null, // the communicator contract reader\r\n  epnsCommWriteProvider: null, // the communicator write contract with signer\r\n  pushAdminAddress: null, // the address of the push admin\r\n};\r\n\r\nexport const contractSlice = createSlice({\r\n  name: \"contracts\",\r\n  initialState,\r\n  reducers: {\r\n    setCoreReadProvider: (state, action) => {\r\n      state.epnsReadProvider = action.payload;\r\n    },\r\n    setCoreWriteProvider: (state, action) => {\r\n      state.epnsWriteProvider = action.payload;\r\n    },\r\n    setCommunicatorReadProvider: (state, action) => {\r\n      state.epnsCommReadProvider = action.payload;\r\n    },\r\n    setCommunicatorWriteProvider: (state, action) => {\r\n      state.epnsCommWriteProvider = action.payload;\r\n    },\r\n    setPushAdmin: (state, action) => {\r\n      state.pushAdminAddress = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n  setCoreReadProvider,\r\n  setCoreWriteProvider,\r\n  setCommunicatorReadProvider,\r\n  setCommunicatorWriteProvider,\r\n  setPushAdmin\r\n} = contractSlice.actions;\r\n\r\nexport default contractSlice.reducer;\r\n","import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport { ethers } from \"ethers\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport hex2ascii from \"hex2ascii\";\r\nimport { addresses, abis , envConfig } from \"@project/contracts\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport NotificationToast from \"../primaries/NotificationToast\";\r\nimport AliasVerificationodal from \"components/AliasVerificationModal\";\r\nimport Info from \"segments/Info\";\r\nimport Feedbox from \"segments/Feedbox\";\r\nimport ViewChannels from \"segments/ViewChannels\";\r\nimport ChannelOwnerDashboard from \"segments/ChannelOwnerDashboard\";\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport UsersDataStore from \"singletons/UsersDataStore\";\r\nimport { getReq } from \"api\";\r\nimport {\r\n  setCoreReadProvider,\r\n  setCoreWriteProvider,\r\n  setCommunicatorReadProvider,\r\n  setCommunicatorWriteProvider,\r\n  setPushAdmin,\r\n} from \"redux/slices/contractSlice\";\r\nimport {\r\n  setUserChannelDetails,\r\n  setCanVerify,\r\n  setDelegatees,\r\n} from \"redux/slices/adminSlice\";\r\nimport { addNewNotification } from \"redux/slices/notificationSlice\";\r\n\r\nimport GLOBALS from \"config/Globals\";\r\nimport { convertAddressToAddrCaip } from \"helpers/CaipHelper\";\r\n\r\nexport const ALLOWED_CORE_NETWORK = envConfig.coreContractChain; //chainId of network which we have deployed the core contract on\r\nconst CHANNEL_TAB = 1; //Default to 1 which is the channel tab\r\n\r\n// Create Header\r\nfunction InboxPage({ loadTeaser, playTeaser }) {\r\n  ReactGA.pageview(\"/channels\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { account, library, chainId } = useWeb3React();\r\n  const {\r\n    epnsReadProvider,\r\n    epnsWriteProvider,\r\n    epnsCommReadProvider,\r\n  } = useSelector((state) => state.contracts);\r\n\r\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\r\n  const INITIAL_OPEN_TAB = CHANNEL_TAB; //if they are not on a core network.redirect then to the notifications page\r\n\r\n  const [controlAt, setControlAt] = React.useState(1);\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\r\n  const [aliasVerified, setAliasVerified] = React.useState(null); // null means error, false means unverified and true means verified\r\n\r\n  // toast related section\r\n  const [toast, showToast] = React.useState(null);\r\n  const clearToast = () => showToast(null);\r\n\r\n  //clear toast variable after it is shown\r\n  React.useEffect(() => {\r\n    if (toast) {\r\n      clearToast();\r\n    }\r\n  }, [toast]);\r\n  // toast related section\r\n\r\n\r\n\r\n  // Render\r\n  return (\r\n    <>\r\n    <Container>\r\n      <Interface>\r\n        {controlAt == 0 && <Feedbox />}\r\n        {controlAt == 1 && <ViewChannels loadTeaser={loadTeaser} playTeaser={playTeaser} />}\r\n        {controlAt == 2 && adminStatusLoaded && <ChannelOwnerDashboard />}\r\n        {controlAt == 3 && <Info />}\r\n        {toast && (\r\n          <NotificationToast notification={toast} clearToast={clearToast} />\r\n        )}\r\n        {modalOpen && (\r\n          <AliasVerificationodal\r\n            onClose={() => setModalOpen(false)}\r\n            onSuccess={() => setAliasVerified(true)}\r\n            verificationStatus={aliasVerified}\r\n          />\r\n        )}\r\n      </Interface>\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n// css style \r\nconst Container = styled.div`\r\n  display: flex;\r\n  background: ${props => props.theme.mainBg};\r\n  height: calc(100vh - ${GLOBALS.CONSTANTS.HEADER_HEIGHT}px - 52px - ${props => props.theme.interfaceTopPadding});\r\n  align-self: stretch;\r\n`;\r\n\r\nconst Interface = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n\r\n  overflow: hidden;\r\n`;\r\n\r\n// Export Default\r\nexport default InboxPage;\r\n","import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addresses, abis, envConfig } from \"@project/contracts\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport NotificationToast from \"primaries/NotificationToast\";\r\nimport ChannelOwnerDashboard from \"segments/ChannelOwnerDashboard\";\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport { getReq } from \"api\";\r\nimport { setPushAdmin } from \"redux/slices/contractSlice\";\r\nimport {\r\n  setUserChannelDetails,\r\n  setCanVerify,\r\n  setDelegatees,\r\n  setAliasAddress,\r\n} from \"redux/slices/adminSlice\";\r\nimport { convertAddressToAddrCaip } from \"helpers/CaipHelper\";\r\nimport { setAliasEthAddress, setAliasVerified } from \"redux/slices/adminSlice\";\r\nimport { setProcessingState } from \"redux/slices/channelCreationSlice\";\r\nimport { addNewNotification } from \"redux/slices/notificationSlice\";\r\nimport ChannelLoading from \"components/ChannelLoading\";\r\n\r\nexport const ALLOWED_CORE_NETWORK = envConfig.coreContractChain; //chainId of network which we have deployed the core contract on\r\n\r\n// Create Header\r\nfunction ChannelDashboardPage() {\r\n  ReactGA.pageview(\"/channel_dashboard\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { account, chainId } = useWeb3React();\r\n  const {\r\n    epnsReadProvider,\r\n    epnsWriteProvider,\r\n    epnsCommReadProvider,\r\n  } = useSelector((state) => state.contracts);\r\n  const {\r\n    aliasDetails: { aliasEthAddr },\r\n  } = useSelector((state) => state.admin);\r\n\r\n  const { delegatees, channelDetails } = useSelector((state) => state.admin);\r\n\r\n  const CORE_CHAIN_ID = envConfig.coreContractChain;\r\n  const onCoreNetwork = CORE_CHAIN_ID === chainId;\r\n\r\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(true);\r\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\r\n\r\n  // toast related section\r\n  const [toast, showToast] = React.useState(null);\r\n  const clearToast = () => showToast(null);\r\n\r\n  //clear toast variable after it is shown\r\n  React.useEffect(() => {\r\n    if (toast) {\r\n      clearToast();\r\n    }\r\n  }, [toast]);\r\n  // toast related section\r\n\r\n  /**\r\n\r\n   * When we instantiate the contract instances, fetch basic information about the user\r\n   * Corresponding channel owned.\r\n   */\r\n  // React.useEffect(async () => {\r\n  //   if (!epnsReadProvider || !epnsCommReadProvider || !epnsWriteProvider || channelDetails !== 'unfetched')\r\n  //     return;\r\n  //   // Reset when account refreshes\r\n  //   // dispatch(setUserChannelDetails('unfetched'));\r\n  //   setAdminStatusLoaded(false);\r\n\r\n  //   // EPNS Read Provider Set\r\n  //   if (epnsReadProvider != null && epnsCommReadProvider != null) {\r\n  //     if (!onCoreNetwork) await checkUserForEthAlias();\r\n  //     else await checkUserForAlias();\r\n\r\n  //     await checkUserForChannelOwnership();\r\n\r\n  //     if (delegatees === null)\r\n  //       fetchDelegators();\r\n  //   }\r\n  // }, [epnsReadProvider, epnsCommReadProvider, epnsWriteProvider, aliasEthAddr]);\r\n\r\n  // // fetch all the channels who have delegated to this account\r\n  // const fetchDelegators = () => {\r\n  //   const channelAddressInCaip = convertAddressToAddrCaip(account, chainId);\r\n  //   getReq(`/channels/_getUserDelegations/${channelAddressInCaip}`)\r\n  //     .then(async ({ data: delegators }) => {\r\n  //       // if there are actual delegators\r\n  //       // fetch basic information abouot the channels and store it to state\r\n  //       if (delegators && delegators.channelOwners) {\r\n  //         const channelInformationPromise = [\r\n  //           ...new Set([account, ...delegators.channelOwners]), //make the accounts unique\r\n  //         ].map((channelAddress) => {\r\n  //           return ChannelsDataStore.instance\r\n  //             .getChannelJsonAsync(channelAddress)\r\n  //             .then((res) => ({ ...res, address: channelAddress }))\r\n  //             .catch(() => false);\r\n  //         });\r\n  //         const channelInformation = await Promise.all(\r\n  //           channelInformationPromise\r\n  //         );\r\n  //         dispatch(setDelegatees(channelInformation.filter(Boolean)));\r\n  //         // fetch the json information about this delegatee channel and add to global state\r\n  //       } else {\r\n  //         dispatch(setDelegatees([]));\r\n  //       }\r\n  //     })\r\n  //     .catch(async (err) => {\r\n  //       console.log({ err });\r\n  //     });\r\n  // };\r\n\r\n  // // Check if a user is a channel or not\r\n  // const checkUserForChannelOwnership = async () => {\r\n  //   if (channelDetails != 'unfetched') return;\r\n  //   if (!onCoreNetwork && aliasEthAddr == null) {\r\n  //     setChannelAdmin(false);\r\n  //     setAdminStatusLoaded(true);\r\n  //     return;\r\n  //   }\r\n  //   // Check if account is admin or not and handle accordingly\r\n  //   const ownerAccount = !onCoreNetwork ? aliasEthAddr : account;\r\n  //   EPNSCoreHelper.getChannelJsonFromUserAddress(ownerAccount, epnsReadProvider)\r\n  //     .then(async (response) => {\r\n  //       // if channel admin, then get if the channel is verified or not, then also fetch more details about the channel\r\n  //       const verificationStatus = await epnsWriteProvider.getChannelVerfication(\r\n  //         ownerAccount\r\n  //       );\r\n  //       const channelJson = await epnsWriteProvider.channels(ownerAccount);\r\n  //       const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\r\n  //         account\r\n  //       );\r\n  //       dispatch(\r\n  //         setUserChannelDetails({\r\n  //           ...response,\r\n  //           ...channelJson,\r\n  //           subscribers: channelSubscribers,\r\n  //         })\r\n  //       );\r\n  //       dispatch(setCanVerify(Boolean(verificationStatus)));\r\n  //       setAdminStatusLoaded(true);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\r\n  //         \"There was an error [checkUserForChannelOwnership]:\",\r\n  //         err.message\r\n  //       );\r\n  //       setAdminStatusLoaded(true);\r\n  //     })\r\n  //     .finally(() => {\r\n  //       setAdminStatusLoaded(true);\r\n  //     });\r\n  // };\r\n\r\n  // const checkUserForEthAlias = async () => {\r\n  //   const userAddressInCaip = convertAddressToAddrCaip(account, chainId);\r\n  //   await getReq(`/v1/alias/${userAddressInCaip}/channel`).then(({ data }) => {\r\n  //     if (data) {\r\n  //       dispatch(setAliasEthAddress(data.channel));\r\n  //       dispatch(setAliasVerified(data.is_alias_verified));\r\n  //       dispatch(setProcessingState(0));\r\n  //     }\r\n  //     return data;\r\n  //   });\r\n  // };\r\n\r\n  // const checkUserForAlias = async () => {\r\n  //   let { aliasAddress, isAliasVerified } = await ChannelsDataStore.instance.getChannelDetailsFromAddress(account);\r\n  //   if (aliasAddress == \"NULL\") aliasAddress = null;\r\n\r\n  //   if (aliasAddress)\r\n  //     dispatch(setAliasAddress(aliasAddress));\r\n  //   dispatch(setAliasVerified(isAliasVerified));\r\n  //   dispatch(setProcessingState(0));\r\n  // }\r\n\r\n  // Render\r\n  return (\r\n    <Container>\r\n      <Interface>\r\n        {adminStatusLoaded ? <ChannelOwnerDashboard /> : <ChannelLoading />}\r\n        {toast && (\r\n          <NotificationToast notification={toast} clearToast={clearToast} />\r\n        )}\r\n      </Interface>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css style\r\nconst ChannelLoadingMessage = styled.div`\r\n  width: 100%;\r\n  /* background-color: red; */\r\n  padding: 40px;\r\n  font-size: 1.5em;\r\n  font-weight: 300;\r\n  text-align: center;\r\n  color: ${(props) => props.theme.color};\r\n`;\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: block;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Interface = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n\r\n  margin-bottom: 15px;\r\n  overflow: hidden;\r\n`;\r\n\r\n// Export Default\r\nexport default ChannelDashboardPage;\r\n","import React from 'react'\r\n\r\nexport const CloseIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.243\" height=\"10.243\" viewBox=\"0 0 16.243 16.243\">\r\n        <g id=\"Group_4723\" data-name=\"Group 4723\" transform=\"translate(2.121 2.121)\">\r\n            <g id=\"Group_4716\" data-name=\"Group 4716\" transform=\"translate(0)\">\r\n            <line id=\"Line_1079\" data-name=\"Line 1079\" x2=\"16.97\" transform=\"translate(0 12) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\r\n            <line id=\"Line_1080\" data-name=\"Line 1080\" y2=\"16.97\" transform=\"translate(0 0) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n","import React from \"react\";\r\nimport styled, { ThemeProvider, useTheme } from \"styled-components\";\r\nimport { Item, Span, H2 } from \"../primaries/SharedStyling\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { NotificationItem } from \"@epnsproject/sdk-uiweb\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst blockchainName = {\r\n  1: \"ETH_MAINNET\",\r\n  137: \"POLYGON_MAINNET\",\r\n  42: \"ETH_TEST_KOVAN\",\r\n  80001: \"POLYGON_TEST_MUMBAI\",\r\n};\r\n\r\nexport default function PreviewNotif({ details }) {\r\n  const { delegatees, channelDetails } = useSelector((state) => state.admin);\r\n  const { chainId } = useWeb3React();\r\n\r\n  let channelDetail;\r\n  channelDetail = delegatees.filter(\r\n    (delegateeInfo) => delegateeInfo.address == details.channelAddress\r\n  )[0];\r\n  if (!channelDetail) channelDetail = channelDetails;\r\n\r\n  const themes = useTheme();\r\n  const NotifItem = ({ test }) => {\r\n    return (\r\n      channelDetail && (\r\n        <NotificationItem\r\n          notificationTitle={test?.asub}\r\n          notificationBody={test?.amsg}\r\n          cta={test?.acta}\r\n          app={channelDetail.name}\r\n          icon={channelDetail.icon}\r\n          image={test?.aimg}\r\n          chainName={blockchainName[chainId]}\r\n          theme={themes.scheme}\r\n        />\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <PreviewSpace>\r\n        <Item align=\"flex-start\" margin=\"30px 0px 10px 0px\">\r\n          <Span\r\n            weight=\"700\"\r\n            size=\"12px\"\r\n            spacing=\"0.2em\"\r\n            color=\"#575D73\"\r\n            // style={{ color: themes.color }}\r\n          >\r\n            PREVIEW NOTIFICATION\r\n          </Span>\r\n        </Item>\r\n        <NotifItem test={details} />\r\n      </PreviewSpace>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nconst Overlay = styled.div`\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: ${(props) => props.theme.scrollBg};\r\n  height: 100%;\r\n  width: 100%;\r\n  z-index: 1000;\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst PreviewSpace = styled.div`\r\n  margin: 20px 20px;\r\n  width: 100%;\r\n  background: ${(props) => props.theme.backgroundBG};\r\n`;\r\n","import React,{useEffect} from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport { FiLink } from \"react-icons/fi\";\r\nimport {Oval} from \"react-loader-spinner\";\r\nimport styled , {useTheme} from \"styled-components\";\r\nimport { BsFillImageFill } from \"react-icons/bs\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { postReq } from \"api\";\r\nimport {\r\nSection,\r\nContent,\r\nItem,\r\nItemH,\r\nH2,\r\nH3,\r\nSpan,\r\nButton,\r\nFormSubmision,\r\nInput,\r\nTextField,\r\n} from \"primaries/SharedStyling\";\r\n\r\nimport \"react-dropdown/style.css\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { CloseIcon } from \"assets/icons\";\r\nimport PreviewNotif from \"./PreviewNotif\";\r\nimport CryptoHelper from \"helpers/CryptoHelper\";\r\nimport { envConfig } from \"@project/contracts\";\r\nimport { IPFSupload } from \"helpers/IpfsHelper\";\r\n\r\nconst ethers = require(\"ethers\");\r\n\r\nconst CORE_CHAIN_ID = envConfig.coreContractChain;\r\n\r\nexport const IOSSwitch = styled(Switch).attrs(() => ({\r\n  classes: {\r\n    root: \"root\",\r\n    switchBase: \"switchBase\",\r\n    thumb: \"thumb\",\r\n    track: \"track\",\r\n    checked: \"checked\",\r\n    focusVisible: \"focusVisible\"\r\n  },\r\n  disableRipple: true,\r\n  focusVisibleClassName: \"focusVisible\"\r\n}))`\r\n  &.root {\r\n    width: 42px;\r\n    height: 20px;\r\n    padding: 0px;\r\n  }\r\n\r\n  .switchBase {\r\n    padding: 0px;\r\n    margin: 4px;\r\n    transition-duration: 300ms;\r\n\r\n    &.checked {\r\n      transform: translateX(22px);\r\n      color: white;\r\n      & + .track {\r\n        background-color: #cf1c84;\r\n        opacity: 1;\r\n        border: none;\r\n      }\r\n    }\r\n\r\n    &.focusVisible &.thumb {\r\n      color: #52d869;\r\n    }\r\n  }\r\n\r\n  .thumb {\r\n    box-sizing: border-box;\r\n    width: 12px;\r\n    height: 12px;\r\n  }\r\n\r\n  & .track {\r\n    border-radius: 13px;\r\n    background-color: #a0a3b1;\r\n    opacity: 1;\r\n    transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1),\r\n      border 300ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n\r\n  .checked {\r\n  }\r\n  .focusVisible {\r\n  }\r\n`;\r\n\r\n\r\n// Set Notification Form Type | 0 is reserved for protocol storage\r\nconst NFTypes = [\r\n{ value: \"1\", label: \"Broadcast (IPFS Payload)\" },\r\n// { value: \"2\", label: \"Old Secret (IPFS Payload)\" },\r\n{ value: \"3\", label: \"Targeted (IPFS Payload)\" },\r\n{ value: \"4\", label: \"Subset (IPFS Payload)\" },\r\n//   { value: \"5\", label: \"Secret (IPFS Payload)\" },\r\n// { value: \"6\", label: \"Offchain (Push)\" },\r\n];\r\nconst LIMITER_KEYS = [\"Enter\", \",\"];\r\n\r\n// Create Header\r\nfunction SendNotifications() {\r\nconst theme = useTheme();\r\nconst { account, library, chainId } = useWeb3React();\r\nconst { epnsCommWriteProvider, epnsCommReadProvider } = useSelector(\r\n  (state: any) => state.contracts\r\n);\r\nconst { channelDetails, delegatees } = useSelector(\r\n  (state: any) => state.admin\r\n);\r\nconst { CHANNNEL_DEACTIVATED_STATE } = useSelector(\r\n  (state: any) => state.channels\r\n);\r\nconst { canSend } = useSelector(\r\n    (state:any) => {\r\n    return state.canSend\r\n    }\r\n);\r\nconst onCoreNetwork = CORE_CHAIN_ID === chainId;\r\n  \r\nconst [nfProcessing, setNFProcessing] = React.useState(0);\r\nconst [channelAddress, setChannelAddress] = React.useState(\"\");\r\nconst [nfRecipient, setNFRecipient] = React.useState(\"\");\r\nconst [multipleRecipients, setMultipleRecipients] = React.useState([]);\r\nconst [tempRecipeint, setTempRecipient] = React.useState(\"\"); // to temporarily hold the address of one recipient who would be entered into the recipeints array above.\r\nconst [nfType, setNFType] = React.useState(\"1\");\r\nconst [nfSub, setNFSub] = React.useState(\"\");\r\nconst [nfSubEnabled, setNFSubEnabled] = React.useState(false);\r\nconst [nfMsg, setNFMsg] = React.useState(\"\");\r\nconst [nfCTA, setNFCTA] = React.useState(\"\");\r\nconst [nfCTAEnabled, setNFCTAEnabled] = React.useState(false);\r\nconst [nfMedia, setNFMedia] = React.useState(\"\");\r\nconst [nfMediaEnabled, setNFMediaEnabled] = React.useState(false);\r\nconst [nfInfo, setNFInfo] = React.useState(\"\");\r\nconst [delegateeOptions, setDelegateeOptions] = React.useState([]);\r\n\r\nuseEffect(() => {\r\n    if (canSend !== 1) {\r\n        const url = window.location.origin;\r\n        window.location.replace(`${url}/#/channels`);\r\n    }\r\n});\r\n\r\nconst isChannelDeactivated = channelDetails\r\n    ? channelDetails.channelState === CHANNNEL_DEACTIVATED_STATE\r\n      : false;\r\n  // console.log(delegatees);\r\n  let cannotDisplayDelegatees;\r\n  if (onCoreNetwork && delegatees)\r\n      cannotDisplayDelegatees = (delegatees.length === 1 && delegatees[0].address === account) ||\r\n          !delegatees.length; //do not display delegatees dropdown if you are the only delegatee to yourself or there are no delegatess\r\n  else if(!onCoreNetwork && delegatees)\r\n      cannotDisplayDelegatees = (delegatees.length === 1 && delegatees[0].alias_address === account) ||\r\n          !delegatees.length;\r\n  \r\n// construct a list of channel delegators\r\nReact.useEffect(() => {\r\n    if (!account) return;\r\n    if (!delegatees || !delegatees.length) {\r\n        setChannelAddress(account);\r\n    } else {\r\n        setDelegateeOptions(\r\n            delegatees.map((oneDelegatee: any) => ({\r\n                value: oneDelegatee.address,\r\n                label: (\r\n                    <CustomDropdownItem>\r\n                        <img src={oneDelegatee.icon} alt=\"\" />\r\n                        <div>{oneDelegatee.name}</div>\r\n                    </CustomDropdownItem>\r\n                ),\r\n            }))\r\n        );\r\n        // default the channel address to the first one on the list which should be that of the user if they have a channel\r\n        setChannelAddress(delegatees[0].address);\r\n    }\r\n}, [delegatees, account]);\r\n  \r\nconst isAllFieldsFilled = () => {\r\n    if (nfRecipient == \"\" ||\r\n        nfType == \"\" ||\r\n        nfMsg == \"\" ||\r\n        (nfSubEnabled && nfSub == \"\") ||\r\n        (nfCTAEnabled && nfCTA == \"\") ||\r\n        (nfMediaEnabled && nfMedia == \"\")\r\n    ) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\n// const previewNotif = (e: any) => {\r\n//     e.preventDefault();\r\n//     if(isAllFieldsFilled())\r\n//         setPreviewNotifModalOpen(true)\r\n//     else {\r\n//         setNFInfo(\"Please fill all fields to preview\");\r\n//         setTimeout(() => {\r\n//             setNFInfo('');\r\n//         }, 2000);\r\n//     }\r\n// }\r\n\r\n// on change for the subset type notifications input\r\nconst handleSubsetInputChange = (e: any) => {\r\n  // if the user enters in a comma or an enter then separate the addresses\r\n  if (LIMITER_KEYS.includes(e.key)) {\r\n      e.preventDefault();\r\n      // if they enter a limiter key, then add the temp value to the recipeints list\r\n      // then clear the value of the temp text\r\n      setMultipleRecipients((oldRecipients) =>\r\n          // use this combination to remove duplicates\r\n          Array.from(new Set([...oldRecipients, tempRecipeint]))\r\n      );\r\n      const listRecipients = Array.from(\r\n          new Set([...multipleRecipients, tempRecipeint])\r\n      );\r\n      setNFRecipient(listRecipients.join());\r\n      setTempRecipient(\"\");\r\n  }\r\n};\r\n// when to remove a subscriber\r\nconst removeRecipient = (recipientAddress: any) => {\r\n  const filteredRecipients = multipleRecipients.filter(\r\n      (rec) => rec !== recipientAddress\r\n  );\r\n  setNFRecipient(filteredRecipients.join());\r\n  setMultipleRecipients(filteredRecipients);\r\n};\r\n\r\nReact.useEffect(() => {\r\n  const broadcastIds = [\"1\"]; //id's of notifications which qualify as broadcast\r\n  setMultipleRecipients([]); //reset array when type changes/\r\n  if (broadcastIds.includes(nfType)) {\r\n      // This is broadcast, nfRecipient will be the same\r\n      setNFRecipient(account);\r\n  } else {\r\n      setNFRecipient(\"\");\r\n  }\r\n}, [nfType]);\r\n\r\n// validate the body being sent, return true if no errors\r\nconst bodyValidated = (notificationToast) => {\r\n  let validated = true;\r\n  // if we are sending for a subset and there\r\n  if (nfType === \"4\" && multipleRecipients.length < 2) {\r\n      toast.update(notificationToast, {\r\n          render: \"Please enter at least two recipients in order to use subset notifications type\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n      });\r\n      validated = false;\r\n  }\r\n  return validated;\r\n};\r\n\r\nconst handleSendMessage = async (e) => {\r\n  // Check everything in order\r\n  e.preventDefault();\r\n\r\n  // Toastify\r\n  let notificationToast = toast.dark(\r\n      <LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />,\r\n      {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n      }\r\n  );\r\n\r\n  // do some validation\r\n  if (!bodyValidated(notificationToast)) return;\r\n\r\n  // Set to processing\r\n  setNFProcessing(1);\r\n\r\n  // Form signer and contract connection\r\n  const communicatorContract = epnsCommWriteProvider;\r\n  // define the epns comms contracts\r\n\r\n  // For payload basic\r\n  let nsub = nfSub;\r\n  let nmsg = nfMsg;\r\n  let secretEncrypted;\r\n\r\n  let asub = nfSub;\r\n  let amsg = nfMsg;\r\n  let acta = nfCTA;\r\n  let aimg = nfMedia;\r\n\r\n  // Decide type and storage\r\n  switch (nfType) {\r\n      // Broadcast Notification\r\n      case \"1\":\r\n          break;\r\n\r\n      // Targeted Notification\r\n      case \"3\":\r\n          break;\r\n\r\n      // Old Secret Notification\r\n    //   case \"2\":\r\n    //       // Create secret\r\n    //       let secret = CryptoHelper.makeid(14);\r\n\r\n    //       // Encrypt payload and change sub and nfMsg in notification\r\n    //       nsub = \"You have a secret message!\";\r\n    //       nmsg = \"Open the app to see your secret message!\";\r\n\r\n    //       // get public key from EPNSCoreHelper\r\n    //       let k = await EPNSCoreHelper.getPublicKey(\r\n    //           nfRecipient,\r\n    //           epnsCommWriteProvider\r\n    //       );\r\n    //       if (k == null) {\r\n    //           // No public key, can't encrypt\r\n    //           setNFInfo(\r\n    //               \"Public Key Registration is required for encryption!\"\r\n    //           );\r\n    //           setNFProcessing(2);\r\n\r\n    //           toast.update(notificationToast, {\r\n    //               render: \"Unable to encrypt for this user, no public key registered\",\r\n    //               type: toast.TYPE.ERROR,\r\n    //               autoClose: 5000,\r\n    //           });\r\n\r\n    //           return;\r\n    //       }\r\n\r\n    //       let publickey = k.toString().substring(2);\r\n    //       //console.log(\"This is public Key: \" + publickey);\r\n\r\n    //       secretEncrypted = await CryptoHelper.encryptWithECIES(\r\n    //           secret,\r\n    //           publickey\r\n    //       );\r\n    //       asub = CryptoHelper.encryptWithAES(nfSub, secret);\r\n    //       amsg = CryptoHelper.encryptWithAES(nfMsg, secret);\r\n    //       acta = CryptoHelper.encryptWithAES(nfCTA, secret);\r\n    //       aimg = CryptoHelper.encryptWithAES(nfMedia, secret);\r\n    //       break;\r\n\r\n      // Targeted Notification\r\n      case \"4\":\r\n          break;\r\n            \r\n      // Secret Notification\r\n      case \"5\":\r\n            // Create secret\r\n          let secret = CryptoHelper.makeid(8);\r\n\r\n          // Encrypt payload and change sub and nfMsg in notification\r\n          nsub = \"You have a secret message!\";\r\n          nmsg = \"Click on Decrypt button to see your secret message!\";\r\n\r\n          // get public key from Backend API\r\n          let encryptionKey = await postReq('/encryption_key/get_encryption_key', {\r\n              address: nfRecipient,\r\n              op: \"read\"\r\n          }).then(res => {\r\n              return res.data?.encryption_key;\r\n          });\r\n\r\n          if (encryptionKey == null) {\r\n              // No public key, can't encrypt\r\n              setNFInfo(\r\n                  \"Public Key Registration is required for encryption!\"\r\n              );\r\n              setNFProcessing(2);\r\n\r\n              toast.update(notificationToast, {\r\n                  render: \"Unable to encrypt for this user, no public key registered\",\r\n                  type: toast.TYPE.ERROR,\r\n                  autoClose: 5000,\r\n              });\r\n\r\n              return;\r\n          }\r\n\r\n          let publickey = encryptionKey;\r\n\r\n          secretEncrypted = await CryptoHelper.encryptWithRPCEncryptionPublicKey(\r\n              secret,\r\n              publickey\r\n          );\r\n        //   console.log(secretEncrypted);\r\n          if(nfSubEnabled) asub = CryptoHelper.encryptWithAES(nfSub, secret);\r\n          amsg = CryptoHelper.encryptWithAES(nfMsg, secret);\r\n          if(nfCTAEnabled) acta = CryptoHelper.encryptWithAES(nfCTA, secret);\r\n          if(nfMediaEnabled) aimg = CryptoHelper.encryptWithAES(nfMedia, secret);\r\n          break;\r\n\r\n      // Offchain Notification\r\n      case \"6\":\r\n          console.log(\r\n              nsub,\r\n              nmsg,\r\n              nfType,\r\n              asub,\r\n              amsg,\r\n              acta,\r\n              aimg,\r\n              \"case 5\"\r\n          );\r\n\r\n          break;\r\n      \r\n      default:\r\n          break;\r\n  }\r\n\r\n  // Handle Storage\r\n  let storagePointer = \"\";\r\n\r\n  // IPFS PAYLOAD --> 1, 2, 3\r\n  if (\r\n      nfType === \"1\" ||\r\n      nfType === \"2\" ||\r\n      nfType === \"3\" ||\r\n      nfType === \"4\" ||\r\n      nfType === \"5\"\r\n  ) {\r\n      // Checks for optional fields\r\n      if (nfSubEnabled && isEmpty(nfSub)) {\r\n          setNFInfo(\"Enter Subject or Disable it\");\r\n          setNFProcessing(2);\r\n\r\n          toast.update(notificationToast, {\r\n              render: \"Incorrect Payload\",\r\n              type: toast.TYPE.ERROR,\r\n              autoClose: 5000,\r\n          });\r\n\r\n          return;\r\n      }\r\n\r\n      if (nfMediaEnabled && isEmpty(nfMedia)) {\r\n          setNFInfo(\"Enter Media URL or Disable it\");\r\n          setNFProcessing(2);\r\n\r\n          toast.update(notificationToast, {\r\n              render: \"Incorrect Payload\",\r\n              type: toast.TYPE.ERROR,\r\n              autoClose: 5000,\r\n          });\r\n          return;\r\n      }\r\n\r\n      if (nfCTAEnabled && isEmpty(nfCTA)) {\r\n          setNFInfo(\"Enter Call to Action Link or Disable it\");\r\n          setNFProcessing(2);\r\n\r\n          toast.update(notificationToast, {\r\n              render: \"Incorrect Payload\",\r\n              type: toast.TYPE.ERROR,\r\n              autoClose: 5000,\r\n          });\r\n          return;\r\n      }\r\n\r\n      if (isEmpty(nfMsg)) {\r\n          setNFInfo(\"Message cannot be empty\");\r\n          setNFProcessing(2);\r\n\r\n          toast.update(notificationToast, {\r\n              render: \"Incorrect Payload\",\r\n              type: toast.TYPE.ERROR,\r\n              autoClose: 5000,\r\n          });\r\n          return;\r\n      }\r\n\r\n      const jsonPayload = {\r\n          notification: {\r\n              title: nsub,\r\n              body: nmsg,\r\n          },\r\n          data: {\r\n              type: nfType,\r\n              secret: secretEncrypted,\r\n              asub: asub,\r\n              amsg: amsg,\r\n              acta: acta,\r\n              aimg: aimg,\r\n          },\r\n      };\r\n\r\n      // if we are sending a subset type, then include recipients\r\n      if (nfType === \"4\") {\r\n          jsonPayload[\"recipients\"] = [...multipleRecipients];\r\n      }\r\n\r\n      const input = JSON.stringify(jsonPayload);\r\n      console.log(input);\r\n\r\n      console.log(\"Uploding to IPFS...\");\r\n      toast.update(notificationToast, {\r\n          render: \"Preparing Payload for upload\",\r\n      });\r\n\r\n    //   const ipfs = require(\"nano-ipfs-store\").at(\r\n    //       \"https://ipfs.infura.io:5001\"\r\n    //   );\r\n\r\n      try {\r\n        //   storagePointer = await ipfs.add(input);\r\n          storagePointer = await IPFSupload(input);\r\n      } catch (e) {\r\n          setNFProcessing(2);\r\n          setNFInfo(\"IPFS Upload Error\");\r\n      }\r\n\r\n      console.log(\"IPFS cid: %o\", storagePointer);\r\n  }\r\n  if (\r\n      nfType === \"1\" ||\r\n      nfType === \"2\" ||\r\n      nfType === \"3\" ||\r\n      nfType === \"4\" ||\r\n      nfType === \"5\"\r\n  ) {\r\n      // Prepare Identity and send notification\r\n      const identity = nfType + \"+\" + storagePointer;\r\n      const identityBytes = ethers.utils.toUtf8Bytes(identity);\r\n      console.log({\r\n          identityBytes,\r\n      });\r\n      const EPNS_DOMAIN = {\r\n          name: \"EPNS COMM V1\",\r\n          chainId: chainId,\r\n          verifyingContract: epnsCommReadProvider.address,\r\n      };\r\n\r\n      const type = {\r\n          Data: [\r\n              { name: \"acta\", type: \"string\" },\r\n              { name: \"aimg\", type: \"string\" },\r\n              { name: \"amsg\", type: \"string\" },\r\n              { name: \"asub\", type: \"string\" },\r\n              { name: \"type\", type: \"string\" },\r\n              { name: \"secret\", type: \"string\" },\r\n          ],\r\n      };\r\n\r\n      const payload = {\r\n          data: {\r\n              acta: acta,\r\n              aimg: aimg,\r\n              amsg: amsg,\r\n              asub: asub,\r\n              type: nfType,\r\n              secret: \"\",\r\n          },\r\n\r\n          notification: {\r\n              body: amsg,\r\n              title: asub,\r\n          },\r\n      };\r\n\r\n      if (nfType === \"5\" || nfType === \"2\") {\r\n          payload.notification = {\r\n              body: nmsg,\r\n              title: nsub\r\n          };\r\n          payload.data.secret = secretEncrypted;\r\n      }\r\n\r\n      const message = payload.data;\r\n      console.log(payload, \"payload\");\r\n      console.log(\"chainId\", chainId);\r\n      const signature = await library\r\n          .getSigner(account)\r\n          ._signTypedData(EPNS_DOMAIN, type, message);\r\n      console.log(\"case5 signature\", signature);\r\n      try {\r\n          console.log(nfRecipient);\r\n          postReq(\"/payloads/add_manual_payload\", {\r\n              signature,\r\n              op: \"write\",\r\n              chainId: chainId.toString(),\r\n              channel: channelAddress,\r\n              recipient: nfRecipient,\r\n              deployedContract: epnsCommReadProvider.address,\r\n              payload: payload,\r\n              type: nfType,\r\n          }).then(async (res) => {\r\n              toast.update(notificationToast, {\r\n                  render: \"Notification Sent\",\r\n                  type: toast.TYPE.INFO,\r\n                  autoClose: 5000,\r\n              });\r\n\r\n              setNFProcessing(2);\r\n              setNFType(\"\");\r\n              setNFInfo(\"Offchain Notification Sent\");\r\n\r\n              toast.update(notificationToast, {\r\n                  render: \"Offchain Notification Sent\",\r\n                  type: toast.TYPE.SUCCESS,\r\n                  autoClose: 5000,\r\n              });\r\n              console.log(res);\r\n          });\r\n      } catch (err) {\r\n          setNFInfo(\"Offchain Notification Failed, please try again\");\r\n\r\n          toast.update(notificationToast, {\r\n              render: \"Offchain Notification Failed: \" + err,\r\n              type: toast.TYPE.ERROR,\r\n              autoClose: 5000,\r\n          });\r\n          setNFProcessing(0);\r\n          console.log(err);\r\n      }\r\n\r\n      // var anotherSendTxPromise;\r\n\r\n      // anotherSendTxPromise = communicatorContract.sendNotification(\r\n      //   channelAddress,\r\n      //   nfRecipient,\r\n      //   identityBytes\r\n      // );\r\n\r\n      // console.log(\"Sending Transaction... \");\r\n      // toast.update(notificationToast, {\r\n      //   render: \"Sending Notification...\",\r\n      // });\r\n\r\n      // anotherSendTxPromise\r\n      //   .then(async (tx) => {\r\n      //     console.log(tx);\r\n      //     console.log(\"Transaction Sent!\");\r\n\r\n      //     toast.update(notificationToast, {\r\n      //       render: \"Notification Sent\",\r\n      //       type: toast.TYPE.INFO,\r\n      //       autoClose: 5000,\r\n      //     });\r\n\r\n      //     await tx.wait(1);\r\n      //     console.log(\"Transaction Mined!\");\r\n\r\n      //     setNFProcessing(2);\r\n      //     setNFType(\"\");\r\n      //     setNFInfo(\"Notification Sent\");\r\n\r\n      //     toast.update(notificationToast, {\r\n      //       render: \"Transaction Mined / Notification Sent\",\r\n      //       type: toast.TYPE.SUCCESS,\r\n      //       autoClose: 5000,\r\n      //     });\r\n      //   })\r\n      //   .catch((err) => {\r\n      //     console.log(\"!!!Error handleSendMessage() --> %o\", err);\r\n      //     setNFInfo(\"Transaction Failed, please try again\");\r\n\r\n      //     toast.update(notificationToast, {\r\n      //       render: \"Transacion Failed: \" + err,\r\n      //       type: toast.TYPE.ERROR,\r\n      //       autoClose: 5000,\r\n      //     });\r\n      //     setNFProcessing(0);\r\n      //   });\r\n  }\r\n  if (nfType === \"6\") {\r\n      // const jsonPayload = {\r\n      //   notification: {\r\n      //     title: nsub,\r\n      //     body: nmsg,\r\n      //   },\r\n      //   data: {\r\n      //     type: nfType,\r\n      //     secret: secretEncrypted,\r\n      //     asub: asub,\r\n      //     amsg: amsg,\r\n      //     acta: acta,\r\n      //     aimg: aimg,\r\n      //   },\r\n      // };\r\n\r\n      const EPNS_DOMAIN = {\r\n          name: \"EPNS COMM V1\",\r\n          chainId: chainId,\r\n          verifyingContract: epnsCommReadProvider.address,\r\n      };\r\n\r\n      const type = {\r\n          Data: [\r\n              { name: \"acta\", type: \"string\" },\r\n              { name: \"aimg\", type: \"string\" },\r\n              { name: \"amsg\", type: \"string\" },\r\n              { name: \"asub\", type: \"string\" },\r\n              { name: \"type\", type: \"string\" },\r\n              { name: \"secret\", type: \"string\" },\r\n          ],\r\n      };\r\n\r\n      const payload = {\r\n          data: {\r\n              acta: acta,\r\n              aimg: aimg,\r\n              amsg: amsg,\r\n              asub: asub,\r\n              type: nfType,\r\n              secret: \"\",\r\n          },\r\n\r\n          notification: {\r\n              body: amsg,\r\n              title: asub,\r\n          },\r\n      };\r\n\r\n      const message = payload.data;\r\n      console.log(payload, \"payload\");\r\n      console.log(\"chainId\", chainId);\r\n      const signature = await library\r\n          .getSigner(account)\r\n          ._signTypedData(EPNS_DOMAIN, type, message);\r\n      console.log(\"case5 signature\", signature);\r\n      try {\r\n          postReq(\"/payloads/add_manual_payload\", {\r\n              signature,\r\n              op: \"write\",\r\n              chainId: chainId.toString(),\r\n              channel: channelAddress,\r\n              recipient: nfRecipient,\r\n              deployedContract: epnsCommReadProvider.address,\r\n              payload: payload,\r\n              type: \"3\",\r\n          }).then(async (res) => {\r\n              toast.update(notificationToast, {\r\n                  render: \"Notification Sent\",\r\n                  type: toast.TYPE.INFO,\r\n                  autoClose: 5000,\r\n              });\r\n\r\n              setNFProcessing(2);\r\n              setNFType(\"\");\r\n              setNFInfo(\"Offchain Notification Sent\");\r\n\r\n              toast.update(notificationToast, {\r\n                  render: \"Offchain Notification Sent\",\r\n                  type: toast.TYPE.SUCCESS,\r\n                  autoClose: 5000,\r\n              });\r\n              console.log(res);\r\n          });\r\n      } catch (err) {\r\n          if (err.code === 4001) {\r\n            // EIP-1193 userRejectedRequest error\r\n            toast.update(notificationToast, {\r\n                render: \"User denied message signature.\",\r\n                type: toast.TYPE.ERROR,\r\n                autoClose: 5000,\r\n            });\r\n          } else {\r\n            setNFInfo(\"Offchain Notification Failed, please try again\");\r\n\r\n            toast.update(notificationToast, {\r\n                render: \"Offchain Notification Failed: \" + err,\r\n                type: toast.TYPE.ERROR,\r\n                autoClose: 5000,\r\n            });  \r\n          }\r\n          setNFProcessing(0);\r\n          console.log(err); \r\n      }\r\n  }\r\n};\r\n\r\nconst isEmpty = (field: any) => {\r\n    if (field.trim().length == 0) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n// toast customize\r\nconst LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n        <Oval color={color} height={30} width={30} />\r\n        <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n);\r\n\r\nlet showPreview = nfSub !== '' || nfMsg !== '' || nfCTA !== '' || nfMedia !== ''\r\n\r\nreturn (\r\n    <FullBody>\r\n    <Body>\r\n      <Content padding=\"10px 20px 10px\">\r\n        <Item align=\"center\">\r\n          <H2 textTransform=\"none\">\r\n            <Span weight=\"400\" size=\"32px\" color={theme.color}>\r\n              Send Notification\r\n            </Span>\r\n          </H2>\r\n          <Span\r\n            color=\"#657795\"\r\n            weight=\"400\"\r\n            size=\"15px\"\r\n            textTransform=\"none\"\r\n            spacing=\"0.03em\"\r\n            margin=\"0px 0px\"\r\n            textAlign=\"center\"\r\n          >\r\n            EPNS makes it extremely easy to open and maintain a genuine\r\n            channel of communication with your users.\r\n          </Span>\r\n        </Item>\r\n      </Content>\r\n            {/* <Content padding=\"10px 30px 20px\">\r\n                <Item align=\"flex-start\">\r\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n                        <Span weight=\"200\" style={{color : theme.color}}>Send </Span>\r\n                        <Span\r\n                            bg=\"#674c9f\"\r\n                            color=\"#fff\"\r\n                            weight=\"600\"\r\n                            padding=\"0px 8px\"\r\n                        >\r\n                            Notification\r\n                        </Span>\r\n                    </H2>\r\n                    {!isChannelDeactivated ? (\r\n                        <H3 style={{color : theme.color}}>\r\n                            EPNS supports three types of notifications (for\r\n                            now!). <b>Groups</b>, <b>Subsets</b>, and{\" \"}<b>Targeted</b>\r\n                        </H3>\r\n                    ) : (\r\n                        <H3>\r\n                            This channel has been deactivated, please\r\n                            reactivate it!.\r\n                        </H3>\r\n                    )}\r\n                </Item>\r\n            </Content> */}\r\n        </Body>\r\n\r\n        {!isChannelDeactivated && (\r\n            <Section>\r\n                <ModifiedContent>\r\n                    <Item align=\"stretch\">\r\n                        <FormSubmision\r\n                            flex=\"1\"\r\n                            direction=\"column\"\r\n                            margin=\"0px\"\r\n                            justify=\"center\"\r\n                            size=\"1.1rem\"\r\n                            onSubmit={handleSendMessage}\r\n                        >\r\n                            <Item\r\n                                margin=\"0px 20px\"\r\n                                flex=\"1\"\r\n                                self=\"stretch\"\r\n                                align=\"stretch\"\r\n                            >\r\n                                {console.log(cannotDisplayDelegatees)}\r\n                                {!cannotDisplayDelegatees && (\r\n                                    <Item\r\n                                        flex=\"1\"\r\n                                        justify=\"flex-start\"\r\n                                        align=\"stretch\"\r\n\r\n                                    >\r\n                                         <DropdownStyledParent>\r\n                                        <DropdownStyled\r\n                                            options={delegateeOptions}\r\n                                                onChange={(option: any) => {\r\n                                                    setChannelAddress(\r\n                                                        option.value\r\n                                                    );\r\n                                                }}\r\n                                                placeholder=\"Select a Channel\"\r\n                                                value={delegateeOptions[0]}\r\n                                                // value={delegateeOptions.find(\r\n                                                //     (d) =>\r\n                                                //         d.value ==\r\n                                                //         channelAddress\r\n                                                // )}\r\n                                        />\r\n                                    </DropdownStyledParent>\r\n                                        {/* <DropdownStyledParentWhite>\r\n                                            <DropdownHeader>\r\n                                                SEND NOTIFICATION ON BEHALF\r\n                                                OF\r\n                                            </DropdownHeader>\r\n                                            <DropdownStyledWhite\r\n                                                options={delegateeOptions}\r\n                                                onChange={(option: any) => {\r\n                                                    setChannelAddress(\r\n                                                        option.value\r\n                                                    );\r\n                                                }}\r\n                                                value={delegateeOptions.find(\r\n                                                    (d) =>\r\n                                                        d.value ==\r\n                                                        channelAddress\r\n                                                )}\r\n                                            />\r\n                                        </DropdownStyledParentWhite> */}\r\n                                    </Item>\r\n                                )}\r\n\r\n                                <Input\r\n                                    display=\"none\"\r\n                                    value={nfType}\r\n                                    onChange={(e) => {\r\n                                        setNFType(e.target.value);\r\n                                    }}\r\n                                />\r\n\r\n                                <Item\r\n                                    flex=\"1\"\r\n                                    justify=\"flex-start\"\r\n                                    align=\"stretch\"\r\n                                    margin=\"40px 0px 0px 0px\"\r\n                                  //   minWidth=\"280px\"\r\n                                >\r\n                                    <DropdownStyledParent>\r\n                                        <DropdownStyled\r\n                                            options={NFTypes}\r\n                                            onChange={(option) => {\r\n                                                setNFType(option.value);\r\n                                                console.log(option);\r\n                                            }}\r\n                                            value={nfType}\r\n                                        />\r\n                                    </DropdownStyledParent>\r\n                                </Item>\r\n                                <Input\r\n                                    display=\"none\"\r\n                                    value={nfType}\r\n                                    onChange={(e) => {\r\n                                        setNFType(e.target.value);\r\n                                    }}\r\n                                />\r\n\r\n                                {nfType && (\r\n                                    <ItemH\r\n                                        margin=\"40px 0px 15px 0px\"\r\n                                        flex=\"1\"\r\n                                        self=\"stretch\"\r\n                                        justify=\"space-between\"\r\n                                    >\r\n                                        <ItemH\r\n                                            margin=\"15px 0px\"\r\n                                            width=\"10em\"\r\n                                            bg=\"#F4F5FA\"\r\n                                            flex=\"none\"\r\n                                            padding=\"15px\"\r\n                                            radius=\"20px\"\r\n                                            display=\"flex\"\r\n                                            direction=\"row\"\r\n                                            justify=\"space-between\"\r\n                                            \r\n                                        >\r\n                                            <Span\r\n                                                weight=\"700\"\r\n                                                textTransform=\"none\"\r\n                                                size=\"14px\"\r\n                                                color=\"#1E1E1E\"\r\n                                                padding=\"5px 15px\"\r\n                                                radius=\"30px\"\r\n                                            >\r\n                                                Subject\r\n                                            </Span>\r\n                                            <IOSSwitch\r\n                                                checked={nfSubEnabled}\r\n                                                onChange={() =>\r\n                                                    setNFSubEnabled(\r\n                                                        !nfSubEnabled\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        </ItemH>\r\n\r\n                                        <ItemH\r\n                                            margin=\"15px 0px\"\r\n                                            width=\"10em\"\r\n                                            bg=\"#F4F5FA\"\r\n                                            flex=\"none\"\r\n                                            padding=\"15px\"\r\n                                            radius=\"20px\"\r\n                                            display=\"flex\"\r\n                                            direction=\"row\"\r\n                                            justify=\"space-between\"\r\n                                        >\r\n                                            <Span\r\n                                               weight=\"700\"\r\n                                               textTransform=\"none\"\r\n                                               size=\"14px\"\r\n                                               color=\"#1E1E1E\"\r\n                                               padding=\"5px 15px\"\r\n                                               radius=\"30px\"\r\n                                            >\r\n                                                Media\r\n                                            </Span>\r\n                                            <IOSSwitch\r\n                                                checked={nfMediaEnabled}\r\n                                                onChange={() =>\r\n                                                    setNFMediaEnabled(\r\n                                                        !nfMediaEnabled\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        </ItemH>\r\n\r\n                                        <ItemH\r\n                                            margin=\"15px 0px\"\r\n                                            width=\"10em\"\r\n                                            bg=\"#F4F5FA\"\r\n                                            flex=\"none\"\r\n                                            padding=\"15px\"\r\n                                            radius=\"20px\"\r\n                                            display=\"flex\"\r\n                                            direction=\"row\"\r\n                                            justify=\"space-between\"\r\n                                        >\r\n                                            <Span\r\n                                                  weight=\"700\"\r\n                                                  textTransform=\"none\"\r\n                                                  size=\"14px\"\r\n                                                  color=\"#1E1E1E\"\r\n                                                  padding=\"5px 15px\"\r\n                                                  radius=\"30px\"\r\n                                            >\r\n                                                 CTA Link\r\n                                            </Span>\r\n                                            <IOSSwitch\r\n                                                checked={nfCTAEnabled}\r\n                                                onChange={() =>\r\n                                                    setNFCTAEnabled(\r\n                                                        !nfCTAEnabled\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        </ItemH>\r\n                                    </ItemH>\r\n                                )}\r\n                            </Item>\r\n\r\n                            {(nfType === \"2\" ||\r\n                                nfType === \"3\" ||\r\n                                nfType === \"5\") && (\r\n                                <Item\r\n                                    margin=\"15px 20px 15px 20px\"\r\n                                    flex=\"1\"\r\n                                    self=\"stretch\"\r\n                                    align=\"stretch\"\r\n                                >\r\n                                   <Label style={{color:theme.color}}>Recipient Wallet Address</Label>\r\n                                    <Input\r\n                                        required\r\n                                        maxlength=\"40\"\r\n                                        flex=\"1\"\r\n                                        padding=\"12px\"\r\n                                        weight=\"400\"\r\n                                        size=\"16px\"\r\n                                        bg=\"white\"\r\n                                        height=\"25px\"\r\n                                        margin=\"7px 0px 0px 0px\"\r\n                                        border=\"1px solid #BAC4D6\"\r\n                                        focusBorder=\"1px solid #657795\"\r\n                                        radius=\"12px\"\r\n                                        value={nfRecipient}\r\n                                        onChange={(e) => {\r\n                                            setNFRecipient(e.target.value);\r\n                                        }}\r\n                                    />\r\n                                </Item>\r\n                            )}\r\n\r\n                            {nfType === \"4\" && (\r\n                                <>\r\n                                    <MultiRecipientsContainer>\r\n                                        {multipleRecipients.map(\r\n                                            (oneRecipient) => (\r\n                                                <span key={oneRecipient}>\r\n                                                    {oneRecipient}\r\n                                                    <i\r\n                                                        onClick={() =>\r\n                                                            removeRecipient(\r\n                                                                oneRecipient\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        <CloseIcon />\r\n                                                    </i>\r\n                                                </span>\r\n                                            )\r\n                                        )}\r\n                                    </MultiRecipientsContainer>\r\n                                    <Item\r\n                                        margin=\"15px 20px 15px 20px\"\r\n                                        flex=\"1\"\r\n                                        self=\"stretch\"\r\n                                        align=\"stretch\"\r\n                                    >\r\n                                   <Label style={{color:theme.color}}>Enter Recipients Wallet Addresses</Label>\r\n                                        <Input\r\n                                            required={\r\n                                                multipleRecipients.length ===\r\n                                                0\r\n                                            }\r\n                                        maxlength=\"40\"\r\n                                        flex=\"1\"\r\n                                        padding=\"12px\"\r\n                                        weight=\"400\"\r\n                                        size=\"16px\"\r\n                                        bg=\"white\"\r\n                                        height=\"25px\"\r\n                                        margin=\"7px 0px 0px 0px\"\r\n                                        border=\"1px solid #BAC4D6\"\r\n                                        focusBorder=\"1px solid #657795\"\r\n                                        radius=\"12px\"\r\n                                            value={tempRecipeint}\r\n                                            onKeyPress={\r\n                                                handleSubsetInputChange\r\n                                            }\r\n                                            onChange={(e) => {\r\n                                                const text =\r\n                                                    e.target.value.trim();\r\n                                                console.log(text);\r\n                                                console.log(tempRecipeint);\r\n                                                // if (!LIMITER_KEYS.includes(text) && text.length > 0 ) {\r\n                                                setTempRecipient(\r\n                                                    e.target.value\r\n                                                );\r\n                                                // }\r\n                                            }}\r\n                                        />\r\n                                         <Span\r\n                                              size=\"13px\"\r\n                                              margin=\"7px 0px 0px 0px\"\r\n                                              color=\"#657795\"\r\n                                              >\r\n                                              Enter recipients wallet addresses separated by a comma or by pressing the enter key\r\n                                              </Span>\r\n                                    </Item>\r\n                                </>\r\n                            )}\r\n\r\n                            {nfType && nfSubEnabled && (\r\n                                <Item\r\n                                    margin=\"15px 20px 15px 20px\"\r\n                                    flex=\"1\"\r\n                                    self=\"stretch\"\r\n                                    align=\"stretch\"\r\n                                >\r\n                                   <Label style={{color:theme.color}}>Subject</Label>\r\n                                    <Input\r\n                                        required\r\n                                        maxlength=\"40\"\r\n                                        flex=\"1\"\r\n                                        padding=\"12px\"\r\n                                        weight=\"400\"\r\n                                        size=\"16px\"\r\n                                        bg=\"white\"\r\n                                        height=\"25px\"\r\n                                        margin=\"7px 0px 0px 0px\"\r\n                                        border=\"1px solid #BAC4D6\"\r\n                                        focusBorder=\"1px solid #657795\"\r\n                                        radius=\"12px\"\r\n                                        value={nfSub}\r\n                                        onChange={(e) => {\r\n                                            setNFSub(e.target.value);\r\n                                        }}\r\n                                    />\r\n                                </Item>\r\n                            )}\r\n\r\n                            {nfType && (\r\n                                <Item\r\n                                    margin=\"15px 20px 15px 20px\"\r\n                                    flex=\"1\"\r\n                                    self=\"stretch\"\r\n                                    align=\"stretch\"\r\n                                >\r\n                                  <Label style={{color:theme.color}}>Notification Message</Label>\r\n                                    <TextField\r\n                                        required\r\n                                        // placeholder=\"Your Channel's Short Description (250 Characters)\"\r\n                                        rows=\"4\"\r\n                                        maxlength=\"250\"\r\n                                        padding=\"12px\"\r\n                                        weight=\"400\"\r\n                                        margin=\"7px 0px 0px 0px\"\r\n                                        border=\"1px solid #BAC4D6\"\r\n                                        focusBorder=\"1px solid #657795\"\r\n                                        radius=\"12px\"\r\n                                        bg=\"#fff\"\r\n                                        overflow=\"auto\"\r\n                                        value={nfMsg}\r\n                                        onChange={(e) => {\r\n                                            setNFMsg(e.target.value);\r\n                                        }}\r\n                                        autocomplete=\"off\"\r\n                                    />\r\n                                </Item>\r\n                            )}\r\n\r\n                            {nfType && nfMediaEnabled && (\r\n                                    <Item\r\n                                    margin=\"15px 20px 15px 20px\"\r\n                                    flex=\"1\"\r\n                                    self=\"stretch\"\r\n                                    align=\"stretch\"\r\n                                    >\r\n                                  <Label style={{color:theme.color}}>Media URL</Label>\r\n                                        <Input\r\n                                              required\r\n                                              maxlength=\"40\"\r\n                                              flex=\"1\"\r\n                                              padding=\"12px\"\r\n                                              weight=\"400\"\r\n                                              size=\"16px\"\r\n                                              bg=\"white\"\r\n                                              height=\"25px\"\r\n                                              margin=\"7px 0px 0px 0px\"\r\n                                              border=\"1px solid #BAC4D6\"\r\n                                              focusBorder=\"1px solid #657795\"\r\n                                            radius=\"12px\"\r\n                                            value={nfMedia}\r\n                                            onChange={(e) => {\r\n                                                setNFMedia(e.target.value);\r\n                                            }}\r\n                                        />\r\n                                    </Item>\r\n                            )}\r\n\r\n                            {nfType && nfCTAEnabled && (\r\n                                    <Item\r\n                                    margin=\"15px 20px 15px 20px\"\r\n                                    flex=\"1\"\r\n                                    self=\"stretch\"\r\n                                    align=\"stretch\"\r\n                                    >\r\n                                  <Label style={{color:theme.color}}>CTA Link</Label>\r\n\r\n                                        <Input\r\n                                          required\r\n                                          maxlength=\"40\"\r\n                                          flex=\"1\"\r\n                                          padding=\"12px\"\r\n                                          weight=\"400\"\r\n                                          size=\"16px\"\r\n                                          bg=\"white\"\r\n                                          height=\"25px\"\r\n                                          margin=\"7px 0px 0px 0px\"\r\n                                          border=\"1px solid #BAC4D6\"\r\n                                          radius=\"12px\"\r\n                                          focusBorder=\"1px solid #657795\"\r\n                                            value={nfCTA}\r\n                                            onChange={(e) => {\r\n                                                setNFCTA(e.target.value);\r\n                                            }}\r\n                                        />\r\n                                    </Item>\r\n                            )}\r\n\r\n                            {nfInfo && nfProcessing != 1 && (\r\n                                <Item\r\n                                    color=\"#fff\"\r\n                                    bg=\"#e1087f\"\r\n                                    padding=\"10px 15px\"\r\n                                    margin=\"15px 0px\"\r\n                                >\r\n                                    <Span\r\n                                        color=\"#fff\"\r\n                                        textTransform=\"uppercase\"\r\n                                        spacing=\"0.1em\"\r\n                                        weight=\"400\"\r\n                                        size=\"1em\"\r\n                                    >\r\n                                        {nfInfo}\r\n                                    </Span>\r\n                                </Item>\r\n                            )}\r\n\r\n                              \r\n                                  {showPreview && (<PreviewNotif\r\n                                      details={{\r\n                                          channelAddress: channelAddress,\r\n                                          acta: nfCTA,\r\n                                          aimg: nfMedia,\r\n                                          amsg: nfMsg,\r\n                                          asub: nfSub,\r\n                                          type: nfType,\r\n                                      }}\r\n                                  />)}\r\n\r\n                            {nfType && (\r\n                                <Item width=\"15em\" self=\"stretch\" align=\"stretch\" margin=\"70px auto 0px auto\"\r\n                                >\r\n                                    <Button\r\n                                        bg=\"#CF1C84\"\r\n                                        color=\"#fff\"\r\n                                        flex=\"1\"\r\n                                        radius=\"15px\"\r\n                                        padding=\"20px 10px\"\r\n                                        disabled={\r\n                                            nfProcessing == 1 ? true : false\r\n                                        }\r\n                                    >\r\n                                        {nfProcessing == 1 && (\r\n                                            <Oval\r\n                                                color=\"#fff\"\r\n                                                height={24}\r\n                                                width={24}\r\n                                            />\r\n                                        )}\r\n                                        {nfProcessing != 1 && (\r\n                                            <Input\r\n                                                cursor=\"hand\"\r\n                                                textTransform=\"none\"\r\n                                                color=\"#fff\"\r\n                                                weight=\"600\"\r\n                                                size=\"16px\"\r\n                                                type=\"submit\"\r\n                                                value=\"Send Notification\"\r\n                                            />\r\n                                        )}\r\n                                    </Button>\r\n                                </Item>\r\n                            )}\r\n                        </FormSubmision>\r\n                    </Item>\r\n                </ModifiedContent>\r\n                \r\n            </Section>\r\n        )}\r\n    </FullBody>\r\n);\r\n}\r\n\r\n// css styles\r\nconst Toaster = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items: center;\r\nmargin: 0px 10px;\r\n`;\r\n\r\nconst FullBody = styled.div`\r\n// background:red;\r\n// width:50%;\r\n`;\r\n\r\nconst ToasterMsg = styled.div`\r\nmargin: 0px 10px;\r\n`;\r\n\r\nconst DropdownStyledParent = styled.div`\r\n.is-open {\r\n    // margin-bottom: 130px;\r\n}\r\n`;\r\n\r\nconst MultiRecipientsContainer = styled.div`\r\nwidth: 100%;\r\npadding: 0px 20px;\r\npadding-top: 10px;\r\nbox-sizing: border-box;\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\ngap: 7px 15px;\r\nspan {\r\n    color: white;\r\n    background: #e20880;\r\n    padding: 6px 10px;\r\n    border-radius: 5px;\r\n    i {\r\n        cursor: pointer;\r\n        margin-left: 25px;\r\n    }\r\n}\r\n`;\r\n\r\nconst ModifiedContent = styled(Content)`\r\npadding-top: 20px;\r\nfont-weight: 400;\r\nwidth: 80%;\r\nmargin: 0 auto;\r\n`;\r\n\r\nconst DropdownHeader = styled.div`\r\ncolor: ${props => props.theme.color || \"#000\"};\r\npadding: 10px;\r\nletter-spacing: 3px;\r\nfont-size: 14px;\r\n`;\r\n\r\nconst Label = styled.div`\r\nfont-family: 'Manrope';\r\nfont-style: normal;\r\nfont-weight: 700;\r\nfont-size: 14px;\r\nline-height: 21px;\r\nletter-spacing: -0.011em;\r\ncolor: #1E1E1E;\r\n`;\r\n\r\n//   const DropdownStyled = styled(Dropdown)`\r\n//   .Dropdown-control {\r\n//       background-color: #000;\r\n//       color: #fff;\r\n//       padding: 12px 52px 12px 10px;\r\n//       border: 1px solid #000;\r\n//       border-radius: 4px;\r\n//   }\r\n//   .Dropdown-placeholder {\r\n//       text-transform: uppercase;\r\n//       font-weight: 400;\r\n//       letter-spacing: 0.2em;\r\n//       font-size: 0.8em;\r\n//   }\r\n//   .Dropdown-arrow {\r\n//       top: 18px;\r\n//       bottom: 0;\r\n//       border-color: #fff transparent transparent;\r\n//   }\r\n//   .Dropdown-menu {\r\n//       border: 1px solid #000;\r\n//       box-shadow: none;\r\n//       background-color: #000;\r\n//       border-radius: 0px;\r\n//       margin-top: -2px;\r\n//       border-bottom-right-radius: 4px;\r\n//       border-bottom-left-radius: 4px;\r\n//   }\r\n//   .Dropdown-option {\r\n//       background-color: rgb(35 35 35);\r\n//       color: #ffffff99;\r\n//       text-transform: uppercase;\r\n//       letter-spacing: 0.2em;\r\n//       font-size: 0.7em;\r\n//       padding: 15px 20px;\r\n//   }\r\n//   .Dropdown-option:hover {\r\n//       background-color: #000000;\r\n//       color: #fff;\r\n//   }\r\n//   `;\r\n\r\nconst DropdownStyled = styled(Dropdown)`\r\n.Dropdown-control {\r\n    background-color: white;\r\n    color: #000;\r\n    border: 1px solid #BAC4D6;\r\n    border-radius: 12px;\r\n    flex:1;\r\n    outline: none;\r\n    height: 50px;\r\n    display: flex;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    line-height: 150%;\r\n    align-items: center;\r\n    padding: 10px;\r\n}\r\n.Dropdown-arrow {\r\n    top: 20px;\r\n    bottom: 0;\r\n    border-color: #f #000 #000;\r\n}\r\n.Dropdown-menu {\r\n  border-color: #BAC4D6;\r\n  border-radius: 12px;\r\n    .is-selected {\r\n    background-color: #D00775;\r\n    color:#fff;\r\n  }\r\n}\r\n\r\n.Dropdown-option {\r\n    background-color: #fff;\r\n    color: #000;\r\n    font-size: 16px;\r\n    padding: 20px 20px;\r\n\r\n}\r\n.Dropdown-option:hover {\r\n    background-color: #D00775;\r\n    color: #000;\r\n}\r\n`\r\n\r\nconst DropdownStyledWhite = styled(DropdownStyled)`\r\n.Dropdown-control {\r\n    color: #000;\r\n    background: #fafafa;\r\n    border: 0px;\r\n    padding: 15px 52px 15px 10px;\r\n}\r\n.Dropdown-arrow {\r\n    border-color: #000 transparent transparent;\r\n    top: 30px;\r\n}\r\n.Dropdown-menu {\r\n    border: 0px;\r\n    background-color: #fafafa;\r\n}\r\n.Dropdown-option {\r\n    background-color: #fafafa;\r\n    color: black;\r\n    transition: 300ms;\r\n}\r\n.Dropdown-option:hover {\r\n    background-color: #e7e6e6;\r\n}\r\n.Dropdown-option.is-selected {\r\n    background-color: #f1efef;\r\n}\r\n`;\r\n\r\nconst DropdownStyledParentWhite = styled(DropdownStyledParent)`\r\n// margin-bottom: 20px;\r\nborder: 1px solid rgba(169, 169, 169, 0.5);\r\n`;\r\n\r\nconst CustomDropdownItem = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nimg {\r\n    height: 30px;\r\n    width: 30px;\r\n    border-radius: 50%;\r\n    margin-right: 10px;\r\n}\r\ndiv {\r\n    color: black;\r\n    font-size: 16px;\r\n    letter-spacing: 2px;\r\n}\r\n`;\r\n\r\nconst Body = styled.div`\r\n  margin: 40px auto 0px auto;\r\n  width: 55%; \r\n  @media (max-width: 600px) {\r\n    width: 100%%; \r\n  }\r\n  @media (max-width: 1224px) {\r\n    width: 75%; \r\n  }\r\n`;\r\n\r\n// Export Default\r\nexport default SendNotifications;","import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport { ethers } from \"ethers\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addresses, abis , envConfig } from \"@project/contracts\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport UsersDataStore from \"singletons/UsersDataStore\";\r\nimport SendNotifications from \"components/SendNotifications\";\r\nimport { getReq,postReq } from \"api\";\r\nimport {\r\n  setCoreReadProvider,\r\n  setCoreWriteProvider,\r\n  setCommunicatorReadProvider,\r\n  setCommunicatorWriteProvider,\r\n  setPushAdmin,\r\n} from \"redux/slices/contractSlice\";\r\nimport {\r\n  setUserChannelDetails,\r\n  setCanVerify,\r\n  setDelegatees,\r\n} from \"redux/slices/adminSlice\";\r\nimport  { Navigate } from 'react-router-dom'\r\nimport { convertAddressToAddrCaip } from \"helpers/CaipHelper\";\r\n\r\nexport const ALLOWED_CORE_NETWORK = envConfig.coreContractChain; //chainId of network which we have deployed the core contract on\r\nconst CHANNEL_TAB = 2; //Default to 1 which is the channel tab\r\nconst blockchainName = {\r\n  1: \"ETH_MAINNET\",\r\n  137: \"POLYGON_MAINNET\",\r\n  42: \"ETH_TEST_KOVAN\",\r\n  80001: \"POLYGON_TEST_MUMBAI\",\r\n};\r\n\r\n// Create Header\r\nfunction ChannelDashboardPage() {\r\n  ReactGA.pageview(\"/channel_dashboard\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { account, library, chainId } = useWeb3React();\r\n  const {\r\n    epnsReadProvider,\r\n    epnsWriteProvider,\r\n    epnsCommReadProvider,\r\n  } = useSelector((state: any) => state.contracts);\r\n  const { channelDetails } = useSelector((state: any) => state.admin);\r\n\r\n  const CORE_CHAIN_ID = envConfig.coreContractChain;\r\n  const onCoreNetwork = CORE_CHAIN_ID === chainId;\r\n  const INITIAL_OPEN_TAB = CHANNEL_TAB; //if they are not on a core network.redirect then to the notifications page\r\n\r\n  const [controlAt, setControlAt] = React.useState(2);\r\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(true);\r\n  const [aliasEthAccount, setAliasEthAccount] = React.useState(null);\r\n  const [aliasVerified, setAliasVerified] = React.useState(null); // null means error, false means unverified and true means verified\r\n  const [channelAdmin, setChannelAdmin] = React.useState(true);\r\n  const [channelJson, setChannelJson] = React.useState([]);\r\n\r\n  // toast related section\r\n  const [toast, showToast] = React.useState(null);\r\n  const clearToast = () => showToast(null);\r\n\r\n  //clear toast variable after it is shown\r\n  React.useEffect(() => {\r\n    if (toast) {\r\n      clearToast();\r\n    }\r\n  }, [toast]);\r\n  // toast related section\r\n\r\n  /**\r\n   * When we instantiate the contract instances, fetch basic information about the user\r\n   * Corresponding channel owned.\r\n   */\r\n  // React.useEffect(() => {\r\n  //   (async ()=>{\r\n  //     if (!epnsReadProvider || !epnsCommReadProvider || !epnsWriteProvider) return;\r\n  //     // Reset when account refreshes\r\n  //     setChannelAdmin(false);\r\n  //     dispatch(setUserChannelDetails('unfetched'));\r\n  //     setAdminStatusLoaded(false);\r\n  //     userClickedAt(INITIAL_OPEN_TAB);\r\n  //     setChannelJson([]);\r\n  \r\n  //     // EPNS Read Provider Set\r\n  //     if (epnsReadProvider != null && epnsCommReadProvider != null) {\r\n  //       await checkUserForAlias();\r\n  //       await checkUserForChannelOwnership();\r\n  //       fetchDelegators();\r\n  //     }\r\n  //   })()\r\n  // }, [epnsReadProvider, epnsCommReadProvider, epnsWriteProvider]);\r\n\r\n  // handle user action at control center\r\n  const userClickedAt = (controlIndex) => {\r\n    setControlAt(controlIndex);\r\n  };\r\n\r\n  // fetch all the channels who have delegated to this account\r\n  const fetchDelegators = () => {\r\n    postReq(\"/channels/delegatee/getChannels\", {\r\n      delegateAddress: account,\r\n      blockchain: blockchainName[chainId],\r\n      op: \"read\",\r\n    })\r\n      .then(async ({ data: delegators }) => {\r\n        // if there are actual delegators\r\n        // fetch basic information abouot the channels and store it to state\r\n        if (delegators && delegators.channelOwners) {\r\n          const channelInformationPromise = [\r\n            ...new Set([account, ...delegators.channelOwners])//make the accounts unique\r\n          ].map((channelAddress) => {\r\n            return ChannelsDataStore.instance\r\n              .getChannelJsonAsync(channelAddress)\r\n              .then((res) => ({ ...res, address: channelAddress }))\r\n              .catch(() => false)\r\n          }\r\n          );\r\n          const channelInformation = await Promise.all(\r\n            channelInformationPromise\r\n          );\r\n          dispatch(setDelegatees(channelInformation.filter(Boolean)));\r\n          // fetch the json information about this delegatee channel and add to global state\r\n        } else {\r\n          dispatch(setDelegatees([]));\r\n        }\r\n      })\r\n      .catch(async (err) => {\r\n        console.log({ err });\r\n      });\r\n  };\r\n\r\n  // Check if a user is a channel or not\r\n  const checkUserForChannelOwnership = async () => {\r\n    if (channelDetails != 'unfetched') return;\r\n    if (!onCoreNetwork && aliasEthAccount == null) {\r\n      setChannelAdmin(false);\r\n      setAdminStatusLoaded(true);\r\n      return;\r\n    }\r\n    // Check if account is admin or not and handle accordingly\r\n    const ownerAccount = !onCoreNetwork ? aliasEthAccount : account;\r\n    console.log(ownerAccount);\r\n    EPNSCoreHelper.getChannelJsonFromUserAddress(ownerAccount, epnsReadProvider)\r\n      .then(async (response) => {\r\n        // if channel admin, then get if the channel is verified or not, then also fetch more details about the channel\r\n        const verificationStatus = await epnsWriteProvider.getChannelVerfication(\r\n            ownerAccount\r\n          );\r\n        const channelJson = await epnsWriteProvider.channels(ownerAccount);\r\n        const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\r\n          account\r\n        );\r\n        dispatch(\r\n          setUserChannelDetails({\r\n            ...response,\r\n            ...channelJson,\r\n            subscribers: channelSubscribers,\r\n          })\r\n        );\r\n        dispatch(setCanVerify(Boolean(verificationStatus)));\r\n        setChannelJson(response);\r\n        setChannelAdmin(true);\r\n        setAdminStatusLoaded(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\r\n          \"There was an error [checkUserForChannelOwnership]:\",\r\n          err.message\r\n        );\r\n        setChannelAdmin(false);\r\n        setAdminStatusLoaded(true);\r\n      })\r\n      .finally(() => {\r\n        setAdminStatusLoaded(true);\r\n      });\r\n  };\r\n\r\n    // Check if a user is a channel or not\r\n    const checkUserForAlias = async () => {\r\n      // Check if account is admin or not and handle accordingly\r\n      const userAddressInCaip = convertAddressToAddrCaip(account, chainId);\r\n      await getReq(`/v1/alias/${userAddressInCaip}/channel`).then(({ data }) => {\r\n        if (data) {\r\n          setAliasEthAccount(data.channel);\r\n          setAliasVerified(data.is_alias_verified);\r\n        }\r\n        return data;\r\n      });\r\n    };\r\n\r\n  // Render\r\n  return (\r\n    <>\r\n      {controlAt === 2 && adminStatusLoaded ? \r\n        <>\r\n        {/* redirect if not admin */}\r\n        {!channelAdmin && <Navigate replace to=\"/dashboard\" /> }\r\n        {channelAdmin && <SendNotifications/>}\r\n        </>\r\n        : \r\n        <ChannelLoadingMessage>\r\n          Channel details are being loaded, please wait…\r\n        </ChannelLoadingMessage>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n// css style\r\nconst ChannelLoadingMessage = styled.div`\r\n  width: 100%;\r\n  padding: 40px;\r\n  font-size: 1.5em;\r\n  font-weight: 300;\r\n  text-align: center;\r\n  color: ${props => props.theme.color};\r\n`\r\n\r\n\r\n// Export Default\r\nexport default ChannelDashboardPage;","import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport styled, {useTheme} from \"styled-components\";\r\nimport { Section, Content, Item, Span, H2, H3 } from \"../primaries/SharedStyling\";\r\n\r\nimport Info from \"segments/Info\";\r\n\r\nimport GLOBALS from \"config/Globals\";\r\n\r\n// Create Header\r\nfunction ReceiveNotifsPage() {\r\n  ReactGA.pageview(\"/receive\");\r\n\r\n  // get themes\r\n  const themes = useTheme();\r\n\r\n  // Render\r\n  return (\r\n    <Container>\r\n      <Content className=\"contentBox\" padding=\"20px 0px 0px 0px\">\r\n        <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 20px\">\r\n\r\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 0px 0px 0px\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\" margin=\"10px 0px 20px 0px\">\r\n              <Span weight=\"200\" color={themes.fontColor}>Receive </Span><Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Notifications</Span>\r\n            </H2>\r\n            <H3 maxWidth=\"768px\" color={themes.fontColorSecondary}>The following frontends enables receiving push alerts for your wallet. More coming soon!</H3>\r\n          </Item>\r\n\r\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 0px 20px 0px\">\r\n            <Info />\r\n          </Item>\r\n\r\n        </Item>\r\n      </Content>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css style\r\nconst Container = styled(Section)`\r\n  flex: 1;\r\n  flex-direction: column;\r\n  height: calc(100vh - ${GLOBALS.CONSTANTS.HEADER_HEIGHT}px - 52px - ${props => props.theme.interfaceTopPadding});\r\n  background: ${props => props.theme.mainBg};\r\n  align-self: stretch;\r\n`;\r\n\r\n// Export Default\r\nexport default ReceiveNotifsPage;\r\n","import React from \"react\";\r\n\r\nimport { AiFillInfoCircle } from 'react-icons/ai';\r\nimport { Tooltip } from \"@material-ui/core\";\r\n\r\n// Faucet URLs\r\nfunction InfoTooltip({title, Infocolor=\"white\"}) {\r\n  // render\r\n  return (\r\n    <Tooltip style={{marginLeft: \"5px\"}} title={title}>\r\n        <span>\r\n          <AiFillInfoCircle style={{color: Infocolor}} />\r\n        </span>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\n// Export Default\r\nexport default InfoTooltip;","import { ethers } from \"ethers\";\r\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport { toast } from 'react-toastify';\r\nimport {toolingPostReq} from \"api/index\"\r\nimport { envConfig } from \"@project/contracts\";\r\nconst GAS_LIMIT = 50;\r\n\r\nconst ERROR_TOAST_DEFAULTS = {\r\n    type: toast.TYPE.ERROR,\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n  };\r\n\r\nconst checkForDelegateError = async(gasEstimate,library) => {\r\n    // return false if no error\r\n    // otherwise return error message\r\n    // get gas price\r\n\r\n    const gasPrice = await EPNSCoreHelper.getGasPriceInDollars(library);\r\n    const totalCost = gasPrice * gasEstimate;\r\n    if(totalCost > GAS_LIMIT){\r\n      return \"Gas Price is too high, Please try again in a while.\" \r\n    }\r\n    return false\r\n  }\r\n\r\n\r\nexport const createTransactionObject = async (newDelegatee,account,epnsToken,addresses,signerObject,library,setTxLoading) => {\r\n    \r\n\r\n    console.log(\"🚀 ~ file: ViewDelegateeItem.js ~ line 63 ~ createTransactionObject ~ newDelegatee\", newDelegatee)\r\n      const contractName = await epnsToken.name()\r\n      const nonce = await epnsToken.nonces(account)\r\n      const chainId = envConfig.coreContractChain\r\n      const contractAddress = addresses.epnsToken\r\n      const now = new Date()\r\n      const secondsSinceEpoch = Math.round(now.getTime() / 1000)\r\n      const expiry = (secondsSinceEpoch + 10800).toString()\r\n      console.log(expiry)\r\n  \r\n      const domain = {\r\n        name: contractName,\r\n        chainId: chainId,\r\n        verifyingContract: contractAddress\r\n      }\r\n  \r\n      const types = {\r\n        Delegation: [\r\n          { name: \"delegatee\", type: \"address\" },\r\n          { name: \"nonce\", type: \"uint256\" },\r\n          { name: \"expiry\", type: \"uint256\" },\r\n        ]\r\n      }\r\n  \r\n      const value = {\r\n        'delegatee': newDelegatee.toString(),\r\n        'nonce': nonce.toString(),\r\n        'expiry': expiry.toString()\r\n      }\r\n      let signature;\r\n      try{\r\n      signature=await signerObject._signTypedData(domain, types, value);\r\n      var {r, s, v} = ethers.utils.splitSignature(signature);\r\n      const gasEstimate = await epnsToken.estimateGas.delegateBySig(newDelegatee, nonce, expiry, v, r, s);\r\n        \r\n      const errorMessage = await checkForDelegateError(gasEstimate,library);\r\n      if(errorMessage){\r\n        return toast.dark(errorMessage, {\r\n          position: \"bottom-right\",\r\n          ...ERROR_TOAST_DEFAULTS\r\n        });\r\n      }\r\n      try{\r\n        await callDelegateAPI(signature, newDelegatee, nonce, expiry, account)\r\n         toast.dark(\"Successfully Delegated\", {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.SUCCESS,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      }catch(err){\r\n        toast.dark(err.message, {\r\n          position: \"bottom-right\",\r\n          ...ERROR_TOAST_DEFAULTS\r\n        });\r\n      }\r\n      finally{\r\n        setTxLoading(false);\r\n      }\r\n     }\r\n      catch(e){\r\n        console.log(\"error\",e);\r\n        toast.dark(e.message, {\r\n          position: \"bottom-right\",\r\n          ...ERROR_TOAST_DEFAULTS\r\n        });\r\n        setTxLoading(false);\r\n      }\r\n      \r\n  \r\n    }\r\n  \r\n    const callDelegateAPI = async (signature, delegatee, nonce, expiry,account) => {\r\n      console.log(`🚀 ~ file: PushGovernance.tsx ~ line 271 ~ callDelegateAPI ~ signature obj delegator: ${account} signature: ${signature} delegatee: ${delegatee} nonce: ${nonce} expiry: ${expiry}  `)\r\n      await toolingPostReq(\"/gov/gasless_delegate\", { delegator: account, signature: signature, delegatee: delegatee, nonce: nonce.toString(), expiry: expiry })\r\n    }\r\n  ","import React  from 'react';\r\n\r\nexport const executeDelegateTx = async (delegateeAddress,epnsToken,toast,setTxInProgress,library,LoaderToast) => {\r\n    console.log(\"delegateeAddress\", delegateeAddress)\r\n    let sendWithTxPromise;\r\n    sendWithTxPromise = epnsToken.delegate(delegateeAddress);\r\n    sendWithTxPromise\r\n      .then(async tx => {\r\n\r\n        let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        try {\r\n          await library.waitForTransaction(tx.hash);\r\n\r\n          toast.update(txToast, {\r\n            render: \"Transaction Completed!\",\r\n            type: toast.TYPE.SUCCESS,\r\n            autoClose: 5000\r\n          });\r\n\r\n          setTxInProgress(false);\r\n        }\r\n        catch(e) {\r\n          toast.update(txToast, {\r\n            render: \"Transaction Failed! (\" + e.name + \")\",\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 5000\r\n          });\r\n\r\n          setTxInProgress(false);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        toast.dark('Transaction Cancelled!', {\r\n          position: \"bottom-right\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        setTxInProgress(false);\r\n      })\r\n\r\n  }","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport Blockies from \"primaries/BlockiesIdenticon\";\r\nimport { Item, ItemH, ItemBreak, Image, Span, Anchor } from '../primaries/SharedStyling';\r\nimport { toast } from 'react-toastify';\r\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport {toolingPostReq} from \"../api/index\"\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport {Oval} from 'react-loader-spinner';\r\n\r\nimport Skeleton from '@yisheng90/react-loading';\r\nimport { FiTwitter } from 'react-icons/fi';\r\nimport { GoVerified } from 'react-icons/go';\r\nimport { IoMdShareAlt } from 'react-icons/io';\r\n\r\nimport { addresses } from \"@project/contracts\";\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport {createTransactionObject} from '../helpers/GaslessHelper';\r\nimport {executeDelegateTx} from '../helpers/WithGasHelper';\r\nimport Web3 from 'web3';\r\n\r\nexport const PUSH_BALANCE_TRESHOLD = 100; //minimum number of push\r\nexport const GAS_LIMIT = 50; //dollars limit of gas;\r\nexport const ERROR_TOAST_DEFAULTS = {\r\n  type: toast.TYPE.ERROR,\r\n  autoClose: 5000,\r\n  hideProgressBar: false,\r\n  closeOnClick: true,\r\n  pauseOnHover: true,\r\n  draggable: true,\r\n  progress: undefined\r\n};\r\n\r\n\r\nfunction ViewDelegateeItem({ delegateeObject, epnsToken, signerObject, pushBalance,setGaslessInfo, theme }) {\r\n  const { account, library } = useWeb3React();\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [txLoading, setTxLoading] = React.useState(false);\r\n  const [txInProgress, setTxInProgress] = React.useState(false);\r\n  const [isBalance, setIsBalance] = React.useState(false);\r\n  const [transactionMode,setTransactionMode] = React.useState('gasless');\r\n\r\n  const provider = new Web3.providers.HttpProvider('https://mainnet.infura.io/v3/4ff53a5254144d988a8318210b56f47a');\r\n  var web3 = new Web3(provider);\r\n  var ens = web3.eth.ens;\r\n\r\n  React.useEffect(() => {\r\n    setLoading(false);\r\n    if (pushBalance !== 0) {\r\n      setIsBalance(true)\r\n    }\r\n  }, [account, delegateeObject]);\r\n\r\n  const checkForDelegateError = async(gasEstimate) => {\r\n    // return false if no error\r\n    // otherwise return error message\r\n    // get gas price\r\n    const gasPrice = await EPNSCoreHelper.getGasPriceInDollars(library);\r\n    const totalCost = gasPrice * gasEstimate;\r\n    if(totalCost > GAS_LIMIT){\r\n      return \"Gas Price is too high, Please try again in a while.\" \r\n    }\r\n    return false\r\n  }\r\n\r\n  //execute delegate tx wth gas when tokenbalance < PUSH_BALANCE_TRESHOLD\r\n \r\n\r\n  const delegateAction = async (delegateeAddress) => {\r\n    if(txInProgress) return;\r\n    setTxInProgress(true);\r\n    // if (!isBalance) {\r\n    //   toast.dark(\"No PUSH to Delegate!\", {\r\n    //     position: \"bottom-right\",\r\n    //     ...ERROR_TOAST_DEFAULTS\r\n    //   });\r\n    //   return;\r\n    // }\r\n \r\n    setTxLoading(true);\r\n    if(transactionMode === 'withgas'){\r\n     await executeDelegateTx(delegateeAddress,epnsToken,toast,setTxLoading,library,LoaderToast);\r\n     setTxInProgress(false); \r\n     return;\r\n    }\r\n    if (pushBalance < PUSH_BALANCE_TRESHOLD) {\r\n      // await  executeDelegateTx(delegateeAddress,epnsToken,toast,setTxLoading,library,LoaderToast)\r\n      toast.dark(\"Atleast \" + PUSH_BALANCE_TRESHOLD +\" PUSH required for gasless delegation!\", {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      setTxLoading(false);\r\n      setTxInProgress(false);\r\n      return;\r\n    }\r\n    if(!web3.utils.isAddress(delegateeAddress))\r\n    delegateeAddress = await ens.getAddress(delegateeAddress);\r\n    await createTransactionObject(delegateeAddress,account,epnsToken,addresses,signerObject,library,setTxLoading);\r\n    setTxInProgress(false);\r\n    toolingPostReq('/gov/prev_delegation',{\"walletAddress\": account}).then(res=>{\r\n      console.log(\"result\",res.data.user)\r\n      setGaslessInfo(res.data.user);\r\n      // toast.dark(\"Successfully Fetched Prev Delegation Data\", {\r\n      //   position: \"bottom-right\",\r\n      //   type: toast.TYPE.SUCCESS,\r\n      //   autoClose: 5000,\r\n      //   hideProgressBar: false,\r\n      //   closeOnClick: true,\r\n      //   pauseOnHover: true,\r\n      //   draggable: true,\r\n      //   progress: undefined,\r\n      // });\r\n    }\r\n    ).catch(e=>{\r\n      setTxInProgress(false);\r\n      toast.dark(e, {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }).finally(()=>{\r\n      setTxInProgress(false);\r\n\r\n    })\r\n  }\r\n\r\n  // toast customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Oval\r\n        color={color}\r\n        height={30}\r\n        width={30}\r\n      />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  )\r\n\r\n  // render\r\n  return (\r\n    <Item\r\n      key={delegateeObject.wallet}\r\n    >\r\n      <DelegateeItem\r\n        theme={theme}\r\n      >\r\n        <DelegateeImageOuter>\r\n          <DelegateeImageInner>\r\n            {loading &&\r\n              <Skeleton color=\"#eee\" width=\"100%\" height=\"100%\" />\r\n            }\r\n            {!loading && delegateeObject.pic &&\r\n              <Image\r\n                src={`./delegatees/${delegateeObject.pic}.jpg`}\r\n                srcSet={`./delegatees/${delegateeObject.pic}@2x.jpg 2x, ./delegatees/${delegateeObject.pic}@3x.jpg 3x`}\r\n                alt={delegateeObject.name}\r\n              />\r\n            }\r\n            {!loading && !delegateeObject.pic &&\r\n              <Blockies seed={delegateeObject.wallet.toLowerCase()} opts={{ seed: delegateeObject.wallet.toLowerCase(), size: 30, scale: 10 }} />\r\n            }\r\n          </DelegateeImageInner>\r\n\r\n          <ItemH\r\n            position=\"absolute\"\r\n            top=\"10px\"\r\n            left=\"10px\"\r\n            bg=\"#00000088\"\r\n            padding=\"6px 10px\"\r\n            radius=\"22px\"\r\n          >\r\n            <GoVerified size={12} color=\"#fff\"/>\r\n            <Span size=\"12px\" color=\"#fff\" padding=\"0px 0px 0px 10px\" spacing=\"0.2em\" weight=\"600\" textAlign=\"center\">{delegateeObject.votingPower.toLocaleString()}</Span>\r\n          </ItemH>\r\n        </DelegateeImageOuter>\r\n\r\n        <DelegateeProfile>\r\n          <Item>\r\n            <ItemH>\r\n              <Span weight=\"400\" textAlign=\"center\">{delegateeObject.name}</Span>\r\n              <Anchor\r\n                href={delegateeObject.url}\r\n                target=\"_blank\"\r\n                title={\"Visit Twitter profile of \" + delegateeObject.name}\r\n                bg=\"transparent\"\r\n                radius=\"4px\"\r\n                padding=\"4px\"\r\n                margin=\"0px 6px\"\r\n              >\r\n                <FiTwitter size={12} color=\"#35c5f3\" />\r\n              </Anchor>\r\n            </ItemH>\r\n\r\n            <DelegateeWallet size=\"0.5em\" color=\"#aaa\" spacing=\"0.2em\" weight=\"600\" textAlign=\"center\">{delegateeObject.wallet}</DelegateeWallet>\r\n          </Item>\r\n          <ItemBreak></ItemBreak>\r\n          {/* <RadioGroup >\r\n                    <div style={{marginRight:\"0px\"}}>\r\n                    <input type=\"radio\" id=\"gasless\"  checked={transactionMode==\"gasless\"}  name=\"gasless\" value=\"gasless\" onChange={e=>setTransactionMode(e.target.value)}/> <br/>\r\n                    <Label><div style={{width:\"2rem\"}}>  Gasless  <InfoTooltip Infocolor={\"gray\"} title={\"The total rewards you have already claimed from the pool. This includes all the rewards including the ones already harvested.\"} /> </div>      \r\n                     </Label><br/>\r\n                   </div>\r\n                    <div style={{width:\"8rem\"}}>\r\n                    <input type=\"radio\" id=\"withgas\" \r\n                    checked={transactionMode==\"withgas\"}\r\n                    name=\"gas\" value=\"withgas\" onChange={e=>setTransactionMode(e.target.value)}/>\r\n                    <Label > <div style={{width:\"5rem\"}}> With Gas   <InfoTooltip Infocolor={\"gray\"} title={\"The total rewards you have already claimed from the pool. This includes all the rewards including the ones already harvested.\"} /> </div>\r\n                    </Label><br/>  \r\n                    </div>\r\n                    </RadioGroup> */}\r\n                <SelectTag onChange={e=>setTransactionMode(e.target.value)}>\r\n                <>  <option value=\"gasless\"> Gasless  </option> Test</>\r\n                  <option value=\"withgas\">With Gas</option>\r\n                </SelectTag>\r\n          <ItemBreak></ItemBreak>\r\n          <UnsubscribeButton >\r\n                \r\n            {\r\n              \r\n              txLoading ? (\r\n                <ActionTitle>\r\n                 <Oval\r\n                   color=\"#35c5f3\"\r\n                   height={20}\r\n                   width={20}\r\n                />\r\n                </ActionTitle>\r\n              ): (\r\n                <>\r\n               \r\n                <ActionTitle onClick={() => {\r\n                 delegateAction(delegateeObject.wallet)\r\n                }}\r\n                >Delegate</ActionTitle>\r\n                </>\r\n              )\r\n            }\r\n          </UnsubscribeButton>\r\n\r\n          <Item\r\n            position=\"absolute\"\r\n            bottom=\"10px\"\r\n            left=\"-2px\"\r\n            padding=\"4px\"\r\n          >\r\n            <Anchor\r\n              href={delegateeObject.forum}\r\n              target=\"_blank\"\r\n              title={\"Visit forum post of \" + delegateeObject.name}\r\n              bg=\"transparent\"\r\n              radius=\"4px\"\r\n              padding=\"2px\"\r\n            >\r\n              <IoMdShareAlt size={16} color=\"#fff\" />\r\n            </Anchor>\r\n          </Item>\r\n        </DelegateeProfile>\r\n      </DelegateeItem>\r\n    </Item>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst SelectTag=styled.select`\r\n  border: none;\r\n  padding: 0 10px;\r\n  background: transparent;\r\n  outline: none;\r\n`;\r\n\r\nconst DelegateeItem = styled.div`\r\n  max-width: 220px;\r\n  min-width: 220px;\r\n  flex: 1;\r\n  margin: 20px 20px;\r\n  padding: 1px;\r\n  border: 2px solid #fafafa;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-self: flex-start;\r\n  position: relative;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.theme == \"nominee\" ? \"#35c5f3\" : \"linear-gradient( 283deg, #34c5f2 0%, #e20880 45%, #35c5f3 100%)\"};\r\n  }\r\n`\r\n\r\nconst DelegateeImageOuter = styled.div`\r\n  padding-top: 100%;\r\n  position: relative;\r\n`\r\n\r\nconst DelegateeImageInner = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  overflow: hidden;\r\n  border-top-right-radius: 16px;\r\n  border-top-left-radius: 16px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst DelegateeProfile = styled(ItemH)`\r\n  background: #fff;\r\n  border-bottom-right-radius: 16px;\r\n  border-bottom-left-radius: 90px;\r\n  padding: 20px;\r\n`\r\n\r\nconst DelegateeWallet = styled(Span)`\r\n  word-break: break-all;\r\n  padding-top: 4px;\r\n`\r\n\r\nconst ChannelActionButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${ props => props.disabled && css`\r\n    &:hover {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n    &:active {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n  `}\r\n`\r\n\r\nconst ActionTitle = styled.span`\r\n  ${ props => props.hideit && css`\r\n    visibility: hidden;\r\n  `};\r\n`\r\n\r\nconst UnsubscribeButton = styled(ChannelActionButton)`\r\n  background: #000;\r\n`\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`\r\n\r\n// Export Default\r\nexport default ViewDelegateeItem;\r\n","import React, { useState } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport styled, { css, useTheme } from 'styled-components';\r\nimport { Section, Content, Item, ItemH, A, B, H2, H3, LI, Span, Button, Input, UL } from '../primaries/SharedStyling';\r\nimport { Oval } from 'react-loader-spinner'\r\nimport { BsChevronExpand } from 'react-icons/bs';\r\nimport { toast } from 'react-toastify';\r\nimport InfoTooltip from \"../primaries/InfoTooltip\";\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport { ethers } from \"ethers\";\r\nimport { GAS_LIMIT, PUSH_BALANCE_TRESHOLD } from \"components/ViewDelegateeItem\";\r\nimport { toolingPostReq } from \"../api/index\";\r\nimport Blockies from \"../primaries/BlockiesIdenticon\";\r\n\r\nimport { ThemeProvider } from \"styled-components\"\r\n\r\nimport ViewDelegateeItem from \"components/ViewDelegateeItem\";\r\n\r\nimport { createTransactionObject } from '../helpers/GaslessHelper';\r\nimport { executeDelegateTx } from '../helpers/WithGasHelper';\r\nimport { envConfig } from \"@project/contracts\";\r\n\r\nconst delegateesJSON = require(\"config/delegatees.json\")\r\nconst VOTING_TRESHOLD = 75000; //the treshold for delegates\r\n\r\n// Create Header\r\nfunction GovernancePage() {\r\n  // React GA Analytics\r\n  ReactGA.pageview(\"/governance\");\r\n\r\n  // setup themes (styled components)\r\n  const themes = useTheme();\r\n\r\n  const { account, library, chainId } = useWeb3React();\r\n  const onCoreNetwork = chainId === envConfig.coreContractChain;\r\n\r\n  const [address, setAddress] = React.useState('');\r\n  const [ens, setENS] = React.useState('');\r\n  const [ensFetched, setENSFetched] = React.useState(false);\r\n\r\n  const [dashboardLoading, setDashboardLoading] = React.useState(true);\r\n  const [delegateesLoading, setDelegateesLoading] = React.useState(true);\r\n\r\n  const [txInProgress, setTxInProgress] = React.useState(false);\r\n  const [controlAt, setControlAt] = React.useState(0);\r\n  const [delegateesObject, setDelegateesObject] = React.useState({});\r\n  const [pushDelegatees, setPushDelegatees] = React.useState([]);\r\n  const [pushNominees, setPushNominees] = React.useState([]);\r\n  const [epnsToken, setEpnsToken] = React.useState(null);\r\n  const [tokenBalance, setTokenBalance] = React.useState(null);\r\n  const [prettyTokenBalance, setPrettyTokenBalance] = React.useState(null);\r\n\r\n  const [showDelegateePrompt, setShowDelegateePrompt] = React.useState(false);\r\n  const [delegatee, setDelegatee] = React.useState(null);\r\n\r\n  const [showAnswers, setShowAnswers] = React.useState([]);\r\n  const [selfVotingPower, setSelfVotingPower] = React.useState(null);\r\n  const [newDelegateeAddress, setNewDelegateeAddress] = React.useState(\"0x\");\r\n  const [newDelegateeVotingPower, setNewDelegateeVotingPower] = React.useState(null);\r\n  const [signerObject, setSignerObject] = React.useState(null);\r\n  const [gaslessInfo, setGaslessInfo] = useState(null);\r\n  const [transactionMode, setTransactionMode] = React.useState('gasless');\r\n\r\n  const toggleShowAnswer = (id) => {\r\n    let newShowAnswers = [...showAnswers];\r\n    newShowAnswers[id] = !newShowAnswers[id];\r\n    setShowAnswers(newShowAnswers);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (!onCoreNetwork) {\r\n      const url = window.location.origin;\r\n      window.location.replace(`${url}/#/notavailable`);\r\n    }\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    toolingPostReq('/gov/prev_delegation', { \"walletAddress\": account }).then(res => {\r\n      console.log(\"result\", res.data.user)\r\n      setGaslessInfo(res.data.user);\r\n    }\r\n    )\r\n  }, []);\r\n  React.useEffect(() => {\r\n    if (account && account != '') {\r\n      // Check if the address is the same\r\n      if (address !== account) {\r\n        setENS('');\r\n        setENSFetched(false);\r\n\r\n        // get ens\r\n        library\r\n          .lookupAddress(account).then(function (name) {\r\n            setENS(name);\r\n            setENSFetched(true);\r\n            setAddress(account);\r\n          })\r\n          .catch(() => {\r\n            setENSFetched(true);\r\n            setAddress(account);\r\n          })\r\n      }\r\n\r\n    }\r\n  }, [account]);\r\n\r\n  React.useEffect(() => {\r\n    console.log(account)\r\n    if (!!(library && account)) {\r\n      let signer = library.getSigner(account);\r\n      setSignerObject(signer)\r\n      const epnsTokenContract = new ethers.Contract(addresses.epnsToken, abis.epnsToken, signer);\r\n      setEpnsToken(epnsTokenContract);\r\n    }\r\n  }, [account, library]);\r\n\r\n  React.useEffect(() => {\r\n    if (epnsToken) {\r\n      getMyInfo()\r\n    }\r\n  }, [epnsToken, account, library, prettyTokenBalance, tokenBalance]);\r\n\r\n  React.useEffect(() => {\r\n    setDashboardLoading(false);\r\n  }, [account]);\r\n\r\n  React.useEffect(() => {\r\n    if (!epnsToken) return;\r\n    const delegateesList = Object.values(delegateesJSON);\r\n    // write helper function to sort by voting power\r\n    const votingPowerSorter = (a, b) => {\r\n      return b.votingPower - a.votingPower\r\n    };\r\n\r\n\r\n    // go through all the delegates json and get their voting power\r\n    const allDelegateesPromise = delegateesList.map(async (oneDelegate: any) => {\r\n      const { wallet } = oneDelegate;\r\n      const votingPower = await EPNSCoreHelper.getVotingPower(wallet, epnsToken);\r\n      return { ...oneDelegate, votingPower: Number(votingPower) };\r\n    });\r\n\r\n\r\n    Promise.all(allDelegateesPromise).then((allDelegatees) => {\r\n      // filter for delegates (i.e) Those who have above 75000 power,\r\n      // use the parameter votingPowerSimulate parameter to simulate voting power above the treshold\r\n      const delegateesAbove75k = allDelegatees.filter(({ votingPower, votingPowerSimulate }) => {\r\n        return (votingPower >= VOTING_TRESHOLD)\r\n      });\r\n\r\n      // sort by voting power\r\n      const sortedDelegatees = [...delegateesAbove75k].sort(votingPowerSorter);\r\n      setPushDelegatees(sortedDelegatees);\r\n\r\n      // calculate for  the nominees (i.e peoplw who have voting power less than 75k)\r\n      const delegateesBelow75k = allDelegatees.filter(({ votingPower }) => {\r\n        return votingPower < VOTING_TRESHOLD\r\n      });\r\n\r\n      const sortedNominees = [...delegateesBelow75k].sort(votingPowerSorter);\r\n\r\n      // sort by voting power\r\n      setPushNominees(sortedNominees);\r\n\r\n      setDelegateesLoading(false);\r\n    })\r\n    setDelegateesObject(delegateesJSON)\r\n    // in order to\r\n  }, [epnsToken])\r\n\r\n  const isValidAddress = (address) => {\r\n    if (ethers.utils.isAddress(address)) {\r\n      return true\r\n    }\r\n    else {\r\n      toast.dark(\"Invalid address!\", {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const getVotingPower = async (address) => {\r\n    try {\r\n      const votingPower = await EPNSCoreHelper.getVotingPower(address, epnsToken, true)\r\n      setNewDelegateeVotingPower(votingPower)\r\n    }\r\n    catch (err) {\r\n      console.log(\"🚀 ~ file: Delegate.tsx ~ line 86 ~ getVotingPower ~ err\", err)\r\n    }\r\n  }\r\n\r\n  const getMyInfo = async () => {\r\n    let bal = await epnsToken.balanceOf(account)\r\n    let decimals = await epnsToken.decimals()\r\n    let tokenBalance = await Number(bal / Math.pow(10, decimals))\r\n    let newBal = tokenBalance.toString();\r\n    let delegatee = await epnsToken.delegates(account)\r\n    let votes = await epnsToken.getCurrentVotes(account)\r\n    let votingPower = await Number(votes / Math.pow(10, decimals))\r\n    let prettyVotingPower = votingPower.toLocaleString();\r\n    setTokenBalance(tokenBalance)\r\n    setPrettyTokenBalance(newBal)\r\n    setDelegatee(delegatee)\r\n    setSelfVotingPower(prettyVotingPower)\r\n  }\r\n\r\n  const checkForDelegateError = async (gasEstimate) => {\r\n    // return false if no error\r\n    // otherwise return error message\r\n\r\n    // get gas price\r\n    const gasPrice = await EPNSCoreHelper.getGasPriceInDollars(library);\r\n    const totalCost = gasPrice * gasEstimate;\r\n    if (totalCost > GAS_LIMIT) {\r\n      return \"Gas Price is too high, Please try again in a while.\"\r\n    }\r\n    return false\r\n  }\r\n\r\n\r\n  //execute delegate tx wth gas when tokenbalance < PUSH_BALANCE_TRESHOLD\r\n\r\n\r\n  const delegateAction = async (newDelegatee) => {\r\n    setTxInProgress(true);\r\n\r\n    const isAddress = await isValidAddress(newDelegatee)\r\n    console.log(isAddress)\r\n    if (!isAddress) {\r\n      setTxInProgress(false);\r\n      return;\r\n    }\r\n    console.log(\"balance\", tokenBalance);\r\n    console.log(\"transaction mode\", transactionMode)\r\n\r\n    if (tokenBalance == 0) {\r\n      toast.dark(\"No PUSH to Delegate!\", {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      setTxInProgress(false);\r\n      return;\r\n    }\r\n\r\n    if (transactionMode === 'withgas') {\r\n      executeDelegateTx(newDelegatee, epnsToken, toast, setTxInProgress, library, LoaderToast)\r\n      return;\r\n    }\r\n    if (tokenBalance < PUSH_BALANCE_TRESHOLD) {\r\n      toast.dark(\"Atleast \" + PUSH_BALANCE_TRESHOLD + \" PUSH required for gasless delegation!\", {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      setTxInProgress(false);\r\n      return;\r\n    }\r\n    await createTransactionObject(newDelegatee, account, epnsToken, addresses, signerObject, library, setTxInProgress);\r\n    toolingPostReq('/gov/prev_delegation', { \"walletAddress\": account }).then(res => {\r\n      console.log(\"result\", res.data.user)\r\n      setGaslessInfo(res.data.user);\r\n      // toast.dark(\"Successfully Fetched Prev Delegation Data\", {\r\n      //   position: \"bottom-right\",\r\n      //   type: toast.TYPE.SUCCESS,\r\n      //   autoClose: 5000,\r\n      //   hideProgressBar: false,\r\n      //   closeOnClick: true,\r\n      //   pauseOnHover: true,\r\n      //   draggable: true,\r\n      //   progress: undefined,\r\n      // });\r\n    }\r\n    ).catch(e => {\r\n      toast.dark(e, {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    })\r\n  }\r\n\r\n\r\n\r\n  // handle user action at control center\r\n  const userClickedAt = (controlIndex) => {\r\n    setControlAt(controlIndex);\r\n  }\r\n\r\n  // toast customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Oval\r\n        color={color}\r\n        height={30}\r\n        width={30}\r\n      />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  )\r\n\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Section>\r\n        <Content themes={themes.mainBg} padding=\"20px 20px 30px 20px\">\r\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 15px 15px 15px\">\r\n            {(dashboardLoading || !prettyTokenBalance || !selfVotingPower) &&\r\n              <Item padding=\"20px\">\r\n                <Oval color=\"#e20880\" height={40} width={40} />\r\n              </Item>\r\n            }\r\n\r\n            {!dashboardLoading && prettyTokenBalance && selfVotingPower &&\r\n              <Item margin=\"10px 0px 0px 0px\" self=\"stretch\" items=\"stretch\">\r\n                <StatsCard\r\n                  align=\"stretch\"\r\n                  justify=\"flex-start\"\r\n                  self=\"stretch\"\r\n                  bg={themes.mainBg}\r\n                  op=\"1\"\r\n                >\r\n                  <StatsHeading bg=\"#e20880\">Governance Dashboard</StatsHeading>\r\n                  <StatsContent>\r\n                    <ItemH align=\"stretch\" self=\"stretch\">\r\n                      <Item align=\"center\" self=\"center\" flex=\"initial\" padding=\"10px\">\r\n                        <Blocky>\r\n                          <BlockyInner>\r\n                            <Blockies seed={account.toLowerCase()} opts={{ seed: account.toLowerCase(), size: 10, scale: 10 }} />\r\n                          </BlockyInner>\r\n                        </Blocky>\r\n                        <Wallet>\r\n                          {!ensFetched &&\r\n                            <Oval\r\n                              color=\"#FFF\"\r\n                              height={16}\r\n                              width={16}\r\n                            />\r\n                          }\r\n                          {ensFetched && ens &&\r\n                            <>{ens}</>\r\n                          }\r\n                          {ensFetched && !ens &&\r\n                            <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\r\n                          }\r\n                        </Wallet>\r\n                      </Item>\r\n\r\n                      <Item align=\"flex-start\" self=\"stretch\" padding=\"10px\" size=\"16px\">\r\n                        <ItemH flex=\"initial\" padding=\"5px\">\r\n                          <Span weight=\"500\" padding=\"0px 8px 0px 0px\" color={themes.color}>$PUSH Balance: </Span>\r\n                          <CurvedSpan bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"4px 8px\" textTransform=\"uppercase\">{prettyTokenBalance}</CurvedSpan>\r\n                        </ItemH>\r\n\r\n                        <ItemH flex=\"initial\" padding=\"5px\">\r\n                          <Span weight=\"500\" padding=\"0px 8px 0px 0px\" color={themes.color}>Voting Power: </Span>\r\n                          <CurvedSpan bg=\"#35c5f3\" color=\"#fff\" weight=\"600\" padding=\"4px 8px\" textTransform=\"uppercase\">{selfVotingPower}</CurvedSpan>\r\n                        </ItemH>\r\n                        {delegatee !== \"0x0000000000000000000000000000000000000000\" &&\r\n                          <ItemH flex=\"initial\" padding=\"5px\">\r\n                            <Span padding=\"0px 8px 0px 0px\">Delegated To: </Span>\r\n                            <Span weight=\"600\">{delegatee}</Span>\r\n                          </ItemH>\r\n                        }\r\n\r\n                        {\r\n                          (gaslessInfo) ?\r\n                            // <Item align=\"flex-start\" self=\"stretch\" padding=\"10px\" size=\"16px\">\r\n                            <>\r\n                              <ItemH flex=\"initial\" padding=\"5px\">\r\n                                <Span weight=\"500\" padding=\"0px 8px 0px 0px\">Last Gasless Delegation On: </Span>\r\n                                <CurvedSpan bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"4px 8px\" textTransform=\"uppercase\">{new Date(gaslessInfo.timestamp).toLocaleDateString()}</CurvedSpan>\r\n                              </ItemH>\r\n                              <ItemH flex=\"initial\" padding=\"5px\">\r\n                                <Span weight=\"500\" padding=\"0px 8px 0px 0px\">Last Gasless Delegation To: </Span>\r\n                                <CurvedSpan bg=\"#35c5f3\" color=\"#fff\" weight=\"600\" padding=\"4px 8px\" textTransform=\"uppercase\">{gaslessInfo.delegatee}</CurvedSpan>\r\n                              </ItemH>\r\n                            </>\r\n                            :\r\n                            <p>No recent Gasless Delegation </p>\r\n                        }\r\n\r\n                      </Item>\r\n                    </ItemH>\r\n\r\n                    {showDelegateePrompt &&\r\n                      <Item\r\n                        bg=\"#eeeeeeee\"\r\n                        position=\"absolute\"\r\n                        top=\"0\"\r\n                        bottom=\"0\"\r\n                        left=\"0\"\r\n                        right=\"0\"\r\n                      >\r\n                        <Item align=\"stretch\" self=\"stretch\" margin=\"0px 20px 40px 20px\">\r\n                          <Span color=\"#000\" weight=\"400\">Enter delegatee address</Span><br></br>\r\n                          <Input\r\n                            placeholder=\"Enter delegatee address\"\r\n                            radius=\"4px\"\r\n                            padding=\"12px\"\r\n                            self=\"stretch\"\r\n                            bg=\"#fff\"\r\n                            value={newDelegateeAddress}\r\n                            onChange={async (e) => {\r\n                              setNewDelegateeAddress(e.target.value)\r\n                              setNewDelegateeVotingPower(null)\r\n                            }}\r\n                          />\r\n                          {newDelegateeVotingPower && newDelegateeAddress &&\r\n                            <StatsInnerTitle>Voting Power: {newDelegateeVotingPower}</StatsInnerTitle>\r\n                          }\r\n                        </Item>\r\n\r\n                      </Item>\r\n                    }\r\n\r\n                    <Item self=\"stretch\" align=\"flex-end\" >\r\n                      <ItemH >\r\n                        <RadioGroup >\r\n                          <div style={{ marginRight: \"0px\" }}>\r\n                            <input type=\"radio\" id=\"gasless\" checked={transactionMode == \"gasless\"} name=\"gasless\" value=\"gasless\" onChange={e => setTransactionMode(e.target.value)} /> <br />\r\n                            <Label><div style={{ width: \"2rem\" }}>  Gasless  <InfoTooltip Infocolor={\"gray\"}\r\n                              title={\"Delegate your PUSH votes without paying gas fee.   \" + \"Conditions: \" + \"Wallet address must hold at least 100 PUSH.\" + \"Gasless delegation is enabled only when the gas fee is less than $50\" + \"Once delegated, the same wallet address could do gasless delegation again only after 7 days\"} /> </div>\r\n                            </Label><br />\r\n                          </div>\r\n                          <div style={{ width: \"8rem\" }}>\r\n                            <input type=\"radio\" id=\"withgas\"\r\n                              checked={transactionMode == \"withgas\"}\r\n                              name=\"gas\" value=\"withgas\" onChange={e => setTransactionMode(e.target.value)} />\r\n                            <Label > <div style={{ width: \"5rem\" }}> With Gas   <InfoTooltip Infocolor={\"gray\"} title={\"Delegate you PUSH votes by paying gas fee\"} /> </div>\r\n                            </Label><br />\r\n                          </div>\r\n                        </RadioGroup>\r\n                        {!txInProgress &&\r\n                          <ButtonAlt\r\n                            bg={txInProgress ? \"#999\" : \"#e20880\"}\r\n                            disabled={txInProgress ? true : false}\r\n                            onClick={() => {\r\n                              if (showDelegateePrompt) {\r\n                                delegateAction(newDelegateeAddress)\r\n                              }\r\n                              else {\r\n                                setShowDelegateePrompt(true)\r\n                              }\r\n                            }}\r\n                          >\r\n\r\n                            <Span color=\"#fff\" weight=\"400\">Delegate to Others</Span>\r\n\r\n                          </ButtonAlt>\r\n                        }\r\n                        {!showDelegateePrompt && !txInProgress &&\r\n                          <ButtonAlt\r\n                            bg={txInProgress ? \"#999\" : \"#51CAF3\"}\r\n                            disabled={txInProgress ? true : false}\r\n                            onClick={() => { delegateAction(account) }}\r\n                          >\r\n                            <Span color=\"#fff\" weight=\"400\">Delegate to Myself</Span>\r\n\r\n                          </ButtonAlt>\r\n                        }\r\n\r\n                        <ButtonAlt\r\n                          bg={\"#000\"}\r\n                          onClick={\r\n                            () => {\r\n                              if (showDelegateePrompt) {\r\n                                getVotingPower(newDelegateeAddress)\r\n                              }\r\n                              else {\r\n                                setShowDelegateePrompt(true)\r\n                              }\r\n                            }\r\n                          }\r\n                        >{\r\n                            txInProgress ? (\r\n                              <ActionTitle>\r\n                                <Oval\r\n                                  color=\"#35c5f3\"\r\n                                  height={20}\r\n                                  width={20}\r\n                                />\r\n                              </ActionTitle>\r\n                            ) :\r\n\r\n\r\n                              <Span color=\"#fff\" weight=\"400\">Query Voting Power</Span>\r\n                          }\r\n                        </ButtonAlt>\r\n\r\n                        {showDelegateePrompt &&\r\n                          <ButtonAlt\r\n                            bg=\"#000\"\r\n                            onClick={() => { setShowDelegateePrompt(false) }}\r\n                          >\r\n                            <Span color=\"#fff\" weight=\"400\">Close</Span>\r\n                          </ButtonAlt>\r\n                        }\r\n                      </ItemH>\r\n\r\n                    </Item>\r\n                  </StatsContent>\r\n                  <StatsPreview color=\"#e20880\">MY INFO</StatsPreview>\r\n                </StatsCard>\r\n              </Item>\r\n            }\r\n          </Item>\r\n\r\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"15px 15px 0px 15px\">\r\n            <StatsCard\r\n              align=\"stretch\"\r\n              justify=\"flex-start\"\r\n              self=\"stretch\"\r\n              bg={themes.mainBg}\r\n            >\r\n              <StatsHeading bg=\"#35c5f3\">Meet the PUSH Nominees</StatsHeading>\r\n              <NomineeContainer>\r\n                {delegateesLoading ? (\r\n                  <ContainerInfo>\r\n                    <Oval\r\n                      color=\"#35c5f3\"\r\n                      height={40}\r\n                      width={40}\r\n                    />\r\n                  </ContainerInfo>\r\n                ) : (\r\n                  <AbsoluteWrapper>\r\n                    {\r\n                      pushNominees.map((onePushNominee) => {\r\n                        return (\r\n                          <ViewDelegateeItem\r\n                            key={onePushNominee.wallet}\r\n                            delegateeObject={onePushNominee}\r\n                            epnsToken={epnsToken}\r\n                            pushBalance={tokenBalance}\r\n                            signerObject={signerObject}\r\n                            setGaslessInfo={setGaslessInfo}\r\n                            theme=\"nominee\"\r\n                          />\r\n                        )\r\n                      })\r\n                    }\r\n                  </AbsoluteWrapper>\r\n                )\r\n                }\r\n              </NomineeContainer>\r\n            </StatsCard>\r\n          </Item>\r\n        </Content>\r\n\r\n        <Content padding=\"20px 20px 0px\">\r\n          <Item align=\"flex-start\" margin=\"0px 15px 0px 15px\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span weight=\"200\" color={themes.color}>PUSH </Span>\r\n              <Span bg=\"#35c5f3\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">DELEGATEES</Span>\r\n            </H2>\r\n            <H3 color={themes.color}>Let's start <B>governing!!</B> </H3>\r\n          </Item>\r\n\r\n          <Item>\r\n            {dashboardLoading &&\r\n              <ContainerInfo>\r\n                <Oval\r\n                  color=\"#35c5f3\"\r\n                  height={40}\r\n                  width={40}\r\n                />\r\n              </ContainerInfo>\r\n            }\r\n\r\n            {!dashboardLoading && controlAt == 0 &&\r\n              <ItemH\r\n                padding=\"0px 20px 20px 20px\"\r\n                self=\"stretch\"\r\n              >\r\n                {pushDelegatees.length == 0 &&\r\n                  <Item align=\"flex-start\" self=\"stretch\">\r\n                    <Span padding=\"10px 10px\" margin=\"10px 0px\" bg=\"#666\" color=\"#fff\" weight=\"600\">🤷 Awkward!!</Span>\r\n                    <Span padding=\"10px 10px\" margin=\"10px 0px\" bg=\"#666\" color=\"#fff\" weight=\"600\">Show some 💕 to Nominees to kickstart Governance!</Span>\r\n                  </Item>\r\n                }\r\n                {pushDelegatees.length > 0 &&\r\n                  pushDelegatees.map((oneDelegatee) => {\r\n                    return (\r\n                      <>\r\n                        <ViewDelegateeItem\r\n                          key={oneDelegatee.wallet}\r\n                          delegateeObject={oneDelegatee}\r\n                          epnsToken={epnsToken}\r\n                          signerObject={signerObject}\r\n                          pushBalance={tokenBalance}\r\n                          setGaslessInfo={setGaslessInfo}\r\n                          theme=\"delegate\"\r\n                        />\r\n                      </>\r\n                    );\r\n                  })\r\n                }\r\n              </ItemH>\r\n            }\r\n          </Item>\r\n        </Content>\r\n\r\n        {/* FAQs */}\r\n        <Content padding=\"20px 20px 35px\">\r\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"-10px 20px 0px 20px\">\r\n\r\n            {/* Question */}\r\n            <Item align=\"stretch\" margin=\"0px 0px 0px 0px\">\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => { toggleShowAnswer(0) }}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    What are PUSH Delegatees?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                </Question>\r\n\r\n                {showAnswers[0] &&\r\n                  <Answer>\r\n                    <Span>\r\n                      Active community members who have at least <b>75,000 $PUSH</b> delegated to them.\r\n                      They will be able to create proposals on Snapshot that are approved on the <AMod href=\"https://gov.epns.io/\"> forum </AMod>\r\n                    </Span>\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => { toggleShowAnswer(1) }}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    What are PUSH Nominees\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                </Question>\r\n\r\n                {showAnswers[1] &&\r\n                  <Answer>\r\n                    <Span>\r\n                      Active community members who can be delegated $PUSH to vote for proposals Snapshot. If you wish to be PUSH Nominee, submit your nomination\r\n                      <AMod href=\"https://gov.epns.io/t/epns-push-delegatee-nominations/21\"> here. </AMod>\r\n                      Once they get at least <b>75,000 $PUSH </b> delegated to them, they become a PUSH Delegatee.\r\n                    </Span>\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => { toggleShowAnswer(2) }}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    How can I become a PUSH Nominee?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                </Question>\r\n\r\n                {showAnswers[2] &&\r\n                  <Answer>\r\n                    <Span>Step-by-step process:</Span>\r\n                    <UL>\r\n                      <LI>\r\n                        <Span>Sign up on:- <AMod href=\"https://gov.epns.io/\" target=\"_blank\" title=\"Join our EPNS's Telegram channel\">EPNS Governance Portal</AMod></Span>\r\n                      </LI>\r\n                      <LI>\r\n                        <Span>Go to:- <AMod href=\"https://gov.epns.io/t/epns-push-delegatee-nominations/21\" target=\"_blank\" title=\"Join our EPNS's Telegram channel\">https://gov.epns.io/t/epns-push-delegatee-nominations/21</AMod></Span>\r\n                      </LI>\r\n                      <LI>\r\n                        <Span>Submit your nomination by replying to the above post in the PROPOSED TEMPLATE.</Span>\r\n                      </LI>\r\n                    </UL>\r\n                    <Span>\r\n                      Now, once your nomination receives minimum of 10 likes,\r\n                      We will be adding your wallet address on our Governance Front end within 5-7 days.\r\n                      And later community members can start delegating votes to you.\r\n                    </Span>\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => { toggleShowAnswer(3) }}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    What if I don't wish to be a PUSH Nominee?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                </Question>\r\n\r\n                {showAnswers[3] &&\r\n                  <Answer>\r\n                    <Span>\r\n                      No problem! You can show support to your favourite PUSH Nominees by liking their nominations <AMod href=\"https://gov.epns.io/t/epns-push-delegatee-nominations/21\">here</AMod>.\r\n                    </Span>\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => { toggleShowAnswer(4) }}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    Where should I start?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                </Question>\r\n\r\n                {showAnswers[4] &&\r\n                  <Answer>\r\n                    <Span>Visit <AMod href=\"https://gov.epns.io/\" target=\"_blank\" title=\"Join our EPNS's Telegram channel\">EPNS Governance Portal</AMod> and introduce yoursef on the platform in the suggested format.</Span>\r\n\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => { toggleShowAnswer(5) }}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    What happens to the delegated voting power when I sell my PUSH tokens?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                </Question>\r\n\r\n                {showAnswers[5] &&\r\n                  <Answer>\r\n                    <Span>If you delegate your voting power to someone/yourself and later you sell your\r\n                      PUSH tokens, then the voting power of those tokens gets revoked. Now the new owner gets to decide whom to delegate to. </Span>\r\n\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => { toggleShowAnswer(6) }}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    How can I cast my vote?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                </Question>\r\n\r\n                {showAnswers[6] &&\r\n                  <Answer>\r\n                    <Span>Please visit <AMod href=\"https://snapshot.org/#/epns.eth\" target=\"_blank\" title=\"EPNS Governance - Snapshot Portal\">EPNS Governance - Snapshot Portal</AMod> to view the ongoing on-chain proposals and cast your vote.</Span>\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => { toggleShowAnswer(7) }}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    How can I keep up with EPNS Governance?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                </Question>\r\n\r\n                {showAnswers[7] &&\r\n                  <Answer>\r\n                    <Span>Join our <AMod href=\"https://t.me/epnsproject\" target=\"_blank\" title=\"Join our EPNS's Telegram channel\">Telegram</AMod>, follow us on <AMod href=\"https://twitter.com/epnsproject\" target=\"_blank\" title=\"Join our EPNS's Twitter channel\">Twitter</AMod>, and sign up for our 5 minute <AMod href=\"https://epns.substack.com/\" target=\"_blank\" title=\"Join our EPNS's Twitter channel\">weekly product updates</AMod>.</Span>\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n            </Item>\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst RadioGroup = styled.div`\r\n  display:flex;\r\n  justify-content:space-around;\r\n  align-items:center;\r\n  width:300px;\r\n  margin:0px 20px;\r\n  div{\r\n    display:flex;\r\n    justify-content:space-around;\r\n    align-items:center;\r\n    width:100px;\r\n  }\r\n`;\r\n\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`\r\n\r\nconst Question = styled(Button)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n  background: #fff;\r\n`\r\nconst Answer = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n`\r\n\r\nconst QnAItem = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n  flex: auto;\r\n  margin: 15px 0px;\r\n  border: 1px solid ${props => props.theme.qnaBgBorder};\r\n  border-radius: 10px;\r\n  box-shadow: 0px 5px 20px -10px rgb(0 0 0 / 0.20);\r\n  overflow: hidden;\r\n\r\n  & ${Question} {\r\n    background: ${props => props.theme.qnaBg};\r\n    justify-content: flex-start;\r\n    text-transform: uppercase;\r\n\r\n    & ${Span} {\r\n      font-weight: 400;\r\n      letter-spacing: 0.2em;\r\n      margin-left: 10px;\r\n      flex: 1;\r\n    }\r\n\r\n    &:hover {\r\n      & ${Span} {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  & ${Answer} {\r\n    border: 1px solid #e6e6e6;\r\n    border-top: 1px solid #e6e6e6;\r\n    border-bottom-left-radius: 10px;\r\n    border-bottom-right-radius: 10px;\r\n    padding: 10px 15px;\r\n    align-items: flex-start;\r\n    background: #fff;\r\n\r\n    & ${Span} {\r\n      line-height: 1.5em;\r\n      margin: 10px;\r\n      color: #000 ;\r\n      font-size: 1.05em;\r\n    }\r\n  }\r\n`\r\n\r\nconst AMod = styled(A)`\r\n  color: #e20880;\r\n  font-weight: 500;\r\n`\r\n\r\nconst ActionTitle = styled.span`\r\n  ${props => props.hideit && css`\r\n    visibility: hidden;\r\n  `};\r\n`\r\nconst Label = styled.label`\r\n    margin:\"10px\";\r\n`;\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`\r\nconst StatsCard = styled(Item)`\r\n  overflow: hidden;\r\n  min-width: 180px;\r\n\r\n  border-radius: 12px;\r\n  border: 1px solid rgb(225, 225, 225);\r\n\r\n  &:hover {\r\n    opacity: ${props => props.op ? \"0.9\" : props.op}\r\n  }\r\n`;\r\n\r\nconst StatsHeading = styled(Item)`\r\n  flex: 0;\r\n  align-self: stretch;\r\n  color: #fff;\r\n  top: 0px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.1em;\r\n  font-size: 15px;\r\n  text-align: center;\r\n  padding: 10px 5px;\r\n  right: 0;\r\n  left: 0;\r\n`\r\n\r\nconst NomineeContainer = styled.div`\r\n  padding: 0px 20px 0px 20px;\r\n  position: relative;\r\n  height: 420px;\r\n  overflow-y: hidden;\r\n  overflow-x: auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  /* width */\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nconst StatsContent = styled(Item)`\r\n  padding: 20px 20px;\r\n`\r\n\r\nconst AbsoluteWrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: max-content;\r\n  overflow: scroll;\r\n  display: flex;\r\n`\r\n\r\nconst StatsPreview = styled(Span)`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 10px;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  opacity: 0.25;\r\n  letter-spacing:0.1em;\r\n  text-transform: uppercase;\r\n  color: ${props => props.color || '#000'};\r\n  z-index: -1;\r\n`\r\n\r\nconst StatsInnerTitle = styled.span`\r\n  // font-weight: bold;\r\n  font-size: 15px;\r\n  letter-spacing: 0.1em;\r\n  align-items: left;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst ButtonAlt = styled(Button)`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${(props) =>\r\n    props.disabled &&\r\n    css`\r\n      &:hover {\r\n        opacity: 1;\r\n        cursor: default;\r\n        pointer: default;\r\n      }\r\n      &:active {\r\n        opacity: 1;\r\n        cursor: default;\r\n        pointer: default;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst CurvedSpan = styled(Span)`\r\n  font-size: 14px;\r\n`;\r\n\r\n// css styles\r\nconst Blocky = styled.div`\r\n  position: relative;\r\n  width: 96px;\r\n  height: 96px;\r\n  border-radius: 100%;\r\n  overflow: hidden;\r\n  transform: scale(0.85);\r\n  outline-width: 2px;\r\n  outline-color: rgba(225,225,225,1);\r\n`\r\n\r\nconst BlockyInner = styled.div``\r\n\r\nconst Wallet = styled.span`\r\n  margin: 10px 10px;\r\n  padding: 8px 15px;\r\n  height: 16px;\r\n  display: none;\r\n  align-items: baseline;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  color: #fff;\r\n  border-radius: 15px;\r\n  background: #333;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\n\r\n// Export Default\r\nexport default GovernancePage;\r\n","import { ethers } from \"ethers\";\r\n\r\nimport { addresses, envConfig } from \"@project/contracts\";\r\n\r\nconst ONE_PUSH = ethers.BigNumber.from(1).mul(\r\n  ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18))\r\n);\r\nconst GENESIS_EPOCH_AMOUNT_PUSH = 30000\r\nconst GENESIS_EPOCH_AMOUNT_LP = 35000\r\n\r\nconst bn = function(number, defaultValue = null) { if (number == null) { if (defaultValue == null) { return null } number = defaultValue } return ethers.BigNumber.from(number) }\r\n\r\nconst tokenToBn = (token) => {\r\n  return token.mul(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18)))\r\n}\r\n\r\nconst tokenBNtoNumber = (tokenBn) => {\r\n  return tokenBn.div(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(10))).toNumber() / 100000000\r\n}\r\n\r\nconst bnToInt = function (bnAmount) { return parseInt(bnAmount.div(bn(10).pow(18))) }\r\n\r\nexport default class YieldFarmingDataStore {\r\n  static instance =\r\n    YieldFarmingDataStore.instance || new YieldFarmingDataStore();\r\n\r\n  state = {\r\n    account: null,\r\n    signer: null,\r\n    staking: null,\r\n    yieldFarmingPUSH: null,\r\n    yieldFarmingLP: null,\r\n    rewardForCurrentEpochPush: null,\r\n    rewardForCurrentEpochLP: null,\r\n\r\n    genesisEpochAmountPUSH: GENESIS_EPOCH_AMOUNT_PUSH,\r\n    deprecationPerEpochPUSH: 100,\r\n    genesisEpochAmountLP: GENESIS_EPOCH_AMOUNT_LP,\r\n    deprecationPerEpochLP: 100,\r\n  };\r\n\r\n  // init\r\n  init = (account, epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02) => {\r\n    // set account\r\n    this.state.account = account;\r\n    this.state.epnsToken = epnsToken;\r\n    this.state.staking = staking;\r\n    this.state.yieldFarmingPUSH = yieldFarmingPUSH;\r\n    this.state.yieldFarmingLP = yieldFarmingLP;\r\n    this.state.uniswapV2Router02 = uniswapV2Router02;\r\n  };\r\n\r\n  // 1. Listen for Subscribe Async\r\n  getPoolStats = () => {\r\n    return new Promise(async (resolve, reject) => {\r\n      const yieldFarmingPUSH = this.state.yieldFarmingPUSH;\r\n      const yieldFarmingLP = this.state.yieldFarmingLP;\r\n\r\n      const currentEpochPUSH = await yieldFarmingPUSH.getCurrentEpoch();\r\n\r\n      const pushPriceAmounts = await this.state.uniswapV2Router02.getAmountsOut(ONE_PUSH.toString(), [addresses.epnsToken, addresses.WETHAddress, addresses.USDTAddress]);\r\n      const pushPrice = pushPriceAmounts[pushPriceAmounts.length -1].toNumber()/1000000;\r\n\r\n      const pushAmountReserve = tokenBNtoNumber(await this.state.epnsToken.balanceOf(addresses.epnsLPToken))\r\n      const wethAmountReserve = tokenBNtoNumber(await this.state.epnsToken.attach(addresses.WETHAddress).balanceOf(addresses.epnsLPToken)) // Using epnsToken instance for WETH instance\r\n\r\n      const ethPriceAmounts = await this.state.uniswapV2Router02.getAmountsOut(ONE_PUSH.toString(), [addresses.WETHAddress, addresses.USDTAddress]);\r\n      const ethPrice = ethPriceAmounts[ethPriceAmounts.length -1].toNumber()/1000000;\r\n\r\n      const uniTotalSupply = tokenBNtoNumber(await this.state.epnsToken.attach(addresses.epnsLPToken).totalSupply()) // Using epnsToken instance for Uni-V2 instance\r\n\r\n      const uniLpPrice = ((pushAmountReserve * pushPrice) + (wethAmountReserve * ethPrice)) / uniTotalSupply\r\n      const lpToPushRatio = uniLpPrice / pushPrice\r\n\r\n      const pushNextPoolSize = tokenBNtoNumber(await yieldFarmingPUSH.getPoolSize(currentEpochPUSH.add(1)));\r\n      const lpNextPoolSize = tokenBNtoNumber(await yieldFarmingLP.getPoolSize(currentEpochPUSH.add(1)));\r\n\r\n      const totalValueLocked = (pushNextPoolSize * pushPrice) + (lpNextPoolSize * uniLpPrice)\r\n\r\n      const epochDuration = await yieldFarmingPUSH.epochDuration();\r\n\r\n      const epochStart = await yieldFarmingPUSH.epochStart();\r\n\r\n      const start = epochStart.add(currentEpochPUSH.sub(1).mul(epochDuration));\r\n      const epochEndTimestamp = start.add(epochDuration);\r\n\r\n      const pushTotalDistributedAmount = await yieldFarmingPUSH.TOTAL_DISTRIBUTED_AMOUNT();\r\n      const lpTotalDistributedAmount = await yieldFarmingLP.TOTAL_DISTRIBUTED_AMOUNT();\r\n\r\n      const totalDistributedAmount = pushTotalDistributedAmount.add(\r\n        lpTotalDistributedAmount\r\n      );\r\n\r\n      const pushRewardsDistributed = await this.getPushRewardsDistributed();\r\n\r\n      resolve({\r\n        totalValueLocked,\r\n        pushPrice,\r\n        epochEndTimestamp,\r\n        totalDistributedAmount,\r\n        pushRewardsDistributed,\r\n        currentEpoch: currentEpochPUSH,\r\n        lpToPushRatio\r\n      });\r\n    });\r\n  };\r\n\r\n  // 1. Listen for Subscribe Async\r\n  getPUSHPoolStats = async () => {\r\n    return new Promise(async (resolve, reject) => {\r\n      const epnsToken = this.state.epnsToken;\r\n      const staking = this.state.staking;\r\n      const yieldFarmingPUSH = this.state.yieldFarmingPUSH;\r\n\r\n      const currentEpochPUSH = await yieldFarmingPUSH.getCurrentEpoch();\r\n      const totalEpochPUSH = (await yieldFarmingPUSH.NR_OF_EPOCHS()).toString();\r\n\r\n      const genesisEpochAmount = tokenToBn(ethers.BigNumber.from(this.state.genesisEpochAmountPUSH));\r\n      const deprecationPerEpoch = tokenToBn(ethers.BigNumber.from(this.state.deprecationPerEpochPUSH));\r\n\r\n      const rewardForCurrentEpoch = this.calcTotalAmountPerEpoch(\r\n        genesisEpochAmount,\r\n        currentEpochPUSH,\r\n        deprecationPerEpoch\r\n      );\r\n\r\n      this.state.rewardForCurrentEpochPush = rewardForCurrentEpoch;\r\n\r\n      const poolBalance = await yieldFarmingPUSH.getPoolSize(\r\n        currentEpochPUSH.add(1)\r\n      );\r\n\r\n      const stakingAPR = this.calcStakingAPR(\r\n        genesisEpochAmount,\r\n        currentEpochPUSH,\r\n        deprecationPerEpoch,\r\n        poolBalance,\r\n      );\r\n\r\n      resolve({\r\n        currentEpochPUSH,\r\n        totalEpochPUSH,\r\n        rewardForCurrentEpoch,\r\n        poolBalance,\r\n        stakingAPR\r\n      });\r\n    });\r\n  };\r\n\r\n  getLPPoolStats = async (poolStats) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      const epnsToken = this.state.epnsToken;\r\n      const staking = this.state.staking;\r\n      const yieldFarmingLP = this.state.yieldFarmingLP;\r\n\r\n      const currentEpochPUSH = await yieldFarmingLP.getCurrentEpoch();\r\n      const totalEpochPUSH = (await yieldFarmingLP.NR_OF_EPOCHS()).toString();\r\n      const genesisEpochAmount = tokenToBn(ethers.BigNumber.from(this.state.genesisEpochAmountLP));\r\n      const deprecationPerEpoch = tokenToBn(ethers.BigNumber.from(this.state.deprecationPerEpochLP));\r\n\r\n      const rewardForCurrentEpoch = this.calcTotalAmountPerEpoch(\r\n        genesisEpochAmount,\r\n        currentEpochPUSH,\r\n        deprecationPerEpoch\r\n      );\r\n\r\n      this.state.rewardForCurrentEpochLP = rewardForCurrentEpoch;\r\n\r\n      const poolBalance = await yieldFarmingLP.getPoolSize(\r\n        currentEpochPUSH.add(1)\r\n      );\r\n\r\n      const stakingAPR = await this.calcLPPoolAPR(\r\n        genesisEpochAmount,\r\n        currentEpochPUSH,\r\n        deprecationPerEpoch,\r\n        poolBalance,\r\n        poolStats\r\n      );\r\n\r\n      resolve({\r\n        currentEpochPUSH,\r\n        totalEpochPUSH,\r\n        rewardForCurrentEpoch,\r\n        poolBalance,\r\n        stakingAPR\r\n      });\r\n    });\r\n  };\r\n\r\n  // 1. Listen for Subscribe Async\r\n  getUserData = async (contract) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (this.state.account) {\r\n        const currentEpochPUSH = await contract.getCurrentEpoch();\r\n\r\n        const potentialUserReward = (await this.calculateUserEpochReward(currentEpochPUSH, contract)).toFixed(2)\r\n\r\n        const epochStakeNext = await contract.getEpochStake(\r\n          this.state.account,\r\n          currentEpochPUSH.add(1)\r\n        );\r\n\r\n        let totalAccumulatedReward = 0\r\n\r\n        for(var i=0; i<=currentEpochPUSH.sub(1).toNumber(); i++){\r\n          const epochReward = await this.calculateUserEpochReward(i, contract)\r\n          totalAccumulatedReward = totalAccumulatedReward + epochReward\r\n        }\r\n\r\n        totalAccumulatedReward = totalAccumulatedReward.toFixed(2)\r\n        const lastEpochIdHarvested = (await contract.lastEpochIdHarvested(this.state.account)).toNumber()\r\n\r\n        let totalAvailableReward = 0\r\n\r\n        for(var i = lastEpochIdHarvested + 1; i<=currentEpochPUSH.sub(1).toNumber(); i++){\r\n          const epochReward = await this.calculateUserEpochReward(i, contract)\r\n          totalAvailableReward = totalAvailableReward + epochReward\r\n        }\r\n        totalAvailableReward = totalAvailableReward.toFixed(2)\r\n\r\n        resolve({\r\n          potentialUserReward,\r\n          epochStakeNext,\r\n          totalAccumulatedReward,\r\n          totalAvailableReward\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  getPushRewardsDistributed = async () => {\r\n    const yieldFarmingPUSH = this.state.yieldFarmingPUSH;\r\n    const yieldFarmingLP = this.state.yieldFarmingLP;\r\n\r\n    const currentEpochPUSH = await yieldFarmingPUSH.getCurrentEpoch();\r\n    const genesisEpochAmountPUSH = tokenToBn(ethers.BigNumber.from(this.state.genesisEpochAmountPUSH))\r\n    const deprecationPerEpochPUSH = tokenToBn(ethers.BigNumber.from(this.state.deprecationPerEpochPUSH))\r\n    const currentEpochLP = await yieldFarmingLP.getCurrentEpoch();\r\n    const genesisEpochAmountLP = tokenToBn(ethers.BigNumber.from(this.state.genesisEpochAmountLP))\r\n    const deprecationPerEpochLP = tokenToBn(ethers.BigNumber.from(this.state.deprecationPerEpochLP))\r\n\r\n    let pushPoolRewardsDistributed = ethers.BigNumber.from(0);\r\n    let lpPoolRewardsDistributed = ethers.BigNumber.from(0);\r\n\r\n    for(var i=0; i<currentEpochLP.toNumber(); i++){\r\n      const rewardForCurrentEpochLP = this.calcTotalAmountPerEpoch(\r\n        genesisEpochAmountLP,\r\n        ethers.BigNumber.from(i),\r\n        deprecationPerEpochLP\r\n      );\r\n\r\n      lpPoolRewardsDistributed = lpPoolRewardsDistributed.add(rewardForCurrentEpochLP);\r\n\r\n      const rewardForCurrentEpochPUSH = this.calcTotalAmountPerEpoch(\r\n        genesisEpochAmountPUSH,\r\n        ethers.BigNumber.from(i),\r\n        deprecationPerEpochPUSH\r\n      );\r\n\r\n      pushPoolRewardsDistributed = pushPoolRewardsDistributed.add(rewardForCurrentEpochPUSH);\r\n    }\r\n\r\n    return pushPoolRewardsDistributed.add(lpPoolRewardsDistributed)\r\n  }\r\n\r\n  calcTotalAmountPerEpoch = (\r\n    genesisEpochAmount,\r\n    epochId,\r\n    deprecationPerEpoch\r\n  ) => {\r\n    return genesisEpochAmount.sub(epochId.mul(deprecationPerEpoch));\r\n  };\r\n\r\n  calcAnnualEpochReward = (\r\n    genesisEpochAmount,\r\n    epochId,\r\n    deprecationPerEpoch\r\n  ) => {\r\n    // get current epoch reward\r\n    const currentEpochReward = this.calcTotalAmountPerEpoch(genesisEpochAmount, epochId, deprecationPerEpoch)\r\n\r\n    const weeks = 52\r\n    const depreciate = deprecationPerEpoch.mul(weeks * (weeks - 1)).div(2)\r\n\r\n    const annualEpochReward = (currentEpochReward.mul(weeks)).sub(depreciate)\r\n\r\n    return annualEpochReward\r\n  }\r\n\r\n  calcStakingAPR = (\r\n    genesisEpochAmount,\r\n    epochId,\r\n    deprecationPerEpoch,\r\n    totalStaked\r\n  ) => {\r\n    // get annual rewards\r\n    const annualRewards = this.calcAnnualEpochReward(genesisEpochAmount, epochId, deprecationPerEpoch)\r\n    let apr;\r\n    if(envConfig.coreContractChain === 42)\r\n    apr = annualRewards.mul(1000000).div(Math.max(totalStaked, 1));\r\n    else\r\n    apr = annualRewards.mul(1000000).div(totalStaked);\r\n    const aprFormatted = (parseInt(apr.toString())/10000).toFixed(2)\r\n\r\n    return aprFormatted\r\n  }\r\n\r\n  calcLPPoolAPR = async (\r\n    genesisEpochAmount,\r\n    epochId,\r\n    deprecationPerEpoch,\r\n    totalStaked,\r\n    poolStats\r\n  ) => {\r\n    // get annual rewards\r\n    const annualRewards = this.calcAnnualEpochReward(genesisEpochAmount, epochId, deprecationPerEpoch)\r\n\r\n    let apr;\r\n    if(envConfig.coreContractChain === 42)\r\n    apr = annualRewards.mul(1000000).div(Math.max(totalStaked, 1));\r\n    else\r\n    apr = annualRewards.mul(1000000).div(totalStaked);\r\n    const aprFormatted = (parseInt(apr.toString())/(10000 * poolStats.lpToPushRatio)).toFixed(2)\r\n\r\n    return aprFormatted\r\n\r\n  }\r\n\r\n  calculateUserEpochReward = async (\r\n    epochId,\r\n    contract\r\n  ) => {\r\n      const epochStake = tokenBNtoNumber(await contract.getEpochStake(\r\n        this.state.account,\r\n        epochId\r\n      ));\r\n\r\n      const poolSize = tokenBNtoNumber(await contract.getPoolSize(epochId));\r\n\r\n      let potentialUserReward = 0;\r\n      if (poolSize > 0) {\r\n        if (contract.address == addresses.yieldFarmLP) {\r\n          const rewardForCurrentEpoch = tokenBNtoNumber(this.state.rewardForCurrentEpochLP)\r\n          potentialUserReward = epochStake / poolSize * rewardForCurrentEpoch\r\n        }\r\n        else {\r\n          const rewardForCurrentEpoch = tokenBNtoNumber(this.state.rewardForCurrentEpochPush)\r\n          potentialUserReward = epochStake / poolSize * rewardForCurrentEpoch\r\n        }\r\n\r\n      }\r\n\r\n      return potentialUserReward\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport { Item, ItemH, B, H2, H3, Span, Button, Input } from '../primaries/SharedStyling';\r\nimport InfoTooltip from \"../primaries/InfoTooltip\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { Oval } from \"react-loader-spinner\";\r\n\r\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\r\nconst ethers = require(\"ethers\");\r\n\r\nconst bn = function (number, defaultValue = null) { if (number == null) { if (defaultValue == null) { return null } number = defaultValue } return ethers.BigNumber.from(number) }\r\n\r\n// const tokens = function (amount) { return (bn(amount).mul(bn(10).pow(18))).toString() }\r\n// const tokensBN = function (amount) { return (bn(amount).mul(bn(10).pow(18))) }\r\nconst bnToInt = function (bnAmount) { return bnAmount.div(bn(10).pow(18)) }\r\n\r\n// Create Header\r\nexport default function PoolCard({\r\n  poolName,\r\n  poolAddress,\r\n  tokenAddress,\r\n  getPoolStats,\r\n  getPUSHPoolStats,\r\n  getUserData,\r\n  pushPoolStats,\r\n  userData,\r\n}) {\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n  const [depositAmountToken, setDepositAmountToken] = React.useState(0);\r\n  const [withdrawAmountToken, setWithdrawAmountToken] = React.useState(0);\r\n  const [harvestEpochValue, setHarvestEpochValue] = React.useState(0);\r\n  const [txInProgress, setTxInProgress] = React.useState(false);\r\n\r\n  const [showDepositItem, setShowDepositItem] = React.useState(false);\r\n\r\n  const [depositApproved, setDepositApprove] = React.useState(false);\r\n  const [txInProgressApprDep, setTxInProgressApprDep] = React.useState(false);\r\n\r\n  const [txInProgressDep, setTxInProgressDep] = React.useState(false);\r\n  const [showDepSlip, setShowDepSlip] = React.useState(null);\r\n\r\n  const [txInProgressWithdraw, setTxInProgressWithdraw] = React.useState(false);\r\n\r\n  const [txInProgressMassHarvest, setTxInProgressMassHarvest] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    // Check if the account has approved deposit\r\n    checkApprDeposit();\r\n\r\n  }, [depositAmountToken]);\r\n\r\n  const checkApprDeposit = async () => {\r\n    if (depositAmountToken <= 0) {\r\n      setDepositApprove(false);\r\n      return;\r\n    }\r\n    setTxInProgressApprDep(true);\r\n\r\n    var signer = library.getSigner(account);\r\n    const tokenAddr = poolName == \"Uniswap LP Pool (UNI-V2)\" ? addresses.epnsLPToken : addresses.epnsToken;\r\n    let token = new ethers.Contract(tokenAddr, abis.epnsToken, signer);\r\n\r\n    const allowance = await token.allowance(account, addresses.staking);\r\n    if (allowance.gte(bn(depositAmountToken))) {\r\n      setDepositApprove(true);\r\n    }\r\n    else {\r\n      setDepositApprove(false);\r\n    }\r\n\r\n    setTxInProgressApprDep(false);\r\n  }\r\n\r\n  const fillMax = async () => {\r\n    var signer = library.getSigner(account);\r\n    const tokenAddr = poolName == \"Uniswap LP Pool (UNI-V2)\" ? addresses.epnsLPToken : addresses.epnsToken;\r\n    let token = new ethers.Contract(tokenAddr, abis.epnsToken, signer);\r\n\r\n    let balance = bnToInt(await token.balanceOf(account));\r\n    setDepositAmountToken(parseInt(balance.toString().replace(/\\D/, '')) || 0)\r\n  }\r\n\r\n  const approveDeposit = async () => {\r\n    if (depositApproved || txInProgressApprDep) {\r\n      return\r\n    }\r\n\r\n    setTxInProgressApprDep(true);\r\n\r\n    var signer = library.getSigner(account);\r\n    let epnsToken = new ethers.Contract(tokenAddress, abis.epnsToken, signer);\r\n    let staking = new ethers.Contract(addresses.staking, abis.staking, signer);\r\n\r\n    const uintMax = bn(2).pow(bn(256)).sub(1)\r\n\r\n    const tx = epnsToken.approve(\r\n      staking.address,\r\n      uintMax\r\n    );\r\n\r\n    tx.then(async (tx) => {\r\n      let txToast = toast.dark(\r\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\r\n        {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        }\r\n      );\r\n\r\n      try {\r\n        await library.waitForTransaction(tx.hash);\r\n\r\n        toast.update(txToast, {\r\n          render: \"Transaction Completed!\",\r\n          type: toast.TYPE.SUCCESS,\r\n          autoClose: 5000,\r\n        });\r\n        setTxInProgressApprDep(false);\r\n        setDepositApprove(true);\r\n\r\n      } catch (e) {\r\n        toast.update(txToast, {\r\n          render: \"Transaction Failed! (\" + e.name + \")\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        setTxInProgressApprDep(false);\r\n      }\r\n    }).catch((err) => {\r\n      toast.dark(\"Transaction Cancelled!\", {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n\r\n      setTxInProgressApprDep(false);\r\n    });\r\n  }\r\n\r\n  const depositAmountTokenFarmSingleTx = async () => {\r\n    if (txInProgressDep || !approveDeposit) {\r\n      return\r\n    }\r\n\r\n    setTxInProgressDep(true)\r\n\r\n    var signer = library.getSigner(account);\r\n    let epnsToken = new ethers.Contract(tokenAddress, abis.epnsToken, signer);\r\n    let staking = new ethers.Contract(addresses.staking, abis.staking, signer);\r\n    console.log(depositAmountToken);\r\n\r\n    const tx2 = staking.deposit(\r\n      tokenAddress,\r\n      ethers.BigNumber.from(depositAmountToken).mul(\r\n        ethers.BigNumber.from(10).pow(18)\r\n      )\r\n    );\r\n\r\n    tx2\r\n      .then(async (tx) => {\r\n        let txToast = toast.dark(\r\n          <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\r\n          {\r\n            position: \"bottom-right\",\r\n            autoClose: false,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          }\r\n        );\r\n\r\n        try {\r\n          await library.waitForTransaction(tx.hash);\r\n\r\n          toast.update(txToast, {\r\n            render: \"Transaction Completed!\",\r\n            type: toast.TYPE.SUCCESS,\r\n            autoClose: 5000,\r\n          });\r\n\r\n          getPoolStats();\r\n          getPUSHPoolStats(pushPoolStats);\r\n          getUserData();\r\n\r\n          setTxInProgressDep(false);\r\n          setShowDepSlip(true);\r\n          // window.location.reload();\r\n        } catch (e) {\r\n          toast.update(txToast, {\r\n            render: \"Transaction Failed! (\" + e.name + \")\",\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 5000,\r\n          });\r\n\r\n          setTxInProgressDep(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.dark(\"Transaction Cancelled!\", {\r\n          position: \"bottom-right\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        setTxInProgressDep(false);\r\n      });\r\n  };\r\n\r\n  const withdrawAmountTokenFarmAutomatic = async () => {\r\n    if (txInProgressWithdraw) {\r\n      return;\r\n    }\r\n\r\n    setTxInProgressWithdraw(true);\r\n    const withdrawAmount = formatTokens(userData.epochStakeNext);\r\n\r\n    if (withdrawAmount == 0) {\r\n      toast.dark(\"Nothing to Withdraw!\", {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n\r\n      setTxInProgressWithdraw(false);\r\n      return;\r\n    }\r\n\r\n    var signer = library.getSigner(account);\r\n    let staking = new ethers.Contract(addresses.staking, abis.staking, signer);\r\n\r\n    const tx = staking.withdraw(\r\n      tokenAddress,\r\n      ethers.BigNumber.from(withdrawAmount).mul(\r\n        ethers.BigNumber.from(10).pow(18)\r\n      )\r\n    );\r\n\r\n    tx.then(async (tx) => {\r\n      let txToast = toast.dark(\r\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\r\n        {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        }\r\n      );\r\n\r\n      try {\r\n        await library.waitForTransaction(tx.hash);\r\n\r\n        toast.update(txToast, {\r\n          render: \"Transaction Completed!\",\r\n          type: toast.TYPE.SUCCESS,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        setTxInProgressWithdraw(false);\r\n\r\n        getPoolStats();\r\n        getPUSHPoolStats(pushPoolStats);\r\n        getUserData();\r\n      } catch (e) {\r\n        toast.update(txToast, {\r\n          render: \"Transaction Failed! (\" + e.name + \")\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        setTxInProgressWithdraw(false);\r\n      }\r\n    }).catch((err) => {\r\n      toast.dark(\"Transaction Cancelled!\", {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n\r\n      setTxInProgressWithdraw(false);\r\n    });\r\n  };\r\n\r\n  const harvestTokens = async () => {\r\n    var signer = library.getSigner(account);\r\n    let yieldFarmingPUSH = new ethers.Contract(\r\n      poolAddress,\r\n      abis.yieldFarming,\r\n      signer\r\n    );\r\n\r\n    if (harvestEpochValue) {\r\n      const tx = yieldFarmingPUSH.harvest(harvestEpochValue);\r\n      tx.then(async (tx) => {\r\n        let txToast = toast.dark(\r\n          <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\r\n          {\r\n            position: \"bottom-right\",\r\n            autoClose: false,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          }\r\n        );\r\n\r\n        try {\r\n          await library.waitForTransaction(tx.hash);\r\n\r\n          toast.update(txToast, {\r\n            render: \"Transaction Completed!\",\r\n            type: toast.TYPE.SUCCESS,\r\n            autoClose: 5000,\r\n          });\r\n\r\n          setTxInProgress(false);\r\n        } catch (e) {\r\n          toast.update(txToast, {\r\n            render: \"Transaction Failed! (\" + e.name + \")\",\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 5000,\r\n          });\r\n\r\n          setTxInProgress(false);\r\n        }\r\n      }).catch((err) => {\r\n        toast.dark(\"Transaction Cancelled!\", {\r\n          position: \"bottom-right\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        setTxInProgress(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  const massHarvestTokensAll = async () => {\r\n    if (txInProgressMassHarvest) {\r\n      return;\r\n    }\r\n\r\n    if (!pushPoolStats.currentEpochPUSH || pushPoolStats.currentEpochPUSH == 1) {\r\n      toast.dark(\"Harvest unlocks from Epoch 2!\", {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n\r\n      return;\r\n    }\r\n    setTxInProgressMassHarvest(true);\r\n\r\n    console.log(poolAddress);\r\n\r\n    var signer = library.getSigner(account);\r\n    let yieldFarmingPUSH = new ethers.Contract(\r\n      poolAddress,\r\n      abis.yieldFarming,\r\n      signer\r\n    );\r\n    const tx = yieldFarmingPUSH.massHarvest();\r\n\r\n\r\n    tx.then(async (tx) => {\r\n      let txToast = toast.dark(\r\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\r\n        {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        }\r\n      );\r\n\r\n      try {\r\n        await library.waitForTransaction(tx.hash);\r\n\r\n        toast.update(txToast, {\r\n          render: \"Transaction Completed!\",\r\n          type: toast.TYPE.SUCCESS,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        setTxInProgressMassHarvest(false);\r\n      } catch (e) {\r\n        toast.update(txToast, {\r\n          render: \"Transaction Failed! (\" + e.name + \")\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        setTxInProgressMassHarvest(false);\r\n      }\r\n    }).catch((err) => {\r\n      toast.dark(\"Transaction Cancelled!\", {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n\r\n      setTxInProgressMassHarvest(false);\r\n    });\r\n  };\r\n\r\n  const formatTokens = (tokens) => {\r\n    if (tokens) {\r\n      return tokens.div(ethers.BigNumber.from(10).pow(18)).toString();\r\n    }\r\n  };\r\n\r\n  function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Item margin=\"20px\" align=\"stretch\" self=\"stretch\" border=\"1px solid #e1e1e1\" radius=\"12px\">\r\n        <Item>\r\n          <Item>\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span bg={poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"#35c5f3\" : \"#e20880\"} size=\"0.8em\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">{poolName}</Span>\r\n            </H2>\r\n            <Item\r\n              align=\"flex-end\"\r\n              self=\"stretch\"\r\n            >\r\n              <H3>\r\n                <Span>Current APR </Span><Span bg={poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"#35c5f3\" : \"#e20880\"} padding=\"2px 8px\" weight=\"600\" color=\"#fff\"><b>{pushPoolStats.stakingAPR}%</b></Span>\r\n              </H3>\r\n            </Item>\r\n          </Item>\r\n\r\n          <ItemH margin=\"10px 0px 0px 0px\" self=\"stretch\" items=\"stretch\" bg=\"#f1f1f1\">\r\n            <PoolContainer bg=\"#fff\" margin=\"5px 15px\" radius=\"12px\" border=\"1px solid #ddd\" borderBottom=\"8px solid #e1e1e1\">\r\n              <PoolBoxTitle margin=\"15px 10px\" fg=\"#999\" textTransform=\"uppercase\" size=\"10px\" spacing=\"0.2em\">Current Reward</PoolBoxTitle>\r\n              <PoolBoxMsg\r\n                bg=\"transparent\"\r\n                fg={poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"#35c5f3\" : \"#e20880\"}\r\n                size=\"16px\"\r\n                margin=\"-15px 5px 10px 5px\"\r\n              >\r\n                {numberWithCommas(formatTokens(pushPoolStats.rewardForCurrentEpoch))} PUSH\r\n              </PoolBoxMsg>\r\n            </PoolContainer>\r\n\r\n            <PoolContainer bg=\"#fff\" margin=\"5px 15px\" radius=\"12px\" border=\"1px solid #ddd\" borderBottom=\"8px solid #e1e1e1\">\r\n              <PoolBoxTitle margin=\"15px 10px\" fg=\"#999\" textTransform=\"uppercase\" size=\"10px\" spacing=\"0.2em\">Total Staked</PoolBoxTitle>\r\n              <PoolBoxMsg\r\n                bg=\"transparent\"\r\n                fg={poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"#35c5f3\" : \"#e20880\"}\r\n                size=\"16px\"\r\n                margin=\"-15px 5px 10px 5px\"\r\n              >\r\n                {numberWithCommas(formatTokens(pushPoolStats.poolBalance))} {poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"UNI-V2\" : \"PUSH\"}\r\n              </PoolBoxMsg>\r\n            </PoolContainer>\r\n          </ItemH>\r\n\r\n          <Item\r\n            self=\"stretch\"\r\n            align=\"flex-end\"\r\n            margin=\"0px 0px 10px 0px\"\r\n          >\r\n            <EpochDisplayer>\r\n              <Span padding=\"0px 5px 0px 0px\">Current Epoch</Span><B>{pushPoolStats.currentEpochPUSH.toString()}/{pushPoolStats.totalEpochPUSH}</B>\r\n            </EpochDisplayer>\r\n          </Item>\r\n        </Item>\r\n\r\n        <Item padding=\"10px 20px 0px 20px\" align=\"stretch\" self=\"stretch\">\r\n          <ItemH margin=\"0px\">\r\n            <Item bg=\"#000\" margin=\"5px 10px\" radius=\"12px\">\r\n              <PoolBoxTitle>User Deposit</PoolBoxTitle>\r\n              <PoolBoxMsg>{formatTokens(userData.epochStakeNext)} {poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"UNI-V2\" : \"PUSH\"}</PoolBoxMsg>\r\n            </Item>\r\n\r\n            <Item bg=\"#000\" margin=\"5px 10px\" radius=\"12px\">\r\n              <PoolBoxTitle>Rewards Claimed <InfoTooltip title={\"The total rewards you have already claimed from the pool. This includes all the rewards including the ones already harvested.\"} /></PoolBoxTitle>\r\n              <PoolBoxMsg>{(userData.totalAccumulatedReward - userData.totalAvailableReward).toFixed(2)} PUSH</PoolBoxMsg>\r\n            </Item>\r\n          </ItemH>\r\n\r\n          <ItemH margin=\"0px\">\r\n            <Item bg=\"#000\" margin=\"5px 10px\" radius=\"12px\">\r\n              <PoolBoxTitle>Current Epoch Reward <InfoTooltip title={\"This is only an estimation for the user's reward that they might get after the epoch. This might change depending upon deposits from other users.\"} /></PoolBoxTitle>\r\n              <PoolBoxMsg>{userData.potentialUserReward} PUSH</PoolBoxMsg>\r\n            </Item>\r\n\r\n            <Item bg=\"#000\" margin=\"5px 10px\" radius=\"12px\">\r\n              <PoolBoxTitle>Available for Harvest <InfoTooltip title={\"The rewards that are currently available for harvesting and can be immediately transferred to your address.\"} /></PoolBoxTitle>\r\n              <PoolBoxMsg>{userData.totalAvailableReward} PUSH</PoolBoxMsg>\r\n            </Item>\r\n          </ItemH>\r\n        </Item>\r\n\r\n        {showDepositItem &&\r\n          <Item bg=\"#ddd\" radius=\"12px\" margin=\"20px 0px -10px 0px\" padding=\"10px 20px\" align=\"stretch\" self=\"stretch\">\r\n\r\n            {!showDepSlip &&\r\n              <>\r\n                <Item>\r\n                  <MaxButton\r\n                    bg=\"#000\"\r\n                    onClick={fillMax}\r\n                    position=\"absolute\"\r\n                  >\r\n                    Max\r\n                  </MaxButton>\r\n\r\n                  <Input\r\n                    placeholder=\"Number of Tokens\"\r\n                    radius=\"4px\"\r\n                    padding=\"12px\"\r\n                    self=\"stretch\"\r\n                    bg=\"#fff\"\r\n                    value={depositAmountToken}\r\n                    onChange={(e) => {\r\n                      setDepositAmountToken(parseInt(e.target.value.replace(/\\D/, '')) || 0)\r\n                    }}\r\n                  />\r\n                </Item>\r\n\r\n                <ItemH>\r\n                  <ButtonAlt\r\n                    bg={depositApproved ? \"#999\" : \"#e20880\"}\r\n                    onClick={approveDeposit}\r\n                    disabled={depositApproved ? true : false}\r\n                  >\r\n                    {!depositApproved && !txInProgressApprDep &&\r\n                      <Span color=\"#fff\" weight=\"400\">Approve</Span>\r\n                    }\r\n                    {txInProgressApprDep && !depositApproved &&\r\n                      <Oval\r\n                        color=\"#fff\"\r\n                        height={12}\r\n                        width={12}\r\n                      />\r\n                    }\r\n                    {!txInProgress && depositApproved &&\r\n                      <Span color=\"#fff\" weight=\"600\">Approved</Span>\r\n                    }\r\n                  </ButtonAlt>\r\n                  <ButtonAlt\r\n                    bg={!depositApproved ? \"#999\" : \"#e20880\"}\r\n                    disabled={!depositApproved ? true : false}\r\n                    onClick={depositAmountTokenFarmSingleTx}\r\n                  >\r\n                    {!txInProgressDep &&\r\n                      <Span color=\"#fff\" weight=\"400\">Deposit</Span>\r\n                    }\r\n                    {txInProgressDep &&\r\n                      <Oval\r\n                        color=\"#fff\"\r\n                        height={12}\r\n                        width={12}\r\n                      />\r\n                    }\r\n                  </ButtonAlt>\r\n                </ItemH>\r\n              </>\r\n            }\r\n\r\n            {showDepSlip &&\r\n              <Span\r\n                bg=\"#e20880\"\r\n                color=\"#fff\"\r\n                align=\"center\"\r\n                textTransform=\"uppercase\"\r\n                spacing=\"0.1em\"\r\n                size=\"14px\"\r\n                weight=\"600\"\r\n                padding=\"10px\"\r\n                self=\"stretch\"\r\n              >\r\n                Deposit Successful!\r\n              </Span>\r\n            }\r\n\r\n          </Item>\r\n        }\r\n\r\n        <ItemH padding=\"0px 20px 0px 20px\" margin=\"20px 0px 20px 0px\" align=\"center\" self=\"stretch\">\r\n          {!showDepositItem &&\r\n            <ButtonAlt\r\n              bg=\"#e20880\"\r\n              onClick={() => setShowDepositItem(!showDepositItem)}\r\n            >\r\n              {!txInProgressDep &&\r\n                <Span color=\"#fff\" weight=\"400\">Deposit</Span>\r\n              }\r\n              {txInProgressApprDep &&\r\n                <Oval\r\n                  color=\"#fff\"\r\n                  height={12}\r\n                  width={12}\r\n                />\r\n              }\r\n            </ButtonAlt>\r\n          }\r\n\r\n          <ButtonAlt\r\n            bg=\"#000\"\r\n            onClick={() => withdrawAmountTokenFarmAutomatic()}\r\n          >\r\n            {!txInProgressWithdraw &&\r\n              <Span color=\"#fff\" weight=\"400\">Withdraw</Span>\r\n            }\r\n            {txInProgressWithdraw &&\r\n              <Oval\r\n                color=\"#fff\"\r\n                height={12}\r\n                width={12}\r\n              />\r\n            }\r\n          </ButtonAlt>\r\n\r\n          <ButtonAlt\r\n            bg=\"#000\"\r\n            onClick={() => massHarvestTokensAll()}\r\n          >\r\n            {!txInProgressMassHarvest &&\r\n              <Span color=\"#fff\" weight=\"400\">Harvest</Span>\r\n            }\r\n            {txInProgressMassHarvest &&\r\n              <Oval\r\n                color=\"#fff\"\r\n                height={12}\r\n                width={12}\r\n              />\r\n            }\r\n          </ButtonAlt>\r\n        </ItemH>\r\n      </Item>\r\n    </>\r\n  );\r\n}\r\n\r\n// toast customize\r\nconst LoaderToast = ({ msg, color }) => (\r\n  <Toaster>\r\n    <Oval color={color} height={30} width={30} />\r\n    <ToasterMsg>{msg}</ToasterMsg>\r\n  </Toaster>\r\n);\r\n\r\n\r\nconst MaxButton = styled(Button)`\r\n  position: absolute;\r\n  right: 0;\r\n  padding: 4px 8px;\r\n  margin: 5px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  letter-spacing: 0.1em;\r\n`\r\n\r\nconst PoolContainer = styled(Item)`\r\n  border-bottom: ${props => props.borderBottom || \"none\"};\r\n`\r\n\r\nconst PoolBoxTitle = styled(Span)`\r\n  background: ${props => props.bg || 'transparent'};\r\n  color: ${props => props.fg || '#fff'};\r\n  font-weight: 600;\r\n  font-size: ${props => props.size || '12px'};\r\n  margin: ${props => props.margin || '10px 5px'};\r\n  letter-spacing: 0.1em;\r\n`\r\n\r\nconst PoolBoxMsg = styled(Span)`\r\n  background: ${props => props.bg || '#fff'};\r\n  color: ${props => props.fg || '#000'};\r\n  font-weight: 600;\r\n  font-size: ${props => props.size || '12px'};\r\n  margin: ${props => props.margin || '5px 5px 10px 5px'};\r\n  letter-spacing: 0.1em;\r\n  padding: 4px 15px;\r\n  border-radius: 10px;\r\n`\r\n\r\nconst Container = styled.div`\r\n  padding: 18px;\r\n  background: #fff;\r\n  flex: 1;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 15px;\r\n  border: 1px solid rgb(225, 225, 225);\r\n\r\n  margin: 10px;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n`;\r\n\r\nconst MainTitle = styled.h2`\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst Heading = styled.h5`\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst EpochDisplayer = styled(Span)`\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.1em;\r\n  font-size: 12px;\r\n  background: #f1f1f1;\r\n  padding: 0px 10px 0px 10px;\r\n  position: relative;\r\n  height: 23px;\r\n  align-items: center;\r\n  text-align: center;\r\n  display: flex;\r\n\r\n  &:after {\r\n    width: 0;\r\n    height: 0;\r\n    border-top: 0px solid transparent;\r\n    border-bottom: 25px solid transparent;\r\n    border-right: 10px solid #f1f1f1;\r\n    left: -10px;\r\n    content: '';\r\n    position: absolute;\r\n  }\r\n`\r\n\r\nconst ButtonAlt = styled(Button)`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${(props) =>\r\n    props.disabled &&\r\n    css`\r\n      &:hover {\r\n        opacity: 1;\r\n        cursor: default;\r\n        pointer: default;\r\n      }\r\n      &:active {\r\n        opacity: 1;\r\n        cursor: default;\r\n        pointer: default;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled, { useTheme } from \"styled-components\";\r\nimport { Section, Content, Item, ItemH, Span } from '../primaries/SharedStyling';\r\n\r\nimport { Oval } from \"react-loader-spinner\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport YieldFarmingDataStore from \"singletons/YieldFarmingDataStore\";\r\nimport PoolCard from \"components/PoolCard\";\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nimport { envConfig } from \"@project/contracts\";\r\n\r\n\r\nconst ethers = require(\"ethers\");\r\n\r\n// Create Header\r\nfunction YieldFarmingPage() {\r\n  const { account, library, chainId } = useWeb3React();\r\n  const onCoreNetwork = chainId === envConfig.coreContractChain;\r\n\r\n  const themes = useTheme();\r\n\r\n  const [poolStats, setPoolStats] = React.useState(null);\r\n  const [pushPoolStats, setPushPoolStats] = React.useState(null);\r\n  const [lpPoolStats, setLpPoolStats] = React.useState(null);\r\n  const [userDataPUSH, setUserDataPUSH] = React.useState(null);\r\n  const [userDataLP, setUserDataLP] = React.useState(null);\r\n\r\n  const [formattedDuration, setFormattedDuration] = React.useState(\"\");\r\n\r\n  const [epnsToken, setEpnsToken] = React.useState(null);\r\n  const [staking, setStaking] = React.useState(null);\r\n  const [yieldFarmingPUSH, setYieldFarmingPUSH] = React.useState(null);\r\n  const [yieldFarmingLP, setYieldFarmingLP] = React.useState(null);\r\n  const [uniswapV2Router02, setUniswapV2Router02] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!onCoreNetwork) {\r\n      const url = window.location.origin;\r\n      window.location.replace(`${url}/#/notavailable`);\r\n    }\r\n  })\r\n\r\n  const getPoolStats = React.useCallback(async () => {\r\n    const poolStats = await YieldFarmingDataStore.instance.getPoolStats();\r\n\r\n    setPoolStats({ ...poolStats });\r\n  }, [epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02]);\r\n\r\n  const getPUSHPoolStats = React.useCallback(async () => {\r\n    const pushPoolStats = await YieldFarmingDataStore.instance.getPUSHPoolStats();\r\n\r\n    setPushPoolStats({ ...pushPoolStats });\r\n  }, [epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02]);\r\n\r\n  const getLPPoolStats = React.useCallback(async (poolStats) => {\r\n    const lpPoolStats = await YieldFarmingDataStore.instance.getLPPoolStats(poolStats);\r\n\r\n    setLpPoolStats({ ...lpPoolStats });\r\n  }, [epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02]);\r\n\r\n  const getUserDataPUSH = React.useCallback(async () => {\r\n    const userDataPUSH = await YieldFarmingDataStore.instance.getUserData(yieldFarmingPUSH);\r\n\r\n    setUserDataPUSH({ ...userDataPUSH });\r\n  }, [yieldFarmingPUSH]);\r\n\r\n  const getUserDataLP = React.useCallback(async () => {\r\n    const userDataLP = await YieldFarmingDataStore.instance.getUserData(yieldFarmingLP);\r\n\r\n    setUserDataLP({ ...userDataLP });\r\n  }, [yieldFarmingLP]);\r\n\r\n  const formatTokens = (tokens) => {\r\n    if (tokens) {\r\n      return tokens.div(ethers.BigNumber.from(10).pow(18)).toString();\r\n    }\r\n  };\r\n\r\n  const getFormattedDuration = () => {\r\n    if (poolStats?.epochEndTimestamp) {\r\n      const epochEndTimestamp = poolStats.epochEndTimestamp.toNumber();\r\n\r\n      const duration = epochEndTimestamp - Math.floor(new Date() / 1000);\r\n\r\n      if (duration < 0) {\r\n        getPoolStats()\r\n      }\r\n\r\n      const day = parseInt(duration / 86400);\r\n      const hour = parseInt((duration - day * 86400) / 3600);\r\n\r\n      const minutes = parseInt((duration - (day * 86400 + hour * 3600)) / 60);\r\n      const seconds = duration - (day * 86400 + hour * 3600 + minutes * 60);\r\n\r\n      setFormattedDuration(`${day}D ${hour}H ${minutes}M ${seconds}S`);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n      getFormattedDuration();\r\n    }, 1000);\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    let epnsToken = new ethers.Contract(\r\n      addresses.epnsToken,\r\n      abis.epnsToken,\r\n      library\r\n    );\r\n\r\n    let staking = new ethers.Contract(addresses.staking, abis.staking, library);\r\n    let yieldFarmingPUSH = new ethers.Contract(\r\n      addresses.yieldFarmPUSH,\r\n      abis.yieldFarming,\r\n      library\r\n    );\r\n\r\n    let yieldFarmingLP = new ethers.Contract(\r\n      addresses.yieldFarmLP,\r\n      abis.yieldFarming,\r\n      library\r\n    );\r\n\r\n    let uniswapV2Router02Instance = new ethers.Contract(\r\n      addresses.uniswapV2Router02,\r\n      abis.uniswapV2Router02,\r\n      library\r\n    );\r\n\r\n    setEpnsToken(epnsToken);\r\n    setStaking(staking);\r\n    setYieldFarmingPUSH(yieldFarmingPUSH);\r\n    setYieldFarmingLP(yieldFarmingLP);\r\n    setUniswapV2Router02(uniswapV2Router02Instance)\r\n\r\n    if (!!(library && account)) {\r\n      var signer = library.getSigner(account);\r\n\r\n      let epnsToken = new ethers.Contract(\r\n        addresses.epnsToken,\r\n        abis.epnsToken,\r\n        signer\r\n      );\r\n      let staking = new ethers.Contract(\r\n        addresses.staking,\r\n        abis.staking,\r\n        signer\r\n      );\r\n      let yieldFarmingPUSH = new ethers.Contract(\r\n        addresses.yieldFarmPUSH,\r\n        abis.yieldFarming,\r\n        signer\r\n      );\r\n      let yieldFarmingLP = new ethers.Contract(\r\n        addresses.yieldFarmLP,\r\n        abis.yieldFarming,\r\n        signer\r\n      );\r\n\r\n      let uniswapV2Router02Instance = new ethers.Contract(\r\n        addresses.uniswapV2Router02,\r\n        abis.uniswapV2Router02,\r\n        signer\r\n      );\r\n\r\n      setEpnsToken(epnsToken);\r\n      setStaking(staking);\r\n      setYieldFarmingPUSH(yieldFarmingPUSH);\r\n      setYieldFarmingLP(yieldFarmingLP);\r\n      setUniswapV2Router02(uniswapV2Router02Instance);\r\n    }\r\n  }, [account]);\r\n\r\n  React.useEffect(() => {\r\n    if (epnsToken != null && staking != null && yieldFarmingPUSH != null) {\r\n      // Instantiate Data Stores\r\n      YieldFarmingDataStore.instance.init(\r\n        account,\r\n        epnsToken,\r\n        staking,\r\n        yieldFarmingPUSH,\r\n        yieldFarmingLP,\r\n        uniswapV2Router02\r\n      );\r\n\r\n      getPoolStats();\r\n\r\n      // setpoolStats(YieldFarmingDataStore.instance.state);\r\n    }\r\n  }, [getPoolStats]);\r\n\r\n  React.useEffect(() => {\r\n    if (poolStats) {\r\n      syncData(poolStats);\r\n    }\r\n\r\n  }, [poolStats]);\r\n\r\n  const syncData = async (poolStats) => {\r\n    getPUSHPoolStats();\r\n    getLPPoolStats(poolStats);\r\n\r\n    getUserDataPUSH();\r\n    getUserDataLP();\r\n  }\r\n\r\n  function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Section>\r\n        {poolStats ? (\r\n          <>\r\n            <Content themes={themes.yieldBg}>\r\n              <ItemH margin=\"0px 15px 0px 15px\" align=\"stretch\">\r\n                <StatsCard\r\n                  bg={themes.mainBg}\r\n                >\r\n                  <StatsHeading bg=\"#e20880\">Total Value Locked</StatsHeading>\r\n                  <StatsContent>\r\n                    <StatsInnerTitle>{`$ ${numberWithCommas(poolStats.totalValueLocked.toFixed(2))}`}</StatsInnerTitle>\r\n                  </StatsContent>\r\n                  <StatsPreview color=\"#e20880\">TVL</StatsPreview>\r\n                </StatsCard>\r\n\r\n                <StatsCard\r\n                  bg={themes.mainBg}\r\n                >\r\n                  <StatsHeading bg=\"#35c5f3\">PUSH Rewards Given</StatsHeading>\r\n                  <StatsContent>\r\n                    <StatsInnerTitle>{numberWithCommas(formatTokens(poolStats.pushRewardsDistributed))}</StatsInnerTitle>\r\n                    <StatsInnerSub>out of {numberWithCommas(formatTokens(poolStats.totalDistributedAmount))}</StatsInnerSub>\r\n                  </StatsContent>\r\n                  <StatsPreview color=\"#35c5f3\">Rewarded</StatsPreview>\r\n                </StatsCard>\r\n\r\n                <StatsCard\r\n                  bg={themes.mainBg}\r\n                >\r\n                  <StatsHeading bg=\"#674c9f\">Time Left</StatsHeading>\r\n                  <StatsContent>\r\n                    <StatsInnerTitle>{formattedDuration}</StatsInnerTitle>\r\n                    <StatsInnerSub>until next epoch</StatsInnerSub>\r\n                  </StatsContent>\r\n                  <StatsPreview color=\"#674c9f\">time left</StatsPreview>\r\n                </StatsCard>\r\n\r\n                <StatsCard\r\n                  bg={themes.mainBg}\r\n                >\r\n                  <StatsHeading bg={themes.pushPriceBg}>PUSH Price</StatsHeading>\r\n                  <StatsContent>\r\n                    <StatsInnerTitle>{`$ ${poolStats.pushPrice.toFixed(2)}`}</StatsInnerTitle>\r\n                    <StatsInnerSub>\r\n                      <a target=\"_blank\" href={`https://app.uniswap.org/#/swap?inputCurrency=${addresses.epnsToken}`}>Uniswap</a>\r\n                    </StatsInnerSub>\r\n                  </StatsContent>\r\n                  <StatsPreview color=\"#000\">UNISWAP</StatsPreview>\r\n                </StatsCard>\r\n              </ItemH>\r\n            </Content>\r\n\r\n            {!(lpPoolStats && userDataLP) && !(pushPoolStats && userDataPUSH)\r\n              ? <Item padding=\"20px\">\r\n                <Oval color=\"#35c5f3\" height={40} width={40} />\r\n              </Item>\r\n              : <Content padding=\"25px 0px\">\r\n                <ItemH margin=\"0px 10px 0px 10px\" align=\"stretch\">\r\n                  {\r\n                    lpPoolStats && userDataLP ? (\r\n                      <PoolCard\r\n                        poolName={'Uniswap LP Pool (UNI-V2)'}\r\n                        poolAddress={addresses.yieldFarmLP}\r\n                        tokenAddress={addresses.epnsLPToken}\r\n                        getPoolStats={getPoolStats}\r\n                        getPUSHPoolStats={getLPPoolStats}\r\n                        getUserData={getUserDataLP}\r\n                        pushPoolStats={lpPoolStats}\r\n                        userData={userDataLP}\r\n                      />\r\n                    ) : null\r\n                  }\r\n                  {\r\n                    pushPoolStats && userDataPUSH ? (\r\n                      <PoolCard\r\n                        poolName={'Staking Pool (PUSH)'}\r\n                        poolAddress={addresses.yieldFarmPUSH}\r\n                        tokenAddress={addresses.epnsToken}\r\n                        getPoolStats={getPoolStats}\r\n                        getPUSHPoolStats={getPUSHPoolStats}\r\n                        getUserData={getUserDataPUSH}\r\n                        pushPoolStats={pushPoolStats}\r\n                        userData={userDataPUSH}\r\n                      />\r\n                    ) : null\r\n                  }\r\n                </ItemH>\r\n              </Content>\r\n            }\r\n          </>\r\n        ) : (\r\n          <Item padding=\"20px\">\r\n            <Oval color=\"#e20880\" height={40} width={40} />\r\n          </Item>\r\n        )}\r\n      </Section>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: block;\r\n  flex-direction: column;\r\n  min-height: calc(100vh - 100px);\r\n`\r\n\r\nconst StatsCard = styled(Item)`\r\n  overflow: hidden;\r\n  min-width: 180px;\r\n\r\n  border-radius: 12px;\r\n  border: 1px solid rgb(225, 225, 225);\r\n\r\n  margin: 0px 15px;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n`;\r\n\r\nconst CenterHeading = styled.h2`\r\n  text-align: center;\r\n`;\r\n\r\nconst PoolContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst StatsHeading = styled(Item)`\r\n  flex: 0;\r\n  align-self: stretch;\r\n  color: #fff;\r\n  top: 0px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.1em;\r\n  font-size: 15px;\r\n  text-align: center;\r\n  padding: 10px 5px;\r\n  right: 0;\r\n  left: 0;\r\n`\r\n\r\nconst StatsContent = styled(Item)`\r\n  padding: 20px 20px;\r\n`\r\n\r\nconst StatsPreview = styled(Span)`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 10px;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  opacity: 0.25;\r\n  letter-spacing:0.1em;\r\n  text-transform: uppercase;\r\n  color: ${props => props.color || '#000'};\r\n  z-index: -1;\r\n`\r\n\r\nconst StatsInnerTitle = styled.span`\r\n  font-weight: bold;\r\n  font-size: 22px;\r\n  letter-spacing: 0.1em;\r\n`;\r\n\r\nconst StatsInnerSub = styled.span`\r\n  font-size: 12px;\r\n  color: #999;\r\n  font-weight: 600;\r\n  align-self: flex-end;\r\n`;\r\n\r\n// Export Default\r\nexport default YieldFarmingPage;\r\n","// FeedDB Helper Function\r\nconst NFTHelper = {\r\n  getNFTBalance: async (user, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      if(contract){\r\n        contract.balanceOf(user)\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getNFTBalance() --> %o\", response);\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getNFTBalance() --> %o\", err);\r\n          reject(err);\r\n        });\r\n\r\n      }\r\n      \r\n    })\r\n  },\r\n\r\n  getTotalSupply: async (contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      contract.totalSupply()\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getNFTBalance() --> %o\", response);\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getNFTBalance() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n\r\n  getOwnerOfTokenId: async (tokenId, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      contract.ownerOf(tokenId)\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getOwnerOfTokenId() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getOwnerOfTokenId() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n\r\n  getTokenOfOwnerByIndex: async (user, index, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      contract.tokenOfOwnerByIndex(user, index)\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getTokenOfOwnerByIndex() --> %o\", response);\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getTokenOfOwnerByIndex() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n\r\n  getTokenByIndex: async (index, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      contract.tokenByIndex(index)\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getTokenByIndex() --> %o\", response);\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getTokenByIndex() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n\r\n  getTokenMetadata: async (tokenId, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      contract.tokenURI(tokenId)\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getTokenMetadata() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getTokenMetadata() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n\r\n  getTokenMetadatasOfOwner: async (owner, nftContract, rewardsContract) => {\r\n    const enableLogs = 1;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      NFTHelper.getNFTBalance(owner, nftContract)\r\n      .then(async (balance) => {\r\n        // const balance = await res\r\n        let NFTDetails = []\r\n        let promises = []\r\n      \r\n      for(let i=0; i<balance; i++){\r\n        promises.push(NFTHelper.getTokenOfOwnerByIndex(owner, i, nftContract)\r\n        .then(async tokenId => {\r\n            await NFTHelper.getClaimable(tokenId, rewardsContract)\r\n            .then(async claimable => {\r\n              console.log(\"🚀 ~ file: NFTHelper.js ~ line 102 ~ .then ~ claimable\", claimable)\r\n\r\n              await NFTHelper.getTokenMetadata(tokenId, nftContract)\r\n              .then(async metadata => {\r\n                if(tokenId != null && metadata != null && claimable != null )\r\n                NFTDetails.push({id: tokenId, metadata, claimable})\r\n\r\n              })\r\n            })\r\n            .catch(err => {\r\n              console.log(\"!!!Error, getClaimable() --> %o\", err);\r\n              reject(err);\r\n            });\r\n        }))\r\n      }\r\n      // // wait until all promises are resolved\r\n      await Promise.all(promises);\r\n      console.log(\"🚀 ~ file: NFTHelper.js ~ line 83 ~ .then ~ NFTDetails\", NFTDetails)\r\n      resolve(NFTDetails);\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log(\"!!!Error, getTokenMetadatasOfOwner() --> %o\", err);\r\n        reject(err);\r\n      });\r\n        \r\n    })\r\n  },\r\n\r\n  getAllTokenDatas: async (nftContract, rewardsContract) => {\r\n    const enableLogs = 1;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      NFTHelper.getNFTBalance(nftContract)\r\n      .then(async (totalSupply) => {\r\n        let NFTDetails = []\r\n        let promises = []\r\n      \r\n      for(let i=0; i<totalSupply; i++){\r\n        promises.push(NFTHelper.getTokenByIndex(i, nftContract)\r\n        .then(async tokenId => {\r\n            await NFTHelper.getClaimable(tokenId, rewardsContract)\r\n            .then(async claimable => {\r\n              await NFTHelper.getTokenMetadata(tokenId, nftContract)\r\n              .then(async metadata => {\r\n                await NFTHelper.getOwnerOfTokenId(tokenId, nftContract)\r\n                .then(async owner => {\r\n                  if(tokenId != null && metadata != null && claimable != null && owner != null )\r\n                  NFTDetails.push({id: tokenId, metadata, owner, claimable})\r\n                })\r\n                .catch(err => {\r\n                  console.log(\"!!!Error, getAllTokenDatas::getOwnerOfTokenId() --> %o\", err);\r\n                  reject(err);\r\n                })\r\n              })\r\n              .catch(err => {\r\n                console.log(\"!!!Error, getAllTokenDatas::getTokenMetadata() --> %o\", err);\r\n                reject(err);\r\n              })\r\n            })\r\n            .catch(err => {\r\n              console.log(\"!!!Error, getAllTokenDatas::getClaimable() --> %o\", err);\r\n              reject(err);\r\n            });\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getAllTokenDatas::getTokenByIndex() --> %o\", err);\r\n          reject(err);\r\n        })\r\n        )\r\n      }\r\n      // // wait until all promises are resolved\r\n      await Promise.all(promises);\r\n      console.log(\"🚀 ~ file: NFTHelper.js ~ line 83 ~ .then ~ NFTDetails\", NFTDetails)\r\n      resolve(NFTDetails);\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log(\"!!!Error, getAllTokenDatas() --> %o\", err);\r\n        reject(err);\r\n      });\r\n        \r\n    })\r\n  },\r\n\r\n  getTokenData: async (tokenId, nftContract, rewardsContract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n             NFTHelper.getClaimable(tokenId, rewardsContract)\r\n            .then(async claimable => {\r\n              await NFTHelper.getTokenMetadata(tokenId, nftContract)\r\n              .then(async metadata => {\r\n                await NFTHelper.getOwnerOfTokenId(tokenId, nftContract)\r\n                .then(async owner => {\r\n                  if(tokenId != null && metadata != null && claimable != null && owner != null )\r\n                  resolve({id: tokenId, metadata, owner, claimable});\r\n                })\r\n              })\r\n            })\r\n            .catch(err => {\r\n              console.log(\"!!!Error, getTokenData() --> %o\", err);\r\n              reject(err);\r\n            });\r\n    })\r\n  },\r\n\r\n  transferNFT: async (from, to, tokenId, contract) => {\r\n    const enableLogs = 1;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      contract.safeTransferFrom(from, to, tokenId)\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"transferNFT() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, transferNFT() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n\r\n  getClaimable: async (tokenId, contract) => {\r\n    \r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      if(contract){\r\n        contract.getClaimRewardStatus(tokenId)\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getClaimable() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getClaimable() --> %o\", err);\r\n          reject(err);\r\n        });\r\n\r\n      }\r\n      \r\n    })\r\n  },\r\n\r\n}\r\n\r\nexport default NFTHelper;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport { Item, ItemH } from '../primaries/SharedStyling';\r\n\r\nimport { Device } from 'assets/Device';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { Oval } from 'react-loader-spinner';\r\n\r\nimport Skeleton from '@yisheng90/react-loading';\r\nimport { IoIosGift } from 'react-icons/io';\r\n\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { envConfig } from \"@project/contracts\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport ReactPlayer from 'react-player';\r\n\r\n// Create Header\r\nfunction ViewNFTItem({ NFTObject, setControlAt, setTokenId }) {\r\n  const { account, library, chainId } = useWeb3React();\r\n\r\n  const [NFTRewardsContract, setNFTRewardsContract] = React.useState(null);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [txInProgress, setTxInProgress] = React.useState(false);\r\n\r\n  const onMainnetCore = chainId === envConfig.mainnetCoreContractChain;\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (!!(library && account)) {\r\n      let signer = library.getSigner(account);\r\n      const NFTRewardsInstance = new ethers.Contract(addresses.NFTRewards, abis.NFTRewards, signer);\r\n      setNFTRewardsContract(NFTRewardsInstance);\r\n    }\r\n  }, [account, library]);\r\n\r\n  React.useEffect(() => {\r\n    if (NFTObject) {\r\n      setLoading(false);\r\n    }\r\n  }, [account, NFTObject]);\r\n\r\n  // to claim\r\n  const handleClaim = async (tokenId) => {\r\n    if (NFTRewardsContract) {\r\n      setTxInProgress(true)\r\n      let sendWithTxPromise\r\n      sendWithTxPromise = await NFTRewardsContract.claimReward(tokenId)\r\n      const tx = await sendWithTxPromise;\r\n\r\n      console.log(tx);\r\n      console.log(\"waiting for tx to finish\");\r\n      let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />, {\r\n        position: \"bottom-right\",\r\n        autoClose: false,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      try {\r\n        await library.waitForTransaction(tx.hash);\r\n\r\n        toast.update(txToast, {\r\n          render: \"Transaction Completed!\",\r\n          type: toast.TYPE.SUCCESS,\r\n          autoClose: 5000\r\n        });\r\n\r\n        setTxInProgress(false);\r\n      }\r\n      catch (e) {\r\n        toast.update(txToast, {\r\n          render: \"Transaction Failed! (\" + e.name + \")\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000\r\n        });\r\n\r\n        setTxInProgress(false);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  // toast customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Oval\r\n        color={color}\r\n        height={30}\r\n        width={30}\r\n      />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  )\r\n\r\n  // render\r\n  return (\r\n    <Item\r\n      key={NFTObject.id}\r\n    >\r\n      <ChannelLogo\r\n        theme={\r\n          !!account && !!library && account == NFTObject.owner ?\r\n            \"#e20880\" :\r\n            !!account && !!library && NFTObject.owner != 0xFbA7Df351ADD4E79099f63E33b2679EDFDD5e2aB ?\r\n              \"#eee\" :\r\n              \"#fff\"\r\n        }\r\n      >\r\n        <ChannelLogoOuter>\r\n          <ChannelLogoInner>\r\n            {loading &&\r\n              <Skeleton color=\"#eee\" width=\"100%\" height=\"100%\" />\r\n            }\r\n            {!loading &&\r\n              <ReactPlayer url={`https://ipfs.io/ipfs/${NFTObject.metadata}`} controls={true} playing={false} loop={true} />\r\n            }\r\n            {!!account && !!library && NFTObject.owner != 0xFbA7Df351ADD4E79099f63E33b2679EDFDD5e2aB &&\r\n              <NFTStatus>\r\n                <IoIosGift size={20} color=\"#fff\" />\r\n                <NFTStatusTitle>\r\n                  Gifted\r\n                </NFTStatusTitle>\r\n              </NFTStatus>\r\n            }\r\n\r\n            {!!account && !!library && NFTObject.claimable &&\r\n              <NFTClaim>\r\n                <NFTClaimTitle>\r\n                  2400 $PUSH\r\n                </NFTClaimTitle>\r\n              </NFTClaim>\r\n            }\r\n          </ChannelLogoInner>\r\n        </ChannelLogoOuter>\r\n\r\n        {!!account && !!library &&\r\n          <ItemH>\r\n\r\n            <ChannelActions>\r\n              {loading &&\r\n                <SkeletonButton>\r\n                  <Skeleton />\r\n                </SkeletonButton>\r\n              }\r\n              {!!account && !!library && onMainnetCore && account == NFTObject.owner && !loading &&\r\n                <UnsubscribeButton >\r\n                  <ActionTitle onClick={() => {\r\n                    setTokenId(NFTObject.id)\r\n                    setControlAt(2)\r\n                  }}\r\n                  >Transfer</ActionTitle>\r\n                </UnsubscribeButton>\r\n              }\r\n              {!!account && !!library && onMainnetCore && account == NFTObject.owner && !loading &&\r\n                <UnsubscribeButton disabled={!NFTObject.claimable}>\r\n                  {txInProgress &&\r\n                    <ActionLoader>\r\n                      <Oval\r\n                        color=\"#FFF\"\r\n                        height={16}\r\n                        width={16}\r\n                      />\r\n                    </ActionLoader>\r\n                  }\r\n                  {NFTObject.claimable &&\r\n                    <ActionTitle hideit={txInProgress} onClick={() => { handleClaim(NFTObject.id) }}>Claim $PUSH</ActionTitle>\r\n                  }\r\n                  {!NFTObject.claimable &&\r\n                    <ActionTitle hideit={txInProgress} >Rewards Claimed</ActionTitle>\r\n                  }\r\n                </UnsubscribeButton>\r\n              }\r\n            </ChannelActions>\r\n          </ItemH>\r\n        }\r\n      </ChannelLogo>\r\n    </Item>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst NFTTextStyle = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  padding: 2px 8px;\r\n  border-radius: 10px;\r\n  font-size: 11px;\r\n`\r\n\r\nconst NFTStatus = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 10px;\r\n`\r\n\r\nconst NFTStatusTitle = styled(NFTTextStyle)`\r\n  background: #35c4f3;\r\n`\r\n\r\nconst NFTClaim = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  position: absolute;\r\n  bottom: 10px;\r\n  left: 10px;\r\n`\r\n\r\nconst NFTClaimTitle = styled(NFTTextStyle)`\r\n  background: #e20880;\r\n`\r\n\r\nconst ChannelLogo = styled.div`\r\n  background: ${props => props.theme || '#fff'};\r\n  max-width: 25%;\r\n  min-width: 200px;\r\n  flex: 1;\r\n  margin: 5px;\r\n  padding: 10px;\r\n  border: 2px solid #fafafa;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-self: center;\r\n`\r\n\r\nconst ChannelLogoOuter = styled.div`\r\n  padding-top: 100%;\r\n  position: relative;\r\n`\r\n\r\nconst ChannelLogoInner = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ChannelMetaBox = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  padding: 2px 8px;\r\n  border-radius: 10px;\r\n  font-size: 11px;\r\n`\r\n\r\nconst ChannelActions = styled.div`\r\n  margin: 5px;\r\n  flex-grow: 1;\r\n  max-width: 120px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ChannelActionButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${props => props.disabled && css`\r\n    background: #e20880;\r\n    &:hover {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n    &:active {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n  `}\r\n`\r\n\r\nconst ActionTitle = styled.span`\r\n  font-size: 12px;\r\n  ${props => props.hideit && css`\r\n    visibility: hidden;\r\n  `};\r\n`\r\n\r\nconst ActionLoader = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst SkeletonButton = styled.div`\r\n  border: 0;\r\n  outline: 0;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px;\r\n  border-radius: 5px;\r\n  flex: 1;\r\n`\r\n\r\nconst UnsubscribeButton = styled(ChannelActionButton)`\r\n  background: #000;\r\n`\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`\r\n\r\n// Export Default\r\nexport default ViewNFTItem;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { Oval } from 'react-loader-spinner'\r\nimport { envConfig } from \"@project/contracts\";\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport NFTHelper from 'helpers/NFTHelper';\r\nimport { ethers } from \"ethers\";\r\n\r\nimport DisplayNotice from \"../primaries/DisplayNotice\";\r\nimport ViewNFTItem from \"components/ViewNFTItem\";\r\n\r\n// Create Header\r\nfunction MyNFTs({ controlAt, setControlAt, setTokenId }) {\r\n  const { account, library, chainId } = useWeb3React();\r\n\r\n  const [nftReadProvider, setNftReadProvider] = React.useState(null);\r\n  const [nftWriteProvider, setNftWriteProvider] = React.useState(null);\r\n  const [NFTRewardsContract, setNFTRewardsContract] = React.useState(null);\r\n  const [NFTObjects, setNFTObjects] = React.useState([]);\r\n\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  const onMainnetCore = chainId === envConfig.mainnetCoreContractChain;\r\n\r\n  const mainnetCoreProvider = onMainnetCore\r\n    ? library\r\n    : new ethers.providers.JsonRpcProvider(envConfig.mainnetCoreRPC);\r\n\r\n  React.useEffect(() => {\r\n    if (!!(mainnetCoreProvider && account)) {\r\n      const contractInstance = new ethers.Contract(addresses.rockstar, abis.rockstar, mainnetCoreProvider);\r\n      setNftReadProvider(contractInstance);\r\n      let signer = mainnetCoreProvider.getSigner(account);\r\n      const signerInstance = new ethers.Contract(addresses.rockstar, abis.rockstar, signer);\r\n      setNftWriteProvider(signerInstance);\r\n      const NFTRewardsInstance = new ethers.Contract(addresses.NFTRewards, abis.NFTRewards, signer);\r\n      setNFTRewardsContract(NFTRewardsInstance);\r\n    }\r\n  }, [account]);\r\n\r\n  React.useEffect(() => {\r\n    if (nftReadProvider && NFTRewardsContract) {\r\n      fetchNFTDetails();\r\n    }\r\n  }, [account, nftReadProvider, nftWriteProvider, NFTRewardsContract]);\r\n\r\n  // to fetch NFT Details\r\n  const fetchNFTDetails = async () => {\r\n    let balance = await NFTHelper.getNFTBalance(account, nftReadProvider);\r\n    setLoading(false);\r\n    for (let i = 0; i < balance; i++) {\r\n      let tokenId = await NFTHelper.getTokenOfOwnerByIndex(account, i, nftReadProvider)\r\n      let NFTObject = await NFTHelper.getTokenData(tokenId, nftReadProvider, NFTRewardsContract)\r\n      await setNFTObjects(prev => [...prev, NFTObject])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading &&\r\n        <ContainerInfo>\r\n          <Oval\r\n            color=\"#35c5f3\"\r\n            height={40}\r\n            width={40}\r\n          />\r\n        </ContainerInfo>\r\n      }\r\n\r\n      {!loading && NFTObjects.length == 0 &&\r\n        <ContainerInfo>\r\n          <DisplayNotice\r\n            title=\"No ROCKSTAR tokens are available in your account\"\r\n            theme=\"primary\"\r\n          />\r\n        </ContainerInfo>\r\n      }\r\n\r\n\r\n      {!loading && NFTObjects.length != 0 &&\r\n        <Items id=\"scrollstyle-secondary\">\r\n\r\n          {Object.keys(NFTObjects).map(index => {\r\n            if (NFTObjects[index].id) {\r\n              return (\r\n                <ViewNFTItem\r\n                  key={NFTObjects[index].id}\r\n                  NFTObject={NFTObjects[index]}\r\n                  nftReadProvider={nftReadProvider}\r\n                  nftWriteProvider={nftWriteProvider}\r\n                  controlAt={controlAt}\r\n                  setControlAt={setControlAt}\r\n                  setTokenId={setTokenId}\r\n                />\r\n              );\r\n            }\r\n\r\n          })}\r\n        </Items>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`\r\n\r\n// Export Default\r\nexport default MyNFTs;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport { Item, ItemH } from '../primaries/SharedStyling';\r\n\r\nimport { Device } from 'assets/Device';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { Oval } from 'react-loader-spinner';\r\n\r\nimport Skeleton from '@yisheng90/react-loading';\r\nimport { IoIosGift } from 'react-icons/io';\r\n\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { ethers } from \"ethers\";\r\nimport { envConfig } from \"@project/contracts\";\r\n\r\nimport ReactPlayer from 'react-player';\r\n\r\n// Create Header\r\nfunction ViewNFTV2Item({ NFTObject, setControlAt, setTokenId }) {\r\n  const { account, library, chainId } = useWeb3React();\r\n\r\n  const [NFTRewardsV2Contract, setNFTRewardsV2Contract] = React.useState(null);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [txInProgress, setTxInProgress] = React.useState(false);\r\n\r\n\r\n  const onMainnetCore = chainId === envConfig.mainnetCoreContractChain;\r\n\r\n  React.useEffect(() => {\r\n    if (!!(library && account)) {\r\n      let signer = library.getSigner(account);\r\n\r\n      const NFTRewardsV2Instance = new ethers.Contract(addresses.NFTRewardsV2, abis.NFTRewardsV2, signer);\r\n      setNFTRewardsV2Contract(NFTRewardsV2Instance);\r\n    }\r\n  }, [account, library]);\r\n\r\n  React.useEffect(() => {\r\n    if (NFTObject) {\r\n      setLoading(false);\r\n    }\r\n  }, [account, NFTObject]);\r\n\r\n  // to claim\r\n  const handleClaim = async (tokenId) => {\r\n    if (NFTRewardsV2Contract) {\r\n      setTxInProgress(true)\r\n      let sendWithTxPromise\r\n      sendWithTxPromise = await NFTRewardsV2Contract.claimReward(tokenId)\r\n      const tx = await sendWithTxPromise;\r\n\r\n      console.log(tx);\r\n      console.log(\"waiting for tx to finish\");\r\n      let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />, {\r\n        position: \"bottom-right\",\r\n        autoClose: false,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      try {\r\n        await library.waitForTransaction(tx.hash);\r\n\r\n        toast.update(txToast, {\r\n          render: \"Transaction Completed!\",\r\n          type: toast.TYPE.SUCCESS,\r\n          autoClose: 5000\r\n        });\r\n\r\n        setTxInProgress(false);\r\n      }\r\n      catch (e) {\r\n        toast.update(txToast, {\r\n          render: \"Transaction Failed! (\" + e.name + \")\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000\r\n        });\r\n\r\n        setTxInProgress(false);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  // toast customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Oval\r\n        color={color}\r\n        height={30}\r\n        width={30}\r\n      />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  )\r\n\r\n  let newIp = (NFTObject.nftInfo.animation_url).replace('https://epns.mypinata.cloud/ipfs/', 'https://ipfs.io/ipfs/')\r\n\r\n  // render\r\n  return (\r\n    <Item\r\n      key={NFTObject.id}\r\n    >\r\n      <ChannelLogo\r\n        theme={\r\n          !!account && !!library && account == NFTObject.owner ?\r\n            \"#e20880\" :\r\n            !!account && !!library && NFTObject.owner != 0xce5febfD9Eb155dd7d996FC04F1d763A3a9E0020 ?\r\n              \"#eee\" :\r\n              \"#fff\"\r\n        }\r\n      >\r\n        <ChannelLogoOuter>\r\n          <ChannelLogoInner>\r\n            {loading &&\r\n              <Skeleton color=\"#eee\" width=\"100%\" height=\"100%\" />\r\n            }\r\n            {!loading &&\r\n              <ReactPlayer url={`${newIp}`} controls={true} playing={false} loop={true} />\r\n            }\r\n            {!!account && !!library && NFTObject.owner != 0xce5febfD9Eb155dd7d996FC04F1d763A3a9E0020 &&\r\n              <NFTStatus>\r\n                <IoIosGift size={20} color=\"#fff\" />\r\n                <NFTStatusTitle>\r\n                  Gifted\r\n                </NFTStatusTitle>\r\n              </NFTStatus>\r\n            }\r\n\r\n            {!!account && !!library && NFTObject.claimable &&\r\n              <NFTClaim>\r\n                <NFTClaimTitle>\r\n                  900 $PUSH\r\n                </NFTClaimTitle>\r\n              </NFTClaim>\r\n            }\r\n          </ChannelLogoInner>\r\n        </ChannelLogoOuter>\r\n\r\n        {!!account && !!library &&\r\n          <ItemH>\r\n\r\n            <ChannelActions>\r\n              {loading &&\r\n                <SkeletonButton>\r\n                  <Skeleton />\r\n                </SkeletonButton>\r\n              }\r\n              {!!account && !!library && onMainnetCore && account == NFTObject.owner && !loading &&\r\n                <UnsubscribeButton >\r\n                  <ActionTitle onClick={() => {\r\n                    setTokenId(NFTObject.id)\r\n                    setControlAt(3)\r\n                  }}\r\n                  >Transfer</ActionTitle>\r\n                </UnsubscribeButton>\r\n              }\r\n              {!!account && !!library && onMainnetCore && account == NFTObject.owner && !loading &&\r\n                <UnsubscribeButton disabled={!NFTObject.claimable}>\r\n                  {txInProgress &&\r\n                    <ActionLoader>\r\n                      <Oval\r\n                        color=\"#FFF\"\r\n                        height={16}\r\n                        width={16}\r\n                      />\r\n                    </ActionLoader>\r\n                  }\r\n                  {NFTObject.claimable &&\r\n                    <ActionTitle hideit={txInProgress} onClick={() => { handleClaim(NFTObject.id) }}>Claim $PUSH</ActionTitle>\r\n                  }\r\n                  {!NFTObject.claimable &&\r\n                    <ActionTitle hideit={txInProgress} >Rewards Claimed</ActionTitle>\r\n                  }\r\n                </UnsubscribeButton>\r\n              }\r\n            </ChannelActions>\r\n          </ItemH>\r\n        }\r\n      </ChannelLogo>\r\n    </Item>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst NFTTextStyle = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  padding: 2px 8px;\r\n  border-radius: 10px;\r\n  font-size: 11px;\r\n`\r\n\r\nconst NFTStatus = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 10px;\r\n`\r\n\r\nconst NFTStatusTitle = styled(NFTTextStyle)`\r\n  background: #35c4f3;\r\n`\r\n\r\nconst NFTClaim = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  position: absolute;\r\n  bottom: 10px;\r\n  left: 10px;\r\n`\r\n\r\nconst NFTClaimTitle = styled(NFTTextStyle)`\r\n  background: #e20880;\r\n`\r\n\r\nconst ChannelLogo = styled.div`\r\n  background: ${props => props.theme || '#fff'};\r\n  max-width: 25%;\r\n  min-width: 200px;\r\n  flex: 1;\r\n  margin: 5px;\r\n  padding: 10px;\r\n  border: 2px solid #fafafa;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-self: center;\r\n`\r\n\r\nconst ChannelLogoOuter = styled.div`\r\n  padding-top: 100%;\r\n  position: relative;\r\n`\r\n\r\nconst ChannelLogoInner = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ChannelActions = styled.div`\r\n  margin: 5px;\r\n  flex-grow: 1;\r\n  max-width: 120px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ChannelActionButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${props => props.disabled && css`\r\n    background: #e20880;\r\n    &:hover {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n    &:active {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n  `}\r\n`\r\n\r\nconst ActionTitle = styled.span`\r\n  font-size: 12px;\r\n  ${props => props.hideit && css`\r\n    visibility: hidden;\r\n  `};\r\n`\r\n\r\nconst ActionLoader = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst SkeletonButton = styled.div`\r\n  border: 0;\r\n  outline: 0;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px;\r\n  border-radius: 5px;\r\n  flex: 1;\r\n`\r\n\r\nconst UnsubscribeButton = styled(ChannelActionButton)`\r\n  background: #000;\r\n`\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`\r\n\r\n// Export Default\r\nexport default ViewNFTV2Item;\r\n","import React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { Oval } from 'react-loader-spinner'\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport NFTHelper from 'helpers/NFTHelper';\r\nimport { ethers } from \"ethers\";\r\nimport { envConfig } from \"@project/contracts\";\r\n\r\nimport DisplayNotice from \"../primaries/DisplayNotice\";\r\nimport ViewNFTV2Item from \"components/ViewNFTsV2Item\";\r\nimport { ItemH } from \"../primaries/SharedStyling\";\r\n\r\n// Create Header\r\nfunction MyNFTs({ controlAt, setControlAt, setTokenId }) {\r\n  const { account, library, chainId } = useWeb3React();\r\n\r\n  const [nftReadProvider, setNftReadProvider] = React.useState(null);\r\n  const [nftWriteProvider, setNftWriteProvider] = React.useState(null);\r\n  const [NFTRewardsV2Contract, setNFTRewardsV2Contract] = React.useState(null);\r\n  const [NFTObjects, setNFTObjects] = useState([]);\r\n\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  const onMainnetCore = chainId === envConfig.mainnetCoreContractChain;\r\n\r\n  const mainnetCoreProvider = onMainnetCore\r\n    ? library\r\n    : new ethers.providers.JsonRpcProvider(envConfig.mainnetCoreRPC);\r\n\r\n  React.useEffect(() => {\r\n    if (!!(mainnetCoreProvider && account)) {\r\n      const contractInstance = new ethers.Contract(\r\n        addresses.rockstarV2,\r\n        abis.rockstarV2,\r\n        mainnetCoreProvider\r\n      );\r\n      setNftReadProvider(contractInstance);\r\n      let signer = mainnetCoreProvider.getSigner(account);\r\n      const signerInstance = new ethers.Contract(\r\n        addresses.rockstarV2,\r\n        abis.rockstarV2,\r\n        signer\r\n      );\r\n      setNftWriteProvider(signerInstance);\r\n      const NFTRewardsV2Instance = new ethers.Contract(\r\n        addresses.NFTRewardsV2,\r\n        abis.NFTRewardsV2,\r\n        signer\r\n      );\r\n      setNFTRewardsV2Contract(NFTRewardsV2Instance);\r\n    }\r\n  }, [account]);\r\n\r\n  React.useEffect(() => {\r\n    if (nftReadProvider) {\r\n      fetchNFTDetails();\r\n    }\r\n  }, [account, nftReadProvider]);\r\n\r\n\r\n  // to fetch NFT Details\r\n  const fetchNFTDetails = async () => {\r\n    let balance = await NFTHelper.getNFTBalance(account, nftReadProvider);\r\n    setLoading(false);\r\n    for (let i = 0; i < balance; i++) {\r\n      let tokenId = await NFTHelper.getTokenOfOwnerByIndex(account, i, nftReadProvider)\r\n      // let tokenURI = await NFTHelper.getTokenURIByIndex(tokenId, nftReadProvider);\r\n      let NFTObject = await NFTHelper.getTokenData(tokenId, nftReadProvider, NFTRewardsV2Contract)\r\n      let url = await callFunction(NFTObject.metadata)\r\n      NFTObject['nftInfo'] = url\r\n      setNFTObjects((prev) => [...prev, NFTObject]);\r\n    }\r\n  }\r\n\r\n  const callFunction = async (tokenURI) => {\r\n    let tokenUrl = tokenURI.replace('ipfs://', 'https://ipfs.io/ipfs/')\r\n    let response = await fetch(`${tokenUrl}`);\r\n    let data = await response.json()\r\n    return data\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading &&\r\n        <ContainerInfo>\r\n          <Oval\r\n            color=\"#35c5f3\"\r\n            height={40}\r\n            width={40}\r\n          />\r\n        </ContainerInfo>\r\n      }\r\n\r\n      {!loading && NFTObjects.length == 0 &&\r\n        <ContainerInfo>\r\n          <DisplayNotice\r\n            title=\"No ROCKSTAR NFTs are available in your account\"\r\n            theme=\"primary\"\r\n          />\r\n        </ContainerInfo>\r\n      }\r\n\r\n\r\n      {!loading && NFTObjects.length != 0 &&\r\n        <ItemH id=\"scrollstyle-secondary\">\r\n\r\n          {Object.keys(NFTObjects).map(index => {\r\n            if (NFTObjects) {\r\n              return (\r\n                <ViewNFTV2Item\r\n                  key={NFTObjects[index].id}\r\n                  NFTObject={NFTObjects[index]}\r\n                  nftReadProvider={nftReadProvider}\r\n                  nftWriteProvider={nftWriteProvider}\r\n                  controlAt={controlAt}\r\n                  setControlAt={setControlAt}\r\n                  setTokenId={setTokenId}\r\n                />\r\n              );\r\n            }\r\n\r\n          })}\r\n        </ItemH>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`\r\n\r\n// Export Default\r\nexport default MyNFTs;\r\n","import React from \"react\";\r\n\r\nimport styled from 'styled-components';\r\nimport { Section, ItemH } from 'primaries/SharedStyling';\r\n\r\nimport { Oval } from 'react-loader-spinner'\r\nimport { envConfig } from \"@project/contracts\";\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport NFTHelper from 'helpers/NFTHelper';\r\nimport { ethers } from \"ethers\";\r\n\r\nimport ViewNFTItem from \"components/ViewNFTItem\";\r\n\r\n// Create Header\r\nfunction AllNFTs({ controlAt, setControlAt, setTokenId }) {\r\n  const { account, chainId, library } = useWeb3React();\r\n\r\n  const [nftReadProvider, setNftReadProvider] = React.useState(null);\r\n  const [nftWriteProvider, setNftWriteProvider] = React.useState(null);\r\n  const [NFTRewardsContract, setNFTRewardsContract] = React.useState(null);\r\n  const [NFTObjects, setNFTObjects] = React.useState([]);\r\n\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  const onMainnetCore = chainId === envConfig.mainnetCoreContractChain;\r\n\r\n  const mainnetCoreProvider = onMainnetCore\r\n    ? library\r\n    : new ethers.providers.JsonRpcProvider(envConfig.mainnetCoreRPC)\r\n\r\n  React.useEffect(() => {\r\n    if (!!(mainnetCoreProvider && account)) {\r\n      const contractInstance = new ethers.Contract(addresses.rockstar, abis.rockstar, mainnetCoreProvider);\r\n      setNftReadProvider(contractInstance);\r\n      let signer = mainnetCoreProvider.getSigner(account);\r\n      const signerInstance = new ethers.Contract(addresses.rockstar, abis.rockstar, signer);\r\n      setNftWriteProvider(signerInstance);\r\n      const NFTRewardsInstance = new ethers.Contract(addresses.NFTRewards, abis.NFTRewards, signer);\r\n      setNFTRewardsContract(NFTRewardsInstance);\r\n    }\r\n  }, [account]);\r\n\r\n  React.useEffect(() => {\r\n    if (nftReadProvider && NFTRewardsContract) {\r\n      fetchNFTDetails();\r\n    }\r\n  }, [account, nftReadProvider, nftWriteProvider, NFTRewardsContract]);\r\n\r\n  // to fetch all minted NFT Details\r\n  const fetchNFTDetails = async () => {\r\n    let totalSupply = await NFTHelper.getTotalSupply(nftReadProvider);\r\n    setLoading(false);\r\n    for (let i = 0; i < totalSupply; i++) {\r\n      let tokenId = await NFTHelper.getTokenByIndex(i, nftReadProvider)\r\n      let NFTObject = await NFTHelper.getTokenData(tokenId, nftReadProvider, NFTRewardsContract)\r\n      await setNFTObjects(prev => [...prev, NFTObject])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Section align=\"center\">\r\n      {loading &&\r\n        <ContainerInfo>\r\n          <Oval\r\n            color=\"#674c9f\"\r\n            height={40}\r\n            width={40}\r\n          />\r\n        </ContainerInfo>\r\n      }\r\n\r\n      {/* {!loading && NFTObjects.length == 0 &&\r\n        <ContainerInfo>\r\n          <Oval\r\n           color=\"#674c9f\"\r\n           height={40}\r\n           width={40}\r\n          />\r\n        </ContainerInfo>\r\n      } */}\r\n\r\n      {!loading && NFTObjects.length != 0 &&\r\n        <ItemH id=\"scrollstyle-secondary\">\r\n          {Object.keys(NFTObjects).map(index => {\r\n            if (NFTObjects) {\r\n              return (\r\n                <>\r\n                  <ViewNFTItem\r\n                    key={NFTObjects[index].id}\r\n                    NFTObject={NFTObjects[index]}\r\n                    nftReadProvider={nftReadProvider}\r\n                    nftWriteProvider={nftWriteProvider}\r\n                    controlAt={controlAt}\r\n                    setControlAt={setControlAt}\r\n                    setTokenId={setTokenId}\r\n                  />\r\n                </>\r\n              );\r\n            }\r\n          })}\r\n        </ItemH>\r\n      }\r\n    </Section>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`\r\n\r\n// Export Default\r\nexport default AllNFTs;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport {\r\n  Section,\r\n  ItemH,\r\n} from \"../primaries/SharedStyling\";\r\n\r\nimport { Oval } from \"react-loader-spinner\";\r\n\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport NFTHelper from \"helpers/NFTHelper\";\r\nimport { ethers } from \"ethers\";\r\nimport { envConfig } from \"@project/contracts\";\r\nimport ViewNFTV2Item from \"components/ViewNFTsV2Item\";\r\n\r\n// Create Header\r\nfunction AllNFTsV2({ controlAt, setControlAt, setTokenId }) {\r\n  const { account, chainId, library } = useWeb3React();\r\n\r\n  const [nftReadProvider, setNftReadProvider] = React.useState(null);\r\n  const [nftWriteProvider, setNftWriteProvider] = React.useState(null);\r\n  const [NFTRewardsV2Contract, setNFTRewardsV2Contract] = React.useState(null);\r\n  const [NFTObjects, setNFTObjects] = React.useState([]);\r\n\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  const onMainnetCore = chainId === envConfig.mainnetCoreContractChain;\r\n\r\n  const mainnetCoreProvider = onMainnetCore\r\n    ? library\r\n    : new ethers.providers.JsonRpcProvider(envConfig.mainnetCoreRPC)\r\n\r\n  React.useEffect(() => {\r\n    if (!!(mainnetCoreProvider && account)) {\r\n      const contractInstance = new ethers.Contract(\r\n        addresses.rockstarV2,\r\n        abis.rockstarV2,\r\n        mainnetCoreProvider\r\n      );\r\n      setNftReadProvider(contractInstance);\r\n      let signer = mainnetCoreProvider.getSigner(account);\r\n      const signerInstance = new ethers.Contract(\r\n        addresses.rockstarV2,\r\n        abis.rockstarV2,\r\n        signer\r\n      );\r\n      setNftWriteProvider(signerInstance);\r\n      const NFTRewardsV2Instance = new ethers.Contract(\r\n        addresses.NFTRewardsV2,\r\n        abis.NFTRewardsV2,\r\n        signer\r\n      );\r\n      setNFTRewardsV2Contract(NFTRewardsV2Instance);\r\n    }\r\n  }, [account]);\r\n\r\n  React.useEffect(() => {\r\n    if (nftReadProvider) {\r\n      fetchNFTDetails();\r\n    }\r\n  }, [account, nftReadProvider]);\r\n\r\n  // to fetch all minted NFT Details\r\n  const fetchNFTDetails = async () => {\r\n    let totalSupply = await NFTHelper.getTotalSupply(nftReadProvider);\r\n    setLoading(false);\r\n    for (let i = 0; i < totalSupply; i++) {\r\n      let tokenId = await NFTHelper.getTokenByIndex(i, nftReadProvider)\r\n      // let tokenURI = await NFTHelper.getTokenURIByIndex(tokenId, nftReadProvider);\r\n      let NFTObject = await NFTHelper.getTokenData(\r\n        tokenId,\r\n        nftReadProvider,\r\n        NFTRewardsV2Contract\r\n      );\r\n      let tokenUrl = NFTObject.metadata.replace('ipfs://', 'https://ipfs.io/ipfs/')\r\n      let response = await fetch(`${tokenUrl}`);\r\n      let data = await response.json()\r\n      NFTObject['nftInfo'] = data\r\n      await setNFTObjects((prev) => [...prev, NFTObject]);\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Section align=\"center\">\r\n      {loading && (\r\n        <ContainerInfo>\r\n          <Oval color=\"#674c9f\" height={40} width={40} />\r\n        </ContainerInfo>\r\n      )}\r\n\r\n      {/* {!loading && NFTObjects.length == 0 &&\r\n        <ContainerInfo>\r\n          <Oval\r\n           color=\"#674c9f\"\r\n           height={40}\r\n           width={40}\r\n          />\r\n        </ContainerInfo>\r\n      } */}\r\n\r\n      {!loading && NFTObjects.length != 0 && (\r\n        <ItemH id=\"scrollstyle-secondary\">\r\n          {Object.keys(NFTObjects).map((index) => {\r\n            if (NFTObjects) {\r\n              return (\r\n                <>\r\n                  <ViewNFTV2Item\r\n                    key={NFTObjects[index]}\r\n                    NFTObject={NFTObjects[index]}\r\n                    nftReadProvider={nftReadProvider}\r\n                    nftWriteProvider={nftWriteProvider}\r\n                    controlAt={controlAt}\r\n                    setControlAt={setControlAt}\r\n                    setTokenId={setTokenId}\r\n                  />\r\n                </>\r\n              );\r\n            }\r\n          })}\r\n        </ItemH>\r\n      )}\r\n    </Section>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\n// Export Default\r\nexport default AllNFTsV2;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport { Section, Content, Item, H2, Span, Button, FormSubmision, Input } from '../primaries/SharedStyling';\r\n\r\nimport 'react-dropzone-uploader/dist/styles.css'\r\nimport { Oval } from 'react-loader-spinner';\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nconst ethers = require('ethers');\r\n\r\n// Create Header\r\nfunction TransferNFT({ tokenId }) {\r\n  const { account, library } = useWeb3React();\r\n\r\n  const [nftWriteProvider, setNftWriteProvider] = React.useState(null);\r\n  const [toAddress, setToAddress] = React.useState('');\r\n\r\n  const [processing, setProcessing] = React.useState(0);\r\n  const [processingInfo, setProcessingInfo] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    if (!!(library && account)) {\r\n      let signer = library.getSigner(account);\r\n      const signerInstance = new ethers.Contract(addresses.rockstar, abis.rockstar, signer);\r\n      setNftWriteProvider(signerInstance);\r\n    }\r\n  }, [account]);\r\n\r\n  const handleTransferNFT = async (e) => {\r\n    if (nftWriteProvider) {\r\n      console.log(\"🚀 ~ file: TransferNFT.js ~ line 64 ~ handleTransferNFT ~ nftWriteProvider\", nftWriteProvider)\r\n      e.preventDefault();\r\n\r\n      if (isEmpty(toAddress)) {\r\n        setProcessing(3);\r\n        setProcessingInfo(\"Recipient address field is empty! Please retry!\");\r\n\r\n        return false;\r\n      }\r\n      setProcessing(1);\r\n      setProcessingInfo(\"Transferring NFT...\")\r\n      let signer = library.getSigner(account);\r\n      const signerInstance = new ethers.Contract(addresses.rockstar, abis.rockstar, signer)\r\n      var txPromise = nftWriteProvider['safeTransferFrom(address,address,uint256)'](account, toAddress, tokenId);\r\n      const tx = await txPromise;\r\n      console.log(tx);\r\n      console.log(\"waiting for tx to finish\");\r\n      setProcessingInfo(\"Waiting for Transfer tx to finish...\");\r\n      await library.waitForTransaction(tx.hash);\r\n      setProcessingInfo(\"Transfer successfull! \");\r\n      setProcessing(3);\r\n    }\r\n  }\r\n\r\n  const isEmpty = (field) => {\r\n    if (field.trim().length == 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Content padding=\"10px 20px 20px\">\r\n          <Item align=\"flex-start\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span weight=\"200\">Transfer Your NFT!</Span>\r\n            </H2>\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Token #{tokenId}</Span>\r\n            </H2>\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n\r\n      <Section>\r\n        <Content padding=\"50px 0px 0px 0px\">\r\n          <FormSubmision\r\n            flex=\"1\"\r\n            direction=\"column\"\r\n            margin=\"0px\"\r\n            justify=\"center\"\r\n            size=\"1.1rem\"\r\n            onSubmit={handleTransferNFT}\r\n          >\r\n\r\n            <Item margin=\"-10px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n              <Input\r\n                required\r\n                placeholder=\"Recipient Address\"\r\n                maxlength=\"40\"\r\n                padding=\"12px\"\r\n                borderBottom=\"1px solid #000\"\r\n                weight=\"400\"\r\n                size=\"1.2em\"\r\n                bg=\"#fff\"\r\n                value={toAddress}\r\n                onChange={(e) => { setToAddress(e.target.value) }}\r\n              />\r\n              {toAddress.trim().length == 0 &&\r\n                <Span\r\n                  padding=\"4px 10px\"\r\n                  right=\"0px\"\r\n                  top=\"0px\"\r\n                  pos=\"absolute\"\r\n                  color=\"#fff\"\r\n                  bg=\"#000\"\r\n                  size=\"0.7rem\"\r\n                  z=\"1\"\r\n                >\r\n                  Recipient Address\r\n                </Span>\r\n              }\r\n            </Item>\r\n            <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n              <Button\r\n                bg='#674c9f'\r\n                color='#fff'\r\n                flex=\"1\"\r\n                radius=\"0px\"\r\n                padding=\"20px 10px\"\r\n                disabled={processing == 1 ? true : false}\r\n              >\r\n                {processing == 1 &&\r\n                  <Oval\r\n                    color=\"#fff\"\r\n                    height={24}\r\n                    width={24}\r\n                  />\r\n                }\r\n                {processing != 1 &&\r\n                  <Input cursor=\"hand\" textTransform=\"uppercase\" color=\"#fff\" weight=\"400\" size=\"0.8em\" spacing=\"0.2em\" type=\"submit\" value=\"Transfer\" />\r\n                }\r\n              </Button>\r\n            </Item>\r\n          </FormSubmision>\r\n        </Content>\r\n      </Section>\r\n\r\n      {(processing == 1 || processing == 3) &&\r\n        <Section>\r\n          <Content padding=\"0px 0px 0px 0px\">\r\n            <Item\r\n              color=\"#fff\"\r\n              bg={processing == 1 ? \"#e1087f\" : \"#000\"}\r\n              padding=\"10px 15px\"\r\n              margin=\"15px 0px\"\r\n            >\r\n              <Span\r\n                color=\"#fff\"\r\n                textTransform=\"uppercase\"\r\n                spacing=\"0.1em\"\r\n                weight=\"400\"\r\n                size=\"1em\"\r\n              >\r\n                {processingInfo}\r\n              </Span>\r\n            </Item>\r\n\r\n          </Content>\r\n        </Section>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n// Export Default\r\nexport default TransferNFT;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport { Section, Content, Item, H2, Span, Button, FormSubmision, Input } from '../primaries/SharedStyling';\r\n\r\nimport 'react-dropzone-uploader/dist/styles.css'\r\nimport { Oval } from 'react-loader-spinner';\r\n// import { bigNumberify, parseUnits } from 'ethers/utils'\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nconst ethers = require('ethers');\r\n// Create Header\r\nfunction TransferNFTv2({ tokenId }) {\r\n  const { account, library } = useWeb3React();\r\n\r\n  const [nftWriteProvider, setNftWriteProvider] = React.useState(null);\r\n  const [toAddress, setToAddress] = React.useState('');\r\n\r\n  const [processing, setProcessing] = React.useState(0);\r\n  const [processingInfo, setProcessingInfo] = React.useState('');\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (!!(library && account)) {\r\n      let signer = library.getSigner(account);\r\n      const signerInstance = new ethers.Contract(addresses.rockstarV2, abis.rockstarV2, signer);\r\n      setNftWriteProvider(signerInstance);\r\n    }\r\n  }, [account]);\r\n\r\n  const handleTransferNFT = async (e) => {\r\n    if (nftWriteProvider) {\r\n      e.preventDefault();\r\n\r\n      if (isEmpty(toAddress)) {\r\n        setProcessing(3);\r\n        setProcessingInfo(\"Recipient address field is empty! Please retry!\");\r\n\r\n        return false;\r\n      }\r\n      setProcessing(1);\r\n      setProcessingInfo(\"Transferring NFT...\")\r\n      let signer = library.getSigner(account);\r\n      const signerInstance = new ethers.Contract(addresses.rockstarV2, abis.rockstarV2, signer)\r\n      var txPromise = nftWriteProvider['safeTransferFrom(address,address,uint256)'](account, toAddress, tokenId);\r\n      const tx = await txPromise;\r\n      console.log(tx);\r\n      console.log(\"waiting for tx to finish\");\r\n      setProcessingInfo(\"Waiting for Transfer tx to finish...\");\r\n      await library.waitForTransaction(tx.hash);\r\n      setProcessingInfo(\"Transfer successfull! \");\r\n      setProcessing(3);\r\n    }\r\n  }\r\n\r\n  const isEmpty = (field) => {\r\n    if (field.trim().length == 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Content padding=\"10px 20px 20px\">\r\n          <Item align=\"flex-start\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span weight=\"200\">Transfer Your NFT!</Span>\r\n            </H2>\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Token #{tokenId}</Span>\r\n            </H2>\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n\r\n      <Section>\r\n        <Content padding=\"50px 0px 0px 0px\">\r\n          <FormSubmision\r\n            flex=\"1\"\r\n            direction=\"column\"\r\n            margin=\"0px\"\r\n            justify=\"center\"\r\n            size=\"1.1rem\"\r\n            onSubmit={handleTransferNFT}\r\n          >\r\n\r\n            <Item margin=\"-10px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n              <Input\r\n                required\r\n                placeholder=\"Recipient Address\"\r\n                maxlength=\"40\"\r\n                padding=\"12px\"\r\n                borderBottom=\"1px solid #000\"\r\n                weight=\"400\"\r\n                size=\"1.2em\"\r\n                bg=\"#fff\"\r\n                value={toAddress}\r\n                onChange={(e) => { setToAddress(e.target.value) }}\r\n              />\r\n              {toAddress.trim().length == 0 &&\r\n                <Span\r\n                  padding=\"4px 10px\"\r\n                  right=\"0px\"\r\n                  top=\"0px\"\r\n                  pos=\"absolute\"\r\n                  color=\"#fff\"\r\n                  bg=\"#000\"\r\n                  size=\"0.7rem\"\r\n                  z=\"1\"\r\n                >\r\n                  Recipient Address\r\n                </Span>\r\n              }\r\n            </Item>\r\n            <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n              <Button\r\n                bg='#674c9f'\r\n                color='#fff'\r\n                flex=\"1\"\r\n                radius=\"0px\"\r\n                padding=\"20px 10px\"\r\n                disabled={processing == 1 ? true : false}\r\n              >\r\n                {processing == 1 &&\r\n                  <Oval\r\n                    color=\"#fff\"\r\n                    height={24}\r\n                    width={24}\r\n                  />\r\n                }\r\n                {processing != 1 &&\r\n                  <Input cursor=\"hand\" textTransform=\"uppercase\" color=\"#fff\" weight=\"400\" size=\"0.8em\" spacing=\"0.2em\" type=\"submit\" value=\"Transfer\" />\r\n                }\r\n              </Button>\r\n            </Item>\r\n          </FormSubmision>\r\n        </Content>\r\n      </Section>\r\n\r\n      {(processing == 1 || processing == 3) &&\r\n        <Section>\r\n          <Content padding=\"0px 0px 0px 0px\">\r\n            <Item\r\n              color=\"#fff\"\r\n              bg={processing == 1 ? \"#e1087f\" : \"#000\"}\r\n              padding=\"10px 15px\"\r\n              margin=\"15px 0px\"\r\n            >\r\n              <Span\r\n                color=\"#fff\"\r\n                textTransform=\"uppercase\"\r\n                spacing=\"0.1em\"\r\n                weight=\"400\"\r\n                size=\"1em\"\r\n              >\r\n                {processingInfo}\r\n              </Span>\r\n            </Item>\r\n\r\n          </Content>\r\n        </Section>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n// Export Default\r\nexport default TransferNFTv2;\r\n","import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport styled, { css, useTheme } from 'styled-components';\r\nimport {Section, Content, Item, A, B, H2, H3, Span, Button} from '../primaries/SharedStyling';\r\n\r\nimport { BsChevronExpand } from 'react-icons/bs';\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport MyNFTs from \"components/MyNFTs\";\r\nimport MyNFTsV2 from \"components/MyNFTsV2\";\r\nimport AllNFTs from \"components/AllNFTs\";\r\nimport AllNFTsV2 from \"components/AllNFTsV2\";\r\nimport TransferNFT from \"components/TransferNFT\";\r\nimport TransferNFTv2 from \"components/TransferNFTv2\";\r\n\r\nimport {ThemeProvider} from \"styled-components\";\r\n\r\n// Create Header\r\nfunction NFTPage() {\r\n  // React GA Analytics\r\n  ReactGA.pageview(\"/rockstars\");\r\n\r\n  const { account } = useWeb3React();\r\n\r\n  const themes = useTheme();\r\n\r\n  const [tokenId, setTokenId] = React.useState(null);\r\n  const [controlAt, setControlAt] = React.useState(1);\r\n  const [version, setVersion] = React.useState(2);\r\n\r\n  const [showAnswers, setShowAnswers] = React.useState([]);\r\n\r\n  const toggleShowAnswer = (id) => {\r\n    let newShowAnswers = [...showAnswers];\r\n    newShowAnswers[id] = !newShowAnswers[id];\r\n\r\n    setShowAnswers(newShowAnswers);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    userClickedAt(2);\r\n  }, [account]);\r\n\r\n  // handle user action at control center\r\n  const userClickedAt = (controlIndex) => {\r\n    setVersion(controlIndex);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.checked) {\r\n      setControlAt(0);\r\n    } else {\r\n      setControlAt(1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Section>\r\n          <Content padding=\"20px 20px 0px\">\r\n          <Item align=\"flex-start\" margin=\"0px 20px 0px 20px\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">$ROCKSTAR</Span><Span weight=\"200\" color={themes.color}> of </Span><Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">EPNS</Span>\r\n            </H2>\r\n            <H3 color={themes.greyText}>Thank you <B color={themes.color}>community</B> for all your support. Over the next year, we are excited to continue returning our gratitude!</H3>\r\n          </Item>\r\n\r\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 20px 0px 20px\">\r\n\r\n            {/* Question */}\r\n            <Item align=\"stretch\" margin=\"0px 0px 20px 0px\">\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => {toggleShowAnswer(1)}}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    Does $ROCKSTAR of EPNS NFTs carry something along with NFTs?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                </Question>\r\n\r\n                {showAnswers[1] &&\r\n                  <Answer>\r\n                    <Span>\r\n                      Yes, Each <B>$ROCKSTAR</B> contains <B>2400 $PUSH</B> tokens that can be claimed instantly!!! <AMod href=\"https://medium.com/ethereum-push-notification-service/push-token-economics-d7f566c29b1a\" target=\"_blank\" title=\"Read more about $PUSH tokeneconomics\">Learn about $PUSH Token Economics.</AMod>\r\n                    </Span>\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => {toggleShowAnswer(2)}}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    How to get $ROCKSTAR of EPNS?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                </Question>\r\n\r\n                {showAnswers[2] &&\r\n                  <Answer>\r\n                    <Span>\r\n                      We’ll be distributing one NFT a week (every Monday) to one community member who does something to help us push the envelope forward. <AMod href=\"https://medium.com/ethereum-push-notification-service/kicking-off-the-epns-nft-community-drops-6a5c49808cf\" target=\"_blank\" title=\"Read how to get $ROCKSTAR of EPNS\">Here are some ways by which you can get one!</AMod>\r\n                    </Span>\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n            </Item>\r\n          </Item>\r\n        </Content>\r\n\r\n        <Content padding=\"0px 20px 20px\" bg=\"#eee\">\r\n          <Item align=\"flex-start\" margin=\"0px 20px 0px 20px\">\r\n            \r\n          <Controls>\r\n              <SubscribeButton\r\n                className={version === 2 ? \"v2\" : \"v1\"}\r\n                // index={2}\r\n                // active={version == 0 ? 1 : 0}\r\n                onClick={() => {\r\n                  userClickedAt(2);\r\n                }}\r\n              >\r\n                <ActionTitle>ROCKSTAR V2</ActionTitle>\r\n              </SubscribeButton>\r\n\r\n              <SubscribeButton\r\n                className={version === 1 ? \"v2\" : \"v1\"}\r\n                // index={1}\r\n                // active={version == 1 ? 1 : 0}\r\n                onClick={() => {\r\n                  userClickedAt(1);\r\n                }}\r\n              >\r\n                <ActionTitle>ROCKSTAR V1</ActionTitle>\r\n              </SubscribeButton> \r\n\r\n              <CheckSpace>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"checkbox\"\r\n                  onChange={handleChange}\r\n                />\r\n                {/* <span className=\"\"></span> */}\r\n                Show mine\r\n              </CheckSpace>\r\n            </Controls>\r\n           \r\n\r\n            {controlAt === 0 && version === 1 && (\r\n              <MyNFTs\r\n                controlAt={controlAt}\r\n                setControlAt={setControlAt}\r\n                setTokenId={setTokenId}\r\n              />\r\n            )}\r\n\r\n            {controlAt === 0 && version === 2 && (\r\n              <MyNFTsV2\r\n                controlAt={controlAt}\r\n                setControlAt={setControlAt}\r\n                setTokenId={setTokenId}\r\n              />\r\n            )}\r\n            \r\n            {/* NFTs version 1 */}\r\n            {controlAt === 1 && version === 1 && (\r\n              <AllNFTs\r\n                controlAt={controlAt}\r\n                setControlAt={setControlAt}\r\n                setTokenId={setTokenId}\r\n              />\r\n            )}\r\n\r\n            {/* NFTs version 2 */}\r\n             {controlAt === 1 && version === 2 && (\r\n              <AllNFTsV2\r\n                controlAt={controlAt}\r\n                setControlAt={setControlAt}\r\n                setTokenId={setTokenId}\r\n              />\r\n            )}\r\n            {controlAt === 2 && tokenId && <TransferNFT tokenId={tokenId} />}\r\n            {controlAt === 3 && tokenId && <TransferNFTv2 tokenId={tokenId} />}\r\n          </Item>\r\n          </Content>\r\n      </Section>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  max-height: 80vh;\r\n`\r\n\r\nconst Controls = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst CheckSpace = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-left: auto;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  font-size: 12px;\r\n  background-color: #adb5bd;\r\n  height: 20px;\r\n  padding: 0px 5px;\r\n  color: white;\r\n  input.checkbox {\r\n    width: 11px;\r\n    height: 11px;\r\n    margin-right: 5px;\r\n    border: 1px solid transparent;\r\n    // -webkit-appearance: none;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    -o-appearance: none;\r\n    appearance: none;\r\n    background-color: white;\r\n    &:checked {\r\n      background-color: #E10780;\r\n      border: 1px solid transparent;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`\r\n\r\nconst ChannelActionButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: left;\r\n  // align-items: center;\r\n  justify-content: flex-end;\r\n  // justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${ props => props.disabled && css`\r\n    &:hover {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n    &:active {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n  `}\r\n`\r\n\r\nconst ChannelRockstarButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: left;\r\n  // align-items: center;\r\n  justify-content: flex-end;\r\n  // justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  // border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${(props) =>\r\n    props.disabled &&\r\n    css`\r\n      &:hover {\r\n        opacity: 1;\r\n        cursor: default;\r\n        pointer: default;\r\n      }\r\n      &:active {\r\n        opacity: 1;\r\n        cursor: default;\r\n        pointer: default;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst SubscribeButton = styled(ChannelActionButton)`\r\n  &.v1 {\r\n    background-color: #adb5bd;\r\n  }\r\n  &.v2 {\r\n    background-color: #35c5f3;\r\n  }\r\n  border-radius: 0px;\r\n  font-size: 1rem;\r\n  letter-spacing: 0.1rem;\r\n`;\r\n\r\nconst ActionTitle = styled.span`\r\n  ${ props => props.hideit && css`\r\n    visibility: hidden;\r\n  `};\r\n`\r\n\r\nconst Question = styled(Button)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n`\r\n\r\nconst Answer = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n\r\n`\r\n\r\nconst QnAItem = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n  flex: auto;\r\n  margin: 15px 0px;\r\n  border: 1px solid ${props => props.theme.qnaBgBorder};\r\n  border-radius: 10px;\r\n  box-shadow: 0px 5px 20px -10px rgb(0 0 0 / 0.20);\r\n  overflow: hidden;\r\n\r\n  & ${Question} {\r\n    background: ${props => props.theme.qnaBg};\r\n    justify-content: flex-start;\r\n    text-transform: uppercase;\r\n\r\n    & ${Span} {\r\n      font-weight: 400;\r\n      letter-spacing: 0.2em;\r\n      margin-left: 10px;\r\n      flex: 1;\r\n    }\r\n\r\n    &:hover {\r\n      & ${Span} {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  & ${Answer} {\r\n    border: 1px solid #e6e6e6;\r\n    border-top: 1px solid #e6e6e6;\r\n    border-bottom-left-radius: 10px;\r\n    border-bottom-right-radius: 10px;\r\n    padding: 10px 15px;\r\n    align-items: flex-start;\r\n    background: #fff;\r\n\r\n    & ${Span} {\r\n      line-height: 1.5em;\r\n      margin: 10px;\r\n      color: #000 ;\r\n      font-size: 1.05em;\r\n    }\r\n  }\r\n`\r\n\r\nconst AMod = styled(A)`\r\n  color: #e20880;\r\n  font-weight: 500;\r\n`\r\n\r\n// Export Default\r\nexport default NFTPage;\r\n","import React, { useState } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport styled, { useTheme } from 'styled-components';\r\nimport { Section, Content, Item, Para, A, B, H2, H3, Span, Button } from '../primaries/SharedStyling';\r\n\r\nimport { BsChevronExpand } from 'react-icons/bs';\r\n\r\nimport { Oval } from 'react-loader-spinner'\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport AirdropHelper from 'helpers/AirdropHelper';\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { envConfig } from \"@project/contracts\";\r\n\r\n\r\nimport * as dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\n// Other Information section\r\nfunction AirdropPage() {\r\n  // React GA Analytics\r\n  ReactGA.pageview(\"/airdrop\");\r\n\r\n  const themes = useTheme();\r\n\r\n  const { account, library, chainId } = useWeb3React();\r\n  const onCoreNetwork = chainId === envConfig.coreContractChain;\r\n\r\n  const [controlAt, setControlAt] = React.useState(0);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [txInProgress, setTxInProgress] = React.useState(false);\r\n  const [distributorContract, setDistributorContract] = React.useState(null);\r\n  const [user, setUser] = React.useState(null);\r\n\r\n  const [showAnswers, setShowAnswers] = React.useState([]);\r\n\r\n  const toggleShowAnswer = (id) => {\r\n    let newShowAnswers = [...showAnswers];\r\n    newShowAnswers[id] = !newShowAnswers[id];\r\n\r\n    setShowAnswers(newShowAnswers);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (!onCoreNetwork) {\r\n      const url = window.location.origin;\r\n      window.location.replace(`${url}/#/notavailable`);\r\n    }\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    if (!!(library && account)) {\r\n      let signer = library.getSigner(account);\r\n      console.log(abis.distributor)\r\n      const signerInstance = new ethers.Contract(addresses.distributor, abis.distributor, signer);\r\n      setDistributorContract(signerInstance);\r\n    }\r\n  }, [account, library]);\r\n\r\n  React.useEffect(() => {\r\n    if (distributorContract) {\r\n      checkClaim();\r\n    }\r\n  }, [account, distributorContract]);\r\n\r\n  // to check wh\r\n  const checkClaim = async () => {\r\n    let user = await AirdropHelper.verifyAddress(account, distributorContract);\r\n    setUser(user)\r\n    if (user)\r\n      setLoading(false)\r\n  }\r\n\r\n  // to claim\r\n  const handleClaim = async (user) => {\r\n    if (distributorContract) {\r\n      setTxInProgress(true)\r\n      let sendWithTxPromise\r\n      sendWithTxPromise = await distributorContract.claim(user.index, user.account, user.amount, user.proof)\r\n      const tx = await sendWithTxPromise;\r\n      console.log(tx);\r\n      console.log(\"waiting for tx to finish\");\r\n      let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />, {\r\n        position: \"bottom-right\",\r\n        autoClose: false,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      try {\r\n        await library.waitForTransaction(tx.hash);\r\n\r\n        toast.update(txToast, {\r\n          render: \"Transaction Completed!\",\r\n          type: toast.TYPE.SUCCESS,\r\n          autoClose: 5000\r\n        });\r\n\r\n        setTxInProgress(false);\r\n      }\r\n      catch (e) {\r\n        toast.update(txToast, {\r\n          render: \"Transaction Failed! (\" + e.name + \")\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000\r\n        });\r\n\r\n        setTxInProgress(false);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  // toast customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Oval\r\n        color={color}\r\n        height={30}\r\n        width={30}\r\n      />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  )\r\n\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Section margin=\"20px\">\r\n        <Content padding=\"0px 20px 0px\">\r\n          <Item align=\"flex-start\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span bg=\"#35c5f3\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Gratitude</Span><Span weight=\"200\" color={themes.color}> Drop!</Span>\r\n            </H2>\r\n            <H3 color={themes.color}>We would never be here without you! Thanks for the <b color={themes.color}>#PUSH</b>!!!</H3>\r\n          </Item>\r\n        </Content>\r\n\r\n        <Content padding=\"0px 20px 0px 20px\">\r\n          <Item align=\"flex-start\">\r\n            <Para margin=\"10px 0px 0px 0px\" color={themes.color}>Thanks for the ton of support, feedback, encouragement and helping us out in every step! As a small token of our gratitude, we are dropping <B color={themes.color}>1200 $PUSH</B> to anyone who:</Para>\r\n\r\n            <Para margin=\"20px 0px 0px 20px\" color={themes.color}>- Donated to us on <B color={themes.color}>Gitcoin grants round 6 or 7</B></Para>\r\n            <Para margin=\"10px 0px 0px 20px\" color={themes.color}>- Used our dApp on or before <B color={themes.color}>20th March, 2021</B>: <AMod href=\"https://app.epns.io\" target=\"_blank\" title=\"Visit our dApp\">EPNS dApp</AMod></Para>\r\n          </Item>\r\n\r\n          <Item padding=\"40px 0px 20px 0px\">\r\n            {loading &&\r\n              <Oval\r\n                color=\"#35c5f3\"\r\n                height={40}\r\n                width={40}\r\n              />\r\n            }\r\n\r\n            {!loading && controlAt == 0 &&\r\n              <>\r\n                {user.verified && user.claimable &&\r\n                  <EpicButton\r\n                    onClick={() => { handleClaim(user) }}\r\n                  >\r\n                    Claim $PUSH Tokens\r\n                  </EpicButton>\r\n                }\r\n                {user.verified && !user.claimable &&\r\n\r\n                  <EpicButton\r\n                    theme=\"claimed\"\r\n                    disabled={true}\r\n                  >\r\n                    $PUSH Tokens Claimed\r\n                  </EpicButton>\r\n                }\r\n                {!user.verified &&\r\n                  <EpicButton\r\n                    theme=\"noteligible\"\r\n                    disabled={true}\r\n                  >\r\n                    Not eligible for Gratitude Drop\r\n                  </EpicButton>\r\n                }\r\n              </>\r\n            }\r\n          </Item>\r\n\r\n        </Content>\r\n      </Section>\r\n\r\n      {/* FAQs */}\r\n      <Section themes={themes.mainBg} padding=\"0px 0px 0px 0px\">\r\n        <Content className=\"contentBox\">\r\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"-10px 20px 0px 20px\">\r\n\r\n            {/* Question */}\r\n            <Item align=\"stretch\" margin=\"0px 0px 0px 0px\">\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => { toggleShowAnswer(1) }}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    What is $PUSH contract address?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                </Question>\r\n\r\n                {showAnswers[1] &&\r\n                  <Answer>\r\n                    <Span>$PUSH token contract address is <B>0xf418588522d5dd018b425E472991E52EBBeEEEEE</B></Span>\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => { toggleShowAnswer(2) }}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    What is EPNS?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                </Question>\r\n\r\n                {showAnswers[2] &&\r\n                  <Answer>\r\n                    <Span>Ethereum Push Notification Service (EPNS) is a decentralized protocol allowing Ethereum users to receive notifications for on-chain or off-chain activity.</Span>\r\n\r\n                    <Span>EPNS allows Web3 actors (users, dapps, service providers) to create notifications that are triggered if and when a smart contract reaches certain conditions. Other Web3 participants can search, browse, and subscribe to specific notifications and more confidently interact with dapps.</Span>\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => { toggleShowAnswer(3) }}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    Why are push notifications important for Web3?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                </Question>\r\n\r\n                {showAnswers[3] &&\r\n                  <Answer>\r\n                    <Span>Push notifications have transformed the Web2 ecosystem. They have enabled applications to have more direct relationships with users and have yielded fundamental strategies about marketing, product fit, user behavior, and more. </Span>\r\n\r\n                    <Span>The problem with Web2 notifications, however, is that they are entirely created and prescribed by the applications themselves, and are not always net-useful to the end user. Users rarely have a choice about what kinds of notifications they wish to receive, and more often than not, notifications are purely marketing vehicles to drive revenue for the applications.</Span>\r\n\r\n                    <Span><i><B>Decentralized notifications</B></i>, on the other hand, provide the emerging Web3 ecosystem with the benefits of a robust notification ecosystem without the exploitative or centralized drawbacks of Web2 notifications.</Span>\r\n\r\n                    <Span>Applications need ways to communicate with users in more immediate and event-initiated ways than through Twitter, Discord, or email. Users deserve to control what notifications they receive, and should benefit from the open source nature of Web3 by requesting notifications about protocol behavior.</Span>\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => { toggleShowAnswer(4) }}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    How can I keep up with EPNS?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                </Question>\r\n\r\n                {showAnswers[4] &&\r\n                  <Answer>\r\n                    <Span>Join our <AMod href=\"https://t.me/epnsproject\" target=\"_blank\" title=\"Join our EPNS's Telegram channel\">Telegram</AMod>, follow us on <AMod href=\"https://twitter.com/epnsproject\" target=\"_blank\" title=\"Join our EPNS's Twitter channel\">Twitter</AMod>, and sign up for our 5 minute <AMod href=\"https://epns.substack.com/\" target=\"_blank\" title=\"Join our EPNS's Twitter channel\">weekly product updates</AMod>.</Span>\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n\r\n            </Item>\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`\r\nconst Question = styled(Button)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n`\r\n\r\nconst Answer = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n\r\n`\r\n\r\nconst QnAItem = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n  flex: auto;\r\n  margin: 15px 0px;\r\n  border: 1px solid ${props => props.theme.qnaBgBorder};\r\n  border-radius: 10px;\r\n  box-shadow: 0px 5px 20px -10px rgb(0 0 0 / 0.20);\r\n  overflow: hidden;\r\n\r\n  & ${Question} {\r\n    background: ${props => props.theme.qnaBg};\r\n    justify-content: flex-start;\r\n    text-transform: uppercase;\r\n\r\n    & ${Span} {\r\n      font-weight: 400;\r\n      letter-spacing: 0.2em;\r\n      margin-left: 10px;\r\n      flex: 1;\r\n    }\r\n\r\n    &:hover {\r\n      & ${Span} {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  & ${Answer} {\r\n    border: 1px solid #e6e6e6;\r\n    border-top: 1px solid #e6e6e6;\r\n    border-bottom-left-radius: 10px;\r\n    border-bottom-right-radius: 10px;\r\n    padding: 10px 15px;\r\n    align-items: flex-start;\r\n    background: #fff;\r\n\r\n    & ${Span} {\r\n      line-height: 1.5em;\r\n      margin: 10px;\r\n      color: #000 ;\r\n      font-size: 1.05em;\r\n    }\r\n  }\r\n`\r\n\r\nconst AMod = styled(A)`\r\n  color: #e20880;\r\n  font-weight: 500;\r\n`\r\n\r\nconst EpicButton = styled(A)`\r\n  padding: 15px 15px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  border-radius: 8px;\r\n  background: ${prop => prop.theme === ('claimed' || 'noteligible') ? '#000' : 'linear-gradient(273deg, #674c9f 0%, rgba(226,8,128,1) 100%)'};\r\n`\r\n\r\n// Export Default\r\nexport default AirdropPage;\r\n","import React from \"react\";\r\n\r\nimport styled, { useTheme } from 'styled-components';\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { Section, Content, Item } from '../primaries/SharedStyling';\r\n\r\nfunction ComingSoonPage(props) {\r\n  const themes = useTheme();\r\n\r\n  // Render\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Section style={{ minHeight: '60vh' }}>\r\n        <Content padding=\"0px 20px 0px\">\r\n          <Item align=\"center\">\r\n            {console.log(props.theme)}\r\n            <Heading color=\"#333\" spacing=\"0.05em\" size=\"4rem\" weight={700}>\r\n              Coming soon.\r\n            </Heading>\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nconst Heading = styled.h2`\r\n  color: ${props => props.theme.scheme === \"dark\" ? props.theme.color : props.color || \"#000\"};\r\n  text-shadow: 2px 0 ${props => props.theme.scheme === \"dark\" ? props.theme.color : props.color || \"#000\"};\r\n  font-weight: ${props => props.weight || 600};\r\n  font-size: ${props => props.size || \"2rem\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  margin: ${props => props.margin || \"20px 0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\r\n  text-align: ${props => props.textAlign || \"inherit\"};\r\n\r\n  @media (max-width: 768px) {\r\n\t\tfont-size: 2.8rem;\r\n\t}\r\n`\r\n\r\n// Export Default\r\nexport default ComingSoonPage;","import React from \"react\";\r\n\r\nimport styled, { useTheme } from 'styled-components';\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { Section, Content, Item } from '../primaries/SharedStyling';\r\nimport { envConfig } from \"@project/contracts\";\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nconst networkName = {\r\n  42: \"Ethereum Kovan\",\r\n  1: \"Ethereum Mainnet\"\r\n}\r\n\r\nfunction NotAvailablePage(props) {\r\n  const themes = useTheme();\r\n  const { chainId } = useWeb3React();\r\n  const onCoreNetwork = chainId === envConfig.coreContractChain;\r\n\r\n  React.useEffect(() => {\r\n    if (onCoreNetwork) {\r\n      const url = window.location.origin;\r\n      window.location.replace(`${url}/#/channels`);\r\n    }\r\n  })\r\n\r\n  // Render\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Section style={{ minHeight: '60vh' }}>\r\n        <Content padding=\"0px 20px 0px\">\r\n          <Item align=\"center\">\r\n            <Heading color=\"#333\" spacing=\"0.05em\" size=\"2rem\" weight={700}>\r\n              Kindly switch to {networkName[envConfig.coreContractChain]} Network to view this page.\r\n            </Heading>\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nconst Heading = styled.h2`\r\n  color: ${props => props.theme.scheme === \"dark\" ? props.theme.color : props.color || \"#000\"};\r\n  text-shadow: 2px 0 ${props => props.theme.scheme === \"dark\" ? props.theme.color : props.color || \"#000\"};\r\n  font-weight: ${props => props.weight || 600};\r\n  font-size: ${props => props.size || \"2rem\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  margin: ${props => props.margin || \"20px 0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\r\n  text-align: ${props => props.textAlign || \"inherit\"};\r\n\r\n  @media (max-width: 768px) {\r\n\t\tfont-size: 1.5rem;\r\n\t}\r\n`\r\n\r\n// Export Default\r\nexport default NotAvailablePage;","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styled, { useTheme } from 'styled-components';\r\n\r\nimport { Section, Content, Item, B, H2, H3, Span, Button} from '../primaries/SharedStyling';\r\nimport { setRun } from \"redux/slices/userJourneySlice\";\r\n\r\nimport { BsChevronExpand } from 'react-icons/bs';\r\n\r\nimport GLOBALS from \"config/Globals\";\r\n\r\nfunction TutorialPage() {\r\n  const dispatch = useDispatch();\r\n  const themes = useTheme();\r\n\r\n  const { run } = useSelector((state: any) => state.userJourney);\r\n\r\n  const onStart = () => {\r\n    if (run === false) {\r\n      dispatch(setRun(true));\r\n      // dispatch(incrementStepIndex());\r\n    }\r\n  }\r\n\r\n  // Render\r\n  return (\r\n    <Container>\r\n      <Content className=\"contentBox\" padding=\"20px 0px 0px 0px\">\r\n        <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 30px\">\r\n\r\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 0px 0px 0px\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\" margin=\"10px 0px 20px 0px\">\r\n              <Span weight=\"200\" color={themes.fontColor}>Live </Span><Span bg=\"#35c5f3\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Walkthrough</Span>\r\n            </H2>\r\n            <H3 maxWidth=\"768px\" color={themes.fontColorSecondary}>Let's walk you through the core functions of EPNS, the <B>native web3 communication protocol!</B></H3>\r\n          </Item>\r\n\r\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 0px 20px 0px\">\r\n            <QnAItem>\r\n              <Question\r\n                onClick={() => { onStart() }}\r\n                hover=\"#e20880\"\r\n              >\r\n                <Span color={themes.color}>\r\n                  Show me everything!\r\n                </Span>\r\n                <BsChevronExpand size={20} color={\"#ddd\"} />\r\n              </Question>\r\n            </QnAItem>\r\n          </Item>\r\n\r\n        </Item>\r\n      </Content>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css style\r\nconst Container = styled(Section)`\r\n  flex: 1;\r\n  flex-direction: column;\r\n  height: calc(100vh - ${GLOBALS.CONSTANTS.HEADER_HEIGHT}px - 52px - ${props => props.theme.interfaceTopPadding});\r\n  background: ${props => props.theme.mainBg};\r\n  align-self: stretch;\r\n`;\r\n\r\nconst Question = styled(Button)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n`\r\n\r\nconst Answer = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n\r\n`\r\n\r\nconst QnAItem = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n  flex: auto;\r\n  margin: 15px 0px;\r\n  border: 1px solid ${props => props.theme.qnaBgBorder};\r\n  border-radius: 10px;\r\n  box-shadow: 0px 5px 20px -10px rgb(0 0 0 / 0.20);\r\n  overflow: hidden;\r\n\r\n  & ${Question} {\r\n    background: ${props => props.theme.qnaBg};\r\n    justify-content: flex-start;\r\n    text-transform: uppercase;\r\n\r\n    & ${Span} {\r\n      font-weight: 400;\r\n      letter-spacing: 0.2em;\r\n      margin-left: 10px;\r\n      flex: 1;\r\n    }\r\n\r\n    &:hover {\r\n      & ${Span} {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  & ${Answer} {\r\n    border: 1px solid #e6e6e6;\r\n    border-top: 1px solid #e6e6e6;\r\n    border-bottom-left-radius: 10px;\r\n    border-bottom-right-radius: 10px;\r\n    padding: 10px 15px;\r\n    align-items: flex-start;\r\n    background: #fff;\r\n\r\n    & ${Span} {\r\n      line-height: 1.5em;\r\n      margin: 10px;\r\n      color: #000 ;\r\n      font-size: 1.05em;\r\n    }\r\n  }\r\n`\r\n\r\n// Export Default\r\nexport default TutorialPage;","import React from \"react\";\r\n\r\nimport styled, { useTheme } from 'styled-components';\r\nimport { Section, Content, Item, A, H2, Span, Button } from '../primaries/SharedStyling';\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { BsChevronExpand } from 'react-icons/bs';\r\n\r\nfunction FaqPage() {\r\n  const themes = useTheme();\r\n\r\n  const [showAnswers, setShowAnswers] = React.useState([]);\r\n\r\n  const toggleShowAnswer = (id) => {\r\n    let newShowAnswers = [...showAnswers];\r\n    newShowAnswers[id] = !newShowAnswers[id];\r\n\r\n    setShowAnswers(newShowAnswers);\r\n  }\r\n\r\n  // Render\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Container>\r\n        <Content className=\"contentBox\" padding=\"20px 0px 0px 0px\">\r\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 30px\">\r\n\r\n            <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 0px 0px 0px\">\r\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\" margin=\"10px 0px 20px 0px\">\r\n                <Span weight=\"200\" color={themes.fontColor}>Frequently Asked </Span><Span bg={themes.fontColor} color={themes.mainBg} weight=\"600\" padding=\"0px 8px\">Questions</Span>\r\n              </H2>\r\n            </Item>\r\n\r\n            <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 0px 0px 0px\">\r\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\" margin=\"20px 0px 20px 0px\" size=\"1.6rem\">\r\n                <Span weight=\"600\" padding=\"0px 8px\" bg=\"#E20880\" color=\"#fff\">For Users</Span>\r\n              </H2>\r\n            </Item>\r\n\r\n            <Item align=\"stretch\" justify=\"flex-start\">\r\n              {/* Question */}\r\n              <Item align=\"stretch\" margin=\"0px 0px 20px 0px\">\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => { toggleShowAnswer(1) }}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                      What are Channels?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                  </Question>\r\n\r\n                  {showAnswers[1] &&\r\n                    <Answer>\r\n                      <Span>\r\n                        Any user or protocol that activates itself as a service to send notifications is a Channel.\r\n                      </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => { toggleShowAnswer(2) }}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                      Is Channel Creation a compulsory process?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                  </Question>\r\n\r\n                  {showAnswers[2] &&\r\n                    <Answer>\r\n                      <Span>\r\n                        Not at all\r\n                      </Span>\r\n                      <Span>\r\n                        Channel creation is only important for any protocol or service that wants to trigger notifications for its users. If you are a user who is only interested in receiving notifications and being up to the minute with the Web3 world, channel creation is not at all required for you.\r\n                      </Span>\r\n\r\n                      {/* <Span>\r\n                        Channel creation is only important for any protocol or service that wants to trigger notifications for its users. If you are a user who is only interested in receiving notifications and being up to the minute with the Web3 world, channel creation is not at all required for you.\r\n                      </Span> */}\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => { toggleShowAnswer(3) }}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                      How do I opt into a Channel?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                  </Question>\r\n\r\n                  {showAnswers[3] &&\r\n                    <Answer>\r\n                      <Span>\r\n                        Every Channel in the View Channels section comes with an opt-in button. Once you click on it and sign the transaction, you will be subscribed to that channel & receive its notifications.\r\n                      </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => { toggleShowAnswer(4) }}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                      Does Opting-in to a Channel require gas fees?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                  </Question>\r\n\r\n                  {showAnswers[4] &&\r\n                    <Answer>\r\n                      <Span>\r\n                        NOPE. Subscribing to a channel is a Gasless action. All you need to do is sign the transaction and that’s it.\r\n                      </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => { toggleShowAnswer(5) }}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                      Do I need ETHER to interact with the DAPP?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                  </Question>\r\n\r\n                  {showAnswers[5] &&\r\n                    <Answer>\r\n                      <Span>\r\n                        Nope. We have gasless mechanisms for most of the things in the Dapp. Therefore, an average joe doesn’t need any ether to use our dapp.\r\n                      </Span>\r\n\r\n                      <Span>\r\n                        ETH or Funds are only required when a Channel is to be created.\r\n                      </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => { toggleShowAnswer(6) }}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                      How do I receive notifications?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                  </Question>\r\n\r\n                  {showAnswers[6] &&\r\n                    <Answer>\r\n                      <Span>\r\n                        In order to receive notifications seamlessly, EPNS provides 3 different crypto front-ends\r\n                      </Span>\r\n                      <Span2>\r\n                        <AMod href=\"https://app.epns.io/\" target=\"_blank\">EPNS Dapp</AMod>\r\n                      </Span2>\r\n                      <Span2 mtop=\"0.2rem\">\r\n                        <AMod href=\"https://chrome.google.com/webstore/detail/epns-protocol-alpha/lbdcbpaldalgiieffakjhiccoeebchmg\" target=\"_blank\">Browser Extension</AMod>\r\n                      </Span2>\r\n                      <Span2 mtop=\"0.2rem\">\r\n                        <AMod href=\"https://play.google.com/store/apps/details?id=io.epns.epns\" target=\"_blank\"><span style={{ marginRight: \"0.3rem\" }}>Android</span></AMod> <span style={{ marginRight: \"0.3rem\" }}>and</span> <AMod href=\"https://apps.apple.com/app/ethereum-push-service-epns/id1528614910\" target=\"_blank\">IOS Apps</AMod>\r\n                      </Span2>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n              </Item>\r\n            </Item>\r\n\r\n            <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 0px 0px 0px\">\r\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\" margin=\"30px 0px 20px 0px\" size=\"1.6rem\">\r\n                <Span weight=\"600\" padding=\"0px 8px\" bg=\"#E20880\" color=\"#fff\">For Developers</Span>\r\n              </H2>\r\n            </Item>\r\n\r\n            <Item align=\"stretch\" justify=\"flex-start\">\r\n              {/* Question */}\r\n              <Item align=\"stretch\" margin=\"0px 0px 20px 0px\">\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => { toggleShowAnswer(7) }}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                      How do I create a Channel?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                  </Question>\r\n\r\n                  {showAnswers[7] &&\r\n                    <Answer>\r\n                      <Span>\r\n                        Easiest way to create a channel is from our <AMod target=\"_blank\" href=\"https://app.epns.io/#/dashboard\">EPNS Dapp</AMod> itself. Find the entire channel creation process <AMod target=\"_blank\" href=\"https://docs.epns.io/developer-zone/developer-guides/create-your-first-channel\">here</AMod>.\r\n                      </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => { toggleShowAnswer(8) }}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                      What are the different types of Notifications?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                  </Question>\r\n\r\n                  {showAnswers[8] &&\r\n                    <Answer>\r\n                      <Span>\r\n                        The 3 main types of notifications right now:\r\n                      </Span>\r\n                      <Span>\r\n                        <b>Broadcast Notification</b>: <i>Sent out to all Subscribers of a Channel</i>\r\n                      </Span>\r\n                      <Span>\r\n                        <b>Subset Notification</b>: <i>Sent out to a group of all the subscribers</i>\r\n                      </Span>\r\n                      <Span>\r\n                        <b>Targeted Notification</b>: <i>Sent out to a specific subscriber of your channel</i>\r\n                      </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => { toggleShowAnswer(9) }}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                      How do I send notifications?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                  </Question>\r\n\r\n                  {showAnswers[9] &&\r\n                    <Answer>\r\n                      <Span>\r\n                        Sending a notification is possible from the DAPP, Back-end as well as Smart Contracts.\r\n                      </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => { toggleShowAnswer(10) }}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                      How do I use Backend-Sdk and Showrunners?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                  </Question>\r\n\r\n                  {showAnswers[10] &&\r\n                    <Answer>\r\n                      <Span>\r\n                        EPNS Documentation hub contains in-depth details on how to use our <AMod target=\"_blank\" href=\"https://docs.epns.io/developer-zone/developer-guides/sending-notifications/server-workflow/backend-sdk-quick-set-up\">Backend SDKs</AMod> and <AMod target=\"_blank\" href=\"https://docs.epns.io/developer-zone/developer-guides/working-with-showrunners\">Showrunners</AMod>. Check them out.\r\n                      </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => { toggleShowAnswer(11) }}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                      DHow do I use the Front-SDK?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                  </Question>\r\n\r\n                  {showAnswers[11] &&\r\n                    <Answer>\r\n                      <Span>\r\n                        EPNS Documentation hub contains in-depth details on how to use our <AMod target=\"_blank\" href=\"https://docs.epns.io/developer-zone/developer-guides/integrating-with-front-end-sdk\">Front-end SDK</AMod>.\r\n                      </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => { toggleShowAnswer(12) }}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                      Where can I find Developer Documentations?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"} />\r\n                  </Question>\r\n\r\n                  {showAnswers[12] &&\r\n                    <Answer>\r\n                      <Span>\r\n                        All of our documentation can be found in our <AMod target=\"_blank\" href=\"https://docs.epns.io/\">EPNS Documentation HUB</AMod>.\r\n                      </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n              </Item>\r\n            </Item>\r\n\r\n          </Item>\r\n        </Content>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nconst Container = styled(Section)`\r\n  flex: 1;\r\n  flex-direction: column;\r\n  background: ${props => props.theme.mainBg};\r\n  align-self: stretch;\r\n`;\r\nconst Span2 = styled.span`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-left: 2rem;\r\n  color:black;\r\n  font-weight:300;\r\n  margin-top:${props => props.mtop || \"0px\"}\r\n`\r\n\r\nconst Heading = styled.h2`\r\n  color: ${props => props.theme.scheme === \"dark\" ? props.theme.color : props.color || \"#000\"};\r\n  text-shadow: 2px 0 ${props => props.theme.scheme === \"dark\" ? props.theme.color : props.color || \"#000\"};\r\n  font-weight: ${props => props.weight || 600};\r\n  font-size: ${props => props.size || \"2rem\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  margin: ${props => props.margin || \"20px 0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\r\n  text-align: ${props => props.textAlign || \"inherit\"};\r\n  margin-left:20px;\r\n  @media (max-width: 768px) {\r\n\t\tfont-size: 2.8rem;\r\n\t}\r\n`\r\n\r\nconst Question = styled(Button)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n`\r\n\r\nconst Answer = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n`\r\n\r\nconst QnAItem = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n  flex: auto;\r\n  margin: 15px 0px;\r\n  border: 1px solid ${props => props.theme.qnaBgBorder};\r\n  border-radius: 10px;\r\n  box-shadow: 0px 5px 20px -10px rgb(0 0 0 / 0.20);\r\n  overflow: hidden;\r\n  & ${Question} {\r\n    background: ${props => props.theme.qnaBg};\r\n    justify-content: flex-start;\r\n    text-transform: uppercase;\r\n    & ${Span} {\r\n      font-weight: 400;\r\n      letter-spacing: 0.2em;\r\n      margin-left: 10px;\r\n      flex: 1;\r\n    }\r\n    &:hover {\r\n      & ${Span} {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n  & ${Answer} {\r\n    border: 1px solid #e6e6e6;\r\n    border-top: 1px solid #e6e6e6;\r\n    border-bottom-left-radius: 10px;\r\n    border-bottom-right-radius: 10px;\r\n    padding: 10px 15px;\r\n    align-items: flex-start;\r\n    background: #fff;\r\n    & ${Span} {\r\n      line-height: 1.5em;\r\n      margin: 10px;\r\n      color: #000 ;\r\n      font-size: 1.05em;\r\n    }\r\n  }\r\n`\r\n\r\nconst AMod = styled(A)`\r\n  color: #e20880;\r\n  font-weight: 500;\r\n`\r\n\r\n\r\n// Export Default\r\nexport default FaqPage;\r\n","import React, { useState } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport {\r\n  Section,\r\n  Content,\r\n  Item,\r\n  ItemH,\r\n  H2,\r\n  H3,\r\n  Span,\r\n  Button,\r\n  FormSubmision,\r\n  Input,\r\n  TextField,\r\n} from \"../primaries/SharedStyling\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport styled, { useTheme } from \"styled-components\";\r\nimport { FaCheckCircle } from \"react-icons/fa\";\r\nimport { Oval } from \"react-loader-spinner\";\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\n// HELPER METHODS\r\nconst validateEmail = (email) => {\r\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n};\r\n\r\nconst isEmpty = (field) => {\r\n  if (field.trim().length === 0) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst SupportPage = () => {\r\n  // React GA Analytics\r\n  ReactGA.pageview(\"/support\");\r\n\r\n  const contactFormTopics = [\"Support\", \"Integrate\", \"Others\"];\r\n\r\n  const [contactFormProcessing, setContactFormProcessing] = React.useState(0);\r\n  const [contactFormName, setContactFormName] = React.useState(\"\");\r\n  const [contactFormEmail, setContactFormEmail] = React.useState(\"\");\r\n  const [contactFormTopic, setContactFormTopic] = React.useState(\r\n    contactFormTopics[0]\r\n  );\r\n  const [contactFormSub, setContactFormSub] = React.useState(\"\");\r\n  const [contactFormMsg, setContactFormMsg] = React.useState(\"\");\r\n  const [contactFormError, setContactFormError] = React.useState(\"\");\r\n\r\n  const themes = useTheme();\r\n\r\n  const handleContactFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check everything in order\r\n    if (validateEmail(contactFormEmail)) {\r\n      if (isEmpty(contactFormName)) {\r\n        setContactFormError(\"Name can't be empty\");\r\n        setContactFormProcessing(0);\r\n      } else if (isEmpty(contactFormSub)) {\r\n        setContactFormError(\"Subject can't be empty\");\r\n        setContactFormProcessing(0);\r\n      } else if (isEmpty(contactFormMsg)) {\r\n        setContactFormError(\"Message can't be empty\");\r\n        setContactFormProcessing(0);\r\n      } else {\r\n        setContactFormProcessing(1);\r\n\r\n        const requestOptions = {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            from: contactFormEmail,\r\n            name: contactFormName,\r\n            topic: contactFormTopic,\r\n            sub: contactFormSub,\r\n            msg: contactFormMsg,\r\n          }),\r\n        };\r\n\r\n        fetch(\r\n          \"https://backend-kovan.epns.io/apis/mailing/sendMail\",\r\n          requestOptions\r\n        )\r\n          .then((response) => response.json())\r\n          .then((jsondata) => {\r\n            // console.log(jsondata);\r\n            setContactFormProcessing(2);\r\n          })\r\n          .catch((err) => {\r\n            // console.log(err);\r\n            setContactFormError(\r\n              \"Mayday! Mayday! something went wrong. Please retry...\"\r\n            );\r\n            setContactFormProcessing(0);\r\n          });\r\n      }\r\n    } else {\r\n      setContactFormError(\"Incorrect e-mail, please check and retry!\");\r\n      setContactFormProcessing(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Section id=\"contact\" theme={themes.mainBg}>\r\n        <Content className=\"contentBox\" padding=\"10px 0\">\r\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 20px\">\r\n            <Item align=\"stretch\" align=\"flex-end\" tabletAlign=\"flex-start\" margin=\"0px 16px 0px 0px\" textAlign=\"right\" tabletTextAlign=\"left\">\r\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\" bg=\"#fff\">\r\n                <Span color={themes.color} weight=\"600\" padding=\"0px\">Contact US!</Span>\r\n                {/* <Span weight=\"200\" color=\"#000\"> Us!</Span> */}\r\n              </H2>\r\n              <H3 bg=\"#fff\" color={themes.color}>Get in Touch</H3>\r\n            </Item>\r\n            <Item self=\"stretch\">\r\n              <FormSubmision\r\n                flex=\"1\"\r\n                direction=\"row\"\r\n                justify=\"stretch\"\r\n                margin=\"10px\"\r\n                size=\"1.1rem\"\r\n                onSubmit={handleContactFormSubmit}\r\n              >\r\n                <Item align=\"stretch\" justify=\"stretch\" margin=\"10px -15px\">\r\n                  {contactFormProcessing === 0 && (\r\n                    <>\r\n                      <ItemH align=\"stretch\">\r\n                        <Item\r\n                          flex=\"1\"\r\n                          margin=\"15px\"\r\n                          justify=\"flex-start\"\r\n                          align=\"stretch\"\r\n                          minWidth=\"280px\"\r\n                        >\r\n                          <ContactInput\r\n                            required\r\n                            radius=\"4px\"\r\n                            padding=\"12px\"\r\n                            bg=\"#fff\"\r\n                            border=\"12px\"\r\n                            placeholder=\"John Wick\"\r\n                            value={contactFormName}\r\n                            onChange={(e) => {\r\n                              setContactFormName(e.target.value);\r\n                            }}\r\n                            autocomplete=\"name\"\r\n                            style={{\r\n                            }}\r\n                          />\r\n                          {contactFormName.trim().length === 0 && (\r\n                            <Span\r\n                              padding=\"4px 10px\"\r\n                              right=\"0px\"\r\n                              top=\"0px\"\r\n                              pos=\"absolute\"\r\n                              color=\"#fff\"\r\n                              bg=\"#000\"\r\n                              size=\"0.7rem\"\r\n                              z=\"1\"\r\n                            >\r\n                              Name\r\n                            </Span>\r\n                          )}\r\n                        </Item>\r\n\r\n                        <Item\r\n                          flex=\"5\"\r\n                          margin=\"15px\"\r\n                          justify=\"flex-start\"\r\n                          align=\"stretch\"\r\n                          minWidth=\"280px\"\r\n                        >\r\n                          <ContactInput\r\n                            required\r\n                            placeholder=\"john@wick.com\"\r\n                            radius=\"4px\"\r\n                            padding=\"12px\"\r\n                            bg=\"#fff\"\r\n                            value={contactFormEmail}\r\n                            onChange={(e) => {\r\n                              setContactFormEmail(e.target.value);\r\n                            }}\r\n                            autocomplete=\"email\"\r\n                          />\r\n                          {contactFormEmail.trim().length === 0 && (\r\n                            <Span\r\n                              padding=\"4px 10px\"\r\n                              right=\"0px\"\r\n                              top=\"0px\"\r\n                              pos=\"absolute\"\r\n                              color=\"#fff\"\r\n                              bg=\"#000\"\r\n                              size=\"0.7rem\"\r\n                              z=\"1\"\r\n                            >\r\n                              E-mail\r\n                            </Span>\r\n                          )}\r\n                        </Item>\r\n                      </ItemH>\r\n\r\n                      <Item\r\n                        flex=\"5\"\r\n                        justify=\"flex-start\"\r\n                        align=\"stretch\"\r\n                        minWidth=\"280px\"\r\n                        margin=\"15px\"\r\n                      >\r\n                        <DropdownStyled\r\n                          options={contactFormTopics}\r\n                          onChange={(option) => setContactFormTopic(option.value)}\r\n                          value={contactFormTopic}\r\n                          placeholder=\"Select an option\"\r\n                        />\r\n                      </Item>\r\n\r\n                      <Item\r\n                        justify=\"center\"\r\n                        align=\"stretch\"\r\n                        minWidth=\"280px\"\r\n                        margin=\"15px\"\r\n                      >\r\n                        <ContactInput\r\n                          required\r\n                          placeholder=\"I want to tell you guys a secret!\"\r\n                          radius=\"4px\"\r\n                          padding=\"12px\"\r\n                          bg=\"#fff\"\r\n                          value={contactFormSub}\r\n                          onChange={(e) => {\r\n                            setContactFormSub(e.target.value);\r\n                          }}\r\n                          autocomplete=\"on\"\r\n                        />\r\n                        {contactFormSub.trim().length === 0 && (\r\n                          <Span\r\n                            padding=\"4px 10px\"\r\n                            right=\"0px\"\r\n                            top=\"0px\"\r\n                            pos=\"absolute\"\r\n                            color=\"#fff\"\r\n                            bg=\"#000\"\r\n                            size=\"0.7rem\"\r\n                            z=\"1\"\r\n                          >\r\n                            Subject\r\n                          </Span>\r\n                        )}\r\n                      </Item>\r\n\r\n                      <Item\r\n                        justify=\"center\"\r\n                        align=\"stretch\"\r\n                        minWidth=\"280px\"\r\n                        margin=\"15px\"\r\n                      >\r\n                        <ContactTextArea\r\n                          required\r\n                          placeholder=\"This is where you will tell us that secret, or a bug or whatever is on your mind.\"\r\n                          rows=\"6\"\r\n                          radius=\"4px\"\r\n                          padding=\"12px\"\r\n                          bg=\"#fff\"\r\n                          value={contactFormMsg}\r\n                          onChange={(e) => {\r\n                            setContactFormMsg(e.target.value);\r\n                          }}\r\n                          autocomplete=\"off\"\r\n                        />\r\n                      </Item>\r\n                    </>\r\n                  )}\r\n\r\n                  {contactFormProcessing === 2 && (\r\n                    <Item align=\"center\" margin=\"0px 10px\">\r\n                      <ItemH\r\n                        color=\"#e20880\"\r\n                        bg=\"#000\"\r\n                        padding=\"10px 15px\"\r\n                        columnGap=\"0px\"\r\n                        rowGap=\"0px\"\r\n                      >\r\n                        <FaCheckCircle size={24} color=\"#fff\" />\r\n                        <Span\r\n                          padding=\"0px 0px 0px 8px\"\r\n                          color=\"#fff\"\r\n                          textTransform=\"uppercase\"\r\n                          spacing=\"0.1em\"\r\n                        >\r\n                          Message Sent! We will be in Touch :)\r\n                        </Span>\r\n                      </ItemH>\r\n                    </Item>\r\n                  )}\r\n\r\n                  {contactFormError && contactFormProcessing === 0 && (\r\n                    <Item align=\"center\" margin=\"0px 10px\">\r\n                      <Item\r\n                        color=\"#e20880\"\r\n                        bg=\"#000\"\r\n                        padding=\"10px 15px\"\r\n                        margin=\"15px\"\r\n                      >\r\n                        <Span\r\n                          color=\"#fff\"\r\n                          textTransform=\"uppercase\"\r\n                          spacing=\"0.1em\"\r\n                        >\r\n                          {contactFormError}\r\n                        </Span>\r\n                      </Item>\r\n                    </Item>\r\n                  )}\r\n\r\n                  <Item\r\n                    justify=\"stretch\"\r\n                    self=\"stretch\"\r\n                    align=\"stretch\"\r\n                    minWidth=\"280px\"\r\n                  >\r\n                    {contactFormProcessing !== 2 && (\r\n                      <Button\r\n                        bg=\"#000\"\r\n                        color=\"#fff\"\r\n                        border={themes.buttonBd}\r\n                        flex=\"1\"\r\n                        radius=\"4px\"\r\n                        disabled={contactFormProcessing}\r\n                        margin=\"15px\"\r\n                        padding=\"12px 15px\"\r\n                      >\r\n                        {contactFormProcessing === 1 && (\r\n                          <Oval\r\n                            color=\"#fff\"\r\n                            height={24}\r\n                            width={24}\r\n                          />\r\n                        )}\r\n                        {contactFormProcessing === 0 && (\r\n                          <Input\r\n                            cursor=\"hand\"\r\n                            color=\"#fff\"\r\n                            weight=\"400\"\r\n                            size=\".9em\"\r\n                            spacing=\"0.2em\"\r\n                            type=\"submit\"\r\n                            value=\"Submit\"\r\n                          />\r\n                        )}\r\n                      </Button>\r\n                    )}\r\n                  </Item>\r\n                </Item>\r\n              </FormSubmision>\r\n            </Item>\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\n// CSS Styles\r\nconst DropdownStyled = styled(Dropdown)`\r\n  .Dropdown-control {\r\n    background-color: #000;\r\n    color: #fff;\r\n    padding: 12px 52px 12px 10px;\r\n    border: 1px solid ${props => props.theme.buttonBd};\r\n    border-radius: 4px;\r\n  }\r\n\r\n  .Dropdown-placeholder {\r\n    text-transform: uppercase;\r\n    font-weight: 400;\r\n    letter-spacing: 0.2em;\r\n    font-size: 0.8em;\r\n\t\tpadding-left: 6px\r\n  }\r\n\r\n  .Dropdown-arrow {\r\n    top: 18px;\r\n    bottom: 0;\r\n    border-color: #fff transparent transparent;\r\n  }\r\n\r\n  .Dropdown-menu {\r\n    border: 1px solid #000;\r\n    box-shadow: none;\r\n    background-color: #000;\r\n    border-radius: 0px;\r\n    margin-top: -3px;\r\n    border-bottom-right-radius: 4px;\r\n    border-bottom-left-radius: 4px;\r\n  }\r\n\r\n  .Dropdown-option {\r\n    background-color: rgb(35 35 35);\r\n    color: #ffffff99;\r\n\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.2em;\r\n    font-size: 0.7em;\r\n    padding: 15px 20px;\r\n  }\r\n\r\n  .Dropdown-option:hover {\r\n    background-color: #000000;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst ContactInput = styled(Input)`\r\n\tbackground: #FFFFFF;\r\n\tborder: 1px solid #D4D4D4;\r\n\tbox-sizing: border-box;\r\n\tborder-radius: 4px;\r\n`\r\n\r\nconst ContactTextArea = styled(TextField)`\r\n\tbackground: #FFFFFF;\r\n\tborder: 1px solid #D4D4D4;\r\n\tbox-sizing: border-box;\r\n\tborder-radius: 4px;\r\n`\r\n\r\nexport { SupportPage };","import React from \"react\";\r\nimport { Navigate, Routes, Route,useLocation } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Item, Anchor } from \"../primaries/SharedStyling\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nimport { VscClose } from 'react-icons/vsc';\r\n\r\nimport InboxPage from \"pages/InboxPage\";\r\nimport SpamPage from \"pages/SpamPage\";\r\nimport ViewChannelsPage from \"pages/ViewChannelsPage\";\r\nimport ChannelDashboardPage from \"pages/ChannelDashboardPage\";\r\nimport SendNotifs from \"pages/SendNotifs\";\r\nimport ReceiveNotifsPage from \"pages/ReceiveNotifsPage\";\r\n\r\nimport GovernancePage from \"pages/GovernancePage\";\r\n\r\nimport YieldFarmingPage from \"pages/YieldFarmingPage\";\r\nimport NFTPage from \"pages/NFTPage\";\r\nimport AirdropPage from \"pages/AirdropPage\";\r\nimport ComingSoonPage from \"pages/ComingSoonPage\";\r\nimport NotAvailablePage from \"./NotAvailablePage\";\r\nimport TutorialPage from \"pages/TutorialPage\";\r\nimport FAQPage from \"pages/FAQPage\";\r\n\r\nimport { SupportPage } from \"pages/SupportPage\";\r\n\r\nimport GLOBALS from \"config/Globals\";\r\n\r\n// Create Header\r\nfunction MasterInterfacePage() {\r\n  // Master Interface controls settings\r\n  const [playTeaserVideo, setPlayTeaserVideo] = React.useState(false);\r\n  const [loadTeaserVideo, setLoadTeaserVideo] = React.useState(null);\r\n  const location = useLocation()\r\n\r\n  // Render\r\n  return (\r\n    <Container>\r\n      <Interface location={location.pathname}>\r\n        <Routes>\r\n          <Route path=\"channels\" element={\r\n            <ViewChannelsPage\r\n              loadTeaser={setLoadTeaserVideo}\r\n              playTeaser={setPlayTeaserVideo}\r\n            />\r\n          }\r\n          />\r\n          <Route path=\"inbox\" element={<InboxPage />} />\r\n          <Route path=\"dashboard\" element={<ChannelDashboardPage />} />\r\n          <Route path=\"send\" element={<SendNotifs />} />\r\n          <Route path=\"spam\" element={<SpamPage />} />\r\n          <Route path=\"receive\" element={<ReceiveNotifsPage />} />\r\n\r\n          <Route path=\"govern\" element={<GovernancePage />} />\r\n\r\n          <Route path=\"yield\" element={<YieldFarmingPage />} />\r\n          <Route path=\"rockstar\" element={<NFTPage />} />\r\n          <Route path=\"gratitude\" element={<AirdropPage />} />\r\n          <Route path=\"live_walkthrough\" element={<TutorialPage />} />\r\n          <Route path=\"comingsoon\" element={<ComingSoonPage />} />\r\n          <Route path=\"notavailable\" element={<NotAvailablePage />} />\r\n          <Route path=\"faq\" element={<FAQPage />} />\r\n          <Route\r\n            path=\"/\"\r\n            element={<Navigate to=\"/channels\" />}\r\n          />\r\n          <Route path=\"support\" element={<SupportPage />} />\r\n        </Routes>\r\n      </Interface>\r\n\r\n      {/* For Channels Opt-in / Opt-out */}\r\n      <StyledToastContainer\r\n        position=\"top-right\"\r\n        autoClose={false}\r\n        newestOnTop\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n      />\r\n\r\n      {/* To play youtube video from anywhere */}\r\n      {playTeaserVideo &&\r\n        <PreviewOuter>\r\n          <PreviewBG\r\n            href=\"#\"\r\n            bg=\"transparent\"\r\n            onClick={(e) => { e.preventDefault(); setPlayTeaserVideo(!playTeaserVideo) }}\r\n          >\r\n            <PreviewContent className=\"contentBox\">\r\n              <PreviewClose\r\n                href=\"#\"\r\n                bg=\"transparent\"\r\n                hover=\"transparent\"\r\n                hoverBG=\"transparent\"\r\n                onClick={(e) => { e.preventDefault(); setPlayTeaserVideo(!playTeaserVideo) }}\r\n              >\r\n                <VscClose size={40} color=\"#fff\" />\r\n              </PreviewClose>\r\n              <Preview>\r\n                <div className='videoWrapper'><iframe src={loadTeaserVideo} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\r\n              </Preview>\r\n            </PreviewContent>\r\n          </PreviewBG>\r\n        </PreviewOuter>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css style\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  flex-direction: column;\r\n  min-height: calc(100vh - ${GLOBALS.CONSTANTS.HEADER_HEIGHT}px - 20px - ${props => props.theme.interfaceTopPadding});\r\n  padding: ${props => props.theme.interfaceTopPadding} 20px 20px 20px;\r\n  align-items: stretch;\r\n\r\n`;\r\n\r\nconst Interface = styled(Item)`\r\n  // flex: 1;\r\n  // width:50%;\r\n  width: ${props => props.location === '/send' ? '70%' : '100%'};\r\n  display: flex;\r\n  align-items: stretch;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 20px;\r\n  border: 1px solid ${props => props.theme.interfaceBorder};\r\n\r\n  // margin: 15px 15px 15px 0px;\r\n  margin: ${props => props.location === '/send' ? '15px auto' : '15px 15px 15px 0px'};\r\n  overflow: hidden;\r\n\r\n\r\n  @media (max-width: 992px) {\r\n    // margin: 15px 0px;\r\n    width:100%;\r\n    margin: ${props => props.location === '/send' ? '15px auto' : '15px 0px'};\r\n  }\r\n`\r\n\r\nconst PreviewOuter = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgb(0 0 0 / 0.75);\r\n  z-index: 999;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst PreviewBG = styled(Anchor)`\r\n  position: initial;\r\n  flex: 1;\r\n`\r\n\r\nconst PreviewContent = styled.div`\r\n  width: 100%;\r\n  align-self: center;\r\n  max-width: 1140px;\r\n  flex: 1 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Preview = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  margin: 40px 20px;\r\n  border-left: 10px solid #35c4f3;\r\n  border-radius: 10px;\r\n`\r\n\r\nconst PreviewClose = styled(Anchor)`\r\n  align-self: flex-end;\r\n  margin-bottom: -40px;\r\n`\r\n\r\nconst StyledToastContainer = styled(ToastContainer)`\r\n  &&&.Toastify__toast-container {\r\n    top: 7vh;\r\n    right: 2vw;\r\n  }\r\n  // .Toastify__toast {}\r\n  // .Toastify__toast-body {}\r\n  // .Toastify__progress-bar {}\r\n  // .Toastify__toast-container--top-right {}\r\n`;\r\n\r\n// Export Default\r\nexport default MasterInterfacePage;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { themeLight, themeDark } from \"config/Themization\";\r\nimport { Item, ItemH, Span, H3, B, A, Button } from \"primaries/SharedStyling\";\r\n\r\nimport {incrementStepIndex, setRun, setIndex, setWelcomeNotifsEmpty , setTutorialContinous} from \"../redux/slices/userJourneySlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst UserJourneySteps = ({darkMode}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n      isCommunicateOpen,\r\n      isDeveloperOpen,\r\n    } = useSelector((state) => state['userJourney']);\r\n\r\n  const steps = [\r\n    {\r\n      //0\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            Let's begin our journey!\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              <B>EPNS</B>, the native web3 communication layer enables open communication tied to wallet address from any supported dApps, protocol or web3 projects.\r\n            </Span>\r\n\r\n            <Span color=\"inherit\" margin=\"20px 0px 0px 0px\">\r\n              To get started, follow the icon <BeaconExample><BeaconExamplePulse /></BeaconExample>, click next to continue!\r\n            </Span>\r\n          </Item>\r\n          \r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                if (isCommunicateOpen) dispatch(incrementStepIndex());\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      locale: { next: <strong aria-label=\"next\">NEXT</strong> },\r\n      placement: 'center' as const,\r\n      target: \"body\",\r\n      hideFooter: true,\r\n      // defaultProps: false,\r\n      \r\n      // spotlightClicks: true,\r\n      // disableOverlayClose: false,\r\n    },\r\n    {\r\n      //1\r\n      content: (\r\n        <Item\r\n          color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          size=\"normal\"\r\n          align=\"stretch\"\r\n        >\r\n          <Span color=\"inherit\">\r\n            Communicate tab holds all your communication including notifications! Click to expand it.\r\n          </Span>\r\n        </Item>\r\n      ),\r\n      placement: 'right-start' as const,\r\n      target: \".communicate\",\r\n      spotlightClicks: true,\r\n      disableAnimation: false,\r\n      disablefloating: false,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n      styles: {\r\n        buttonNext: {\r\n          display: 'none',\r\n        },\r\n        buttonSkip: {\r\n          display: 'none',\r\n        },\r\n        buttonClose: {\r\n          display: 'none',\r\n        }\r\n      }\r\n    },\r\n    {\r\n      //2\r\n      content: (\r\n        <Item\r\n          color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          size=\"normal\"\r\n          align=\"stretch\"\r\n        >\r\n          <Span color=\"inherit\">\r\n            Channels are services that want to send notifications to your wallet address. Let's check them out!\r\n          </Span>\r\n        </Item>\r\n      ),\r\n      placement: \"right-start\" as const,\r\n      target: \".channels\",\r\n      spotlightClicks: true,\r\n      disableAnimation: false,\r\n      disablefloating: false,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n      styles: {\r\n        buttonNext: {\r\n          display: 'none',\r\n        },\r\n        buttonSkip: {\r\n          display: 'none',\r\n        },\r\n        buttonClose: {\r\n          display: 'none',\r\n        }\r\n      },\r\n    },\r\n    {\r\n      //3\r\n      content: (\r\n        <Item\r\n          color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          size=\"normal\"\r\n          align=\"stretch\"\r\n        >\r\n          <Span color=\"inherit\">\r\n            This is the Channels Page. Please wait while we load channels from EPNS protocol.\r\n          </Span>\r\n        </Item>\r\n      ),\r\n      placement: \"center\" as const,\r\n      target: \"body\",\r\n      hideFooter: true,\r\n      styles: {\r\n        buttonNext: {\r\n          display: 'none',\r\n        },\r\n        buttonSkip: {\r\n          display: 'none',\r\n        },\r\n        buttonClose: {\r\n          display: 'none',\r\n        }\r\n      },\r\n    },\r\n    {\r\n      //4\r\n      content: (<></>),\r\n      target: \"body\",\r\n    },\r\n    {\r\n      //5\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            Let's opt-in!\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              <B>EPNS</B> is a user centric protocol which means that you need to gaslessly (for free) opt-in to a channel to enable them to send notifs to your wallet!\r\n            </Span>\r\n\r\n            <Span color=\"inherit\" margin=\"20px 0px 0px 0px\">\r\n              You can opt-in in any number of channels as you want. Opt-in in at least one of the channels to proceed to the next step.\r\n            </Span>\r\n\r\n            <Span color=\"inherit\" margin=\"20px 0px 0px 0px\">\r\n              Opt-in will open Metamask popup, in which you have to sign the transaction (which is free), and voila, you've all set to receive notifs!\r\n            </Span>\r\n          </Item>\r\n          \r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                // dispatch(setTutorialContinous(false));\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      // placement: \"top-center\",\r\n      // position: \"top-center\",\r\n      // target: `#addr-0x0000000000000000000000000000000000000000`, //production\r\n      // target: `#addr-0x2177cFc66474bBEce7Cbf114d780A5cfE78485De`, //development\r\n      placement: \"center\" as const,\r\n      target: \"body\",\r\n      disableOverlayClose: false,\r\n      // spotlightClicks: true,\r\n      offsetTop: \"-100px\",\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n    },\r\n    {\r\n      //6\r\n      content: (\r\n        <Item\r\n          color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          size=\"normal\"\r\n          align=\"stretch\"\r\n        >\r\n          <Span color=\"inherit\">\r\n            Click on inbox tab from sidebar to proceed forward!\r\n          </Span>\r\n        </Item>\r\n      ),\r\n      placement: \"right-start\" as const,\r\n      target: \".inbox\",\r\n      spotlightClicks: true,\r\n      disablefloating: true,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n      styles: {\r\n        buttonNext: {\r\n          display: 'none',\r\n        },\r\n        buttonSkip: {\r\n          display: 'none',\r\n        },\r\n        buttonClose: {\r\n          display: 'none',\r\n        }\r\n      },\r\n    },\r\n    {\r\n      //7\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            Inbox tab!\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              All notifications coming from an opted in channel lands in your inbox. It might be empty right now but if you have opted in to a channel, it will blossom soon!\r\n            </Span>\r\n\r\n            <Span color=\"inherit\" margin=\"20px 0px 0px 0px\">\r\n              But wait, that's not all, notifications are tied to your user wallet which means any crypto frontend or wallet can display it! More on this later!!\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      // placement: \"top\",\r\n      // position: \"top-center\",\r\n      // target: `.hdvjVo`,\r\n      placement: \"center\" as const,\r\n      target: \"body\",\r\n      // disableOverlayClose: false,\r\n      hideFooter: true,\r\n    },\r\n    {\r\n      //8\r\n      content: (\r\n        <Item\r\n          color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          size=\"normal\"\r\n          align=\"stretch\"\r\n        >\r\n          <Span color=\"inherit\">\r\n            Click on spam tab from sidebar to see how spam works!\r\n          </Span>\r\n        </Item>\r\n      ),\r\n      placement: \"right-start\" as const,\r\n      target: `.spam`,\r\n      spotlightClicks: true,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n      styles: {\r\n        buttonNext: {\r\n          display: 'none',\r\n        },\r\n        buttonSkip: {\r\n          display: 'none',\r\n        },\r\n        buttonClose: {\r\n          display: 'none',\r\n        }\r\n      },\r\n    },\r\n    { //9\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            Spam tab!\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              Spam notifications are notifs sent from a channel to your wallet address which you haven't opted in for yet, they might be spammy or a channel might have something important to communicate!\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      placement: \"center\" as const,\r\n      target: `body`,\r\n      spotlightClicks: true,\r\n      defaultProps: false,\r\n      hideFooter: true\r\n    },\r\n    {\r\n      //10\r\n      content: (\r\n        <Item\r\n          color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          size=\"normal\"\r\n          align=\"stretch\"\r\n        >\r\n          <Span color=\"inherit\">\r\n            Receive Notifs tab contains all crypto frontends that have adopted EPNS protocol for communication! click on it to check the options out!\r\n          </Span>\r\n        </Item>\r\n      ),\r\n      placement: \"right-start\" as const,\r\n      target: `.receive`,\r\n      // target: `.sc-AxheI`,\r\n      spotlightClicks: true,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n      styles: {\r\n        buttonNext: {\r\n          display: 'none',\r\n        },\r\n        buttonSkip: {\r\n          display: 'none',\r\n        },\r\n        buttonClose: {\r\n          display: 'none',\r\n        }\r\n      },\r\n    },\r\n    {\r\n      //11\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            Receive Notifs tab!\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              EPNS is an open communication network which means any crypto wallet can push notifs to your wallet address!\r\n            </Span>\r\n\r\n            <Span color=\"inherit\" margin=\"20px 0px 0px 0px\">\r\n              Let's check out few options that are available currently! Keep an eye out for here for your favorite wallet to debut here soon!\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                dispatch(incrementStepIndex());\r\n                dispatch(setTutorialContinous(true));\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      placement: \"center\" as const,\r\n      target: `body`,\r\n      // target: `.sc-AxheI`,\r\n      spotlightClicks: true,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n    },\r\n    {\r\n      //12\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            EPNS Browser Extension\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              Install the EPNS chrome extension to enable your browser to send notifications about your web3 activities!\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                window.open(`${process.env.REACT_APP_BROWSER_EXTENSION_URL}`, '_blank');\r\n              }}\r\n            >\r\n              Download\r\n            </Button>\r\n\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      placement: \"bottom\" as const,\r\n      target: `#epns-browser`,\r\n      // target: `.sc-AxheI`,\r\n      spotlightClicks: true,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n    },\r\n    {\r\n      //13\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            EPNS iOS App\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              Install the EPNS iOS app to enable push notifications directly to your iOS (Apple) devices!\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                window.open(`${process.env.REACT_APP_IOS_STAGING_DAPP_URL}`, '_blank');\r\n              }}\r\n            >\r\n              iOS App\r\n            </Button>\r\n\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      placement: \"bottom\" as const,\r\n      target: `#epns-app-ios`,\r\n      // target: `.sc-AxheI`,\r\n      spotlightClicks: true,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n    },\r\n    {\r\n      //14\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            EPNS Android App\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              Install the EPNS Android app to enable push notifications directly to your android devices!\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                window.open(`${process.env.REACT_APP_ANDROID_STAGING_DAPP_URL}`, '_blank');\r\n              }}\r\n            >\r\n              Android App\r\n            </Button>\r\n\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      placement: \"bottom\" as const,\r\n      target: `#epns-app`,\r\n      // target: `.sc-AxheI`,\r\n      spotlightClicks: true,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n    },\r\n    {\r\n      //15\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            Tutorial Completed 🎉🎉\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              Hurray! You finished the tutorial!\r\n            </Span>\r\n\r\n            <Span color=\"inherit\" margin=\"20px 0px 0px 0px\">\r\n              Congratulations, Now that you are a pro! Go ahead and spread the web3 gospel and notifs saga out to the world!\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n\r\n                dispatch(setTutorialContinous(false));\r\n\r\n                if (isDeveloperOpen) dispatch(incrementStepIndex());\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next (For Devs)\r\n            </Button>\r\n\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                dispatch(setTutorialContinous(false));\r\n                dispatch(setIndex(0));\r\n                dispatch(setWelcomeNotifsEmpty());\r\n                dispatch(setRun(false));\r\n              }}\r\n            >\r\n              Finish\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      locale: { next: <strong aria-label=\"next\">NEXT</strong> },\r\n      placement: \"center\" as const,\r\n      target: \"body\",\r\n      defaultProps: false,\r\n      // spotlightClicks: true,\r\n      // disableOverlayClose: false,\r\n      hideFooter: true,\r\n    },\r\n    {\r\n      //16\r\n      content: (\r\n        <Item\r\n          color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          size=\"normal\"\r\n          align=\"stretch\"\r\n        >\r\n          <Span color=\"inherit\">\r\n            Hello Web3 Devs! All resources for developers are hidden inside this tab! let's expand it to continue!\r\n          </Span>\r\n        </Item>\r\n      ),\r\n      placement: \"right-start\" as const,\r\n      target: \".developer\",\r\n      spotlightClicks: true,\r\n      disableAnimation: false,\r\n      disablefloating: false,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n      styles: {\r\n        buttonNext: {\r\n          display: 'none',\r\n        },\r\n        buttonSkip: {\r\n          display: 'none',\r\n        },\r\n        buttonClose: {\r\n          display: 'none',\r\n        }\r\n      }\r\n    },\r\n    {\r\n      //17\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            Developer Tab\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              Hello Web3 Devs! This tab contains everything you need to get started with creating your own channel!\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      locale: { next: <strong aria-label=\"next\">NEXT</strong> },\r\n      placement: \"center\" as const,\r\n      target: \".developer\",\r\n      spotlightClicks: true,\r\n      disableAnimation: false,\r\n      disablefloating: false,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n    },\r\n    {\r\n      //18\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            Create Channel Tab\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              Creating the channel is the first step to sending notifications via your dApp, smart contract or backend! Just fill in the required details to get started.\r\n            </Span>\r\n\r\n            <Span color=\"inherit\" margin=\"20px 0px 0px 0px\">\r\n              Creating a channel on mainnet does have it's activation fee (one time fee) though it is recommended to start on testnet first to get the hang of it.\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      placement: \"right-start\" as const,\r\n      target: \".create\",\r\n      spotlightClicks: true,\r\n      disablefloating: true,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n    },\r\n    {\r\n      //19\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            Developer Documentation\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              Of course, even before creating the channel, maybe the best place to start developing on EPNS protocol is to follow the developer docs.\r\n            </Span>\r\n\r\n            <Span color=\"inherit\" margin=\"20px 0px 0px 0px\">\r\n              Please find the link to developer docs below (or you can just click the Developer's guide tab). As always, feel free to reach out to us either on <A href=\"https://discord.gg/YVPB99F9W5\" target=\"_blank\">discord</A> or a channel of your choice!\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                window.open(\"https://docs.epns.io/\", \"_blank\");\r\n                // dispatch(incrementStepIndex());\r\n                dispatch(setRun(false))\r\n                dispatch(setIndex(0))\r\n                dispatch(setWelcomeNotifsEmpty());\r\n              }}\r\n            >\r\n              Developer Docs\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      placement: \"top-start\" as const,\r\n      target: \".guide\",\r\n      spotlightClicks: true,\r\n      disablefloating: true,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n    },\r\n  ];\r\n\r\n  return steps;\r\n}\r\n  \r\nconst BeaconExample = styled.span`\r\n  height: 10px;\r\n  width: 10px;\r\n  background: ${props => props.theme.dynamicTutsPrimaryColor};\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 100%;\r\n  position: relative;\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst BeaconExamplePulse = styled.span`\r\n  animation: 1.2s ease-in-out 0s infinite normal none running joyride-beacon-outer;\r\n  background-color: transparent;\r\n  border: 2px solid ${props => props.theme.dynamicTutsPrimaryColor};\r\n  border-radius: 50%;\r\n  box-sizing: border-box;\r\n  display: block;\r\n  height: 26px;\r\n  width: 26px;\r\n  left: -8px;\r\n  top: -8px;\r\n  opacity: 0.9;\r\n  position: absolute;\r\n  transform-origin: center center;\r\n`;\r\n\r\nexport default UserJourneySteps;","import React, { useEffect } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addresses, abis , envConfig } from \"@project/contracts\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport UsersDataStore from \"singletons/UsersDataStore\";\r\n\r\nimport {\r\n  setCoreReadProvider,\r\n  setCoreWriteProvider,\r\n  setCommunicatorReadProvider,\r\n  setCommunicatorWriteProvider,\r\n} from \"redux/slices/contractSlice\";\r\n\r\nimport {\r\n  setPushAdmin,\r\n} from \"redux/slices/contractSlice\";\r\nimport { convertAddressToAddrCaip } from \"helpers/CaipHelper\";\r\nimport { getReq } from \"api\";\r\nimport { setAliasAddress, setAliasEthAddress, setAliasVerified, setCanVerify, setCoreChannelAdmin, setDelegatees, setUserChannelDetails } from \"redux/slices/adminSlice\";\r\nimport { setProcessingState } from \"redux/slices/channelCreationSlice\";\r\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\n\r\nconst CORE_CHAIN_ID = envConfig.coreContractChain;\r\n\r\nconst InitState = () => {\r\n  const dispatch = useDispatch();\r\n  const { account, library, chainId } = useWeb3React();\r\n  const {\r\n    epnsReadProvider,\r\n    epnsWriteProvider,\r\n    epnsCommReadProvider,\r\n  } = useSelector((state: any) => state.contracts);\r\n  const { channelDetails, delegatees, aliasDetails: { aliasAddr, aliasEthAddr, isAliasVerified } } = useSelector((state: any) => state.admin);\r\n  const { processingState } = useSelector((state: any) => state.channelCreation);\r\n\r\n  const onCoreNetwork: boolean = CORE_CHAIN_ID === chainId;\r\n\r\n  useEffect(() => {\r\n    if (!library) return;\r\n    \r\n    (async function init() {\r\n      console.log(library);\r\n      const coreProvider = onCoreNetwork\r\n        ? library\r\n        : new ethers.providers.JsonRpcProvider(envConfig.coreRPC)\r\n      \r\n      // inititalise the read contract for the core network\r\n      const coreContractInstance = new ethers.Contract(\r\n        addresses.epnscore,\r\n        abis.epnscore,\r\n        coreProvider\r\n      );\r\n      \r\n      // initialise the read contract for the communicator function\r\n      const commAddress = onCoreNetwork\r\n        ? addresses.epnsEthComm\r\n        : addresses.epnsPolyComm;\r\n      const commContractInstance = new ethers.Contract(\r\n        commAddress,\r\n        abis.epnsComm,\r\n        library\r\n      );\r\n      dispatch(setCommunicatorReadProvider(commContractInstance));\r\n      dispatch(setCoreReadProvider(coreContractInstance));\r\n\r\n      // initialise the read contract for the communicator function\r\n      if (!!(library && account)) {\r\n        let signer = library.getSigner(account);\r\n        let coreSigner = coreProvider.getSigner(account);\r\n\r\n        const coreSignerInstance = new ethers.Contract(\r\n          addresses.epnscore,\r\n          abis.epnscore,\r\n          coreSigner\r\n        );\r\n        const communicatorSignerInstance = new ethers.Contract(\r\n          commAddress,\r\n          abis.epnsComm,\r\n          signer\r\n        );\r\n        dispatch(setCoreWriteProvider(coreSignerInstance));\r\n        dispatch(setCommunicatorWriteProvider(communicatorSignerInstance));\r\n      }\r\n    })();\r\n  }, [account, chainId]);\r\n\r\n  useEffect(() => {\r\n    if (!epnsReadProvider || !epnsCommReadProvider || !epnsWriteProvider) return;\r\n    // save push admin to global state\r\n    epnsReadProvider.pushChannelAdmin()\r\n      .then((response) => {\r\n        dispatch(setPushAdmin(response));\r\n      })\r\n      .catch(err => {\r\n        console.log({ err })\r\n      });\r\n\r\n    // EPNS Read Provider Set\r\n    if (epnsReadProvider != null && epnsCommReadProvider != null) {\r\n      // Instantiate Data Stores\r\n      UsersDataStore.instance.init(\r\n        account,\r\n        epnsReadProvider,\r\n        epnsCommReadProvider\r\n      );\r\n      ChannelsDataStore.instance.init(\r\n        account,\r\n        epnsReadProvider,\r\n        epnsCommReadProvider,\r\n        chainId\r\n      );\r\n    }\r\n  }, [epnsReadProvider, epnsCommReadProvider, epnsWriteProvider]);\r\n\r\n  // Check if a user is a channel or not\r\n  const checkUserForChannelOwnership = async (channelAddress: string) => {\r\n    if (!channelAddress) return;\r\n    // Check if account is admin or not and handle accordingly\r\n    const ownerAccount = channelAddress;\r\n    EPNSCoreHelper.getChannelJsonFromUserAddress(ownerAccount, epnsReadProvider)\r\n      .then(async (response) => {\r\n        // if channel admin, then get if the channel is verified or not, then also fetch more details about the channel\r\n        const verificationStatus = await epnsWriteProvider.getChannelVerfication(\r\n          ownerAccount\r\n        );\r\n        const channelJson = await epnsWriteProvider.channels(ownerAccount);\r\n        const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\r\n          account\r\n        );\r\n        dispatch(\r\n          setUserChannelDetails({\r\n            ...response,\r\n            ...channelJson,\r\n            subscribers: channelSubscribers,\r\n          })\r\n        );\r\n        dispatch(setCoreChannelAdmin(ownerAccount));\r\n        dispatch(setCanVerify(Boolean(verificationStatus)));\r\n      })\r\n      .catch((err) => {\r\n        console.log(\r\n          \"There was an error [checkUserForChannelOwnership]:\",\r\n          err.message\r\n        );\r\n        dispatch(setUserChannelDetails(null));\r\n        dispatch(setProcessingState(0));\r\n      })\r\n  };\r\n\r\n  // fetch all the channels who have delegated to this account\r\n  const fetchDelegators = (aliasAddress: string, aliasEthAddress: string, aliasVerified: string) => {\r\n    if (!epnsReadProvider || !epnsCommReadProvider || !epnsWriteProvider) return;\r\n\r\n    const channelAddressInCaip = convertAddressToAddrCaip(account, chainId);\r\n    getReq(`/channels/_getUserDelegations/${channelAddressInCaip}`)\r\n      .then(async ({ data: delegators }) => {\r\n        // if there are actual delegators\r\n        // fetch basic information abouot the channels and store it to state\r\n        const isChannelDetails = channelDetails && channelDetails !== 'unfetched';\r\n        let delegateeList: Array<string> = [];\r\n        if (((aliasAddress || aliasEthAddress) && aliasVerified && isChannelDetails) || (processingState === 0 && isChannelDetails)) {\r\n          if(onCoreNetwork)\r\n            delegateeList.push(account);\r\n          else {\r\n            if (aliasEthAddr) {\r\n              delegateeList.push(aliasEthAddr);\r\n            }\r\n          }\r\n        }\r\n        if (delegators && delegators.channelOwners) {\r\n          console.log(delegators.channelOwners, delegators);\r\n          delegateeList.push(...delegators.channelOwners);\r\n          console.log(delegateeList);\r\n        }\r\n        console.log(delegateeList);\r\n        if (delegateeList.length > 0) {\r\n          const channelInformationPromise = [...delegateeList].map((channelAddress) => {\r\n            return ChannelsDataStore.instance\r\n              .getChannelJsonAsync(channelAddress)\r\n              .then((res) => ({ ...res, address: channelAddress }))\r\n              .catch(() => false);\r\n          });\r\n          const channelInformation = await Promise.all(\r\n            channelInformationPromise\r\n          );\r\n          dispatch(setDelegatees(channelInformation));\r\n        } else {\r\n          dispatch(setDelegatees([]));\r\n        }})\r\n      .catch(async (err) => {\r\n        console.log({ err });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!account) return;\r\n    (async function () {\r\n      await fetchDelegators(aliasAddr, aliasEthAddr, isAliasVerified);\r\n    })()\r\n  }, [aliasAddr, aliasEthAddr, isAliasVerified, account, processingState, channelDetails]);\r\n\r\n  // get core address of alias\r\n  const checkUserForEthAlias = async () => {\r\n    const userAddressInCaip = convertAddressToAddrCaip(account, chainId);\r\n    const { aliasEth, aliasVerified} = await getReq(`/v1/alias/${userAddressInCaip}/channel`).then(({ data }) => {\r\n      if (data) {\r\n        dispatch(setAliasEthAddress(data.channel));\r\n        dispatch(setCoreChannelAdmin(data.channel));\r\n        dispatch(setAliasVerified(data.is_alias_verified));\r\n        return {aliasEth: data['channel'], aliasVerified: data['is_alias_verified']};\r\n      }\r\n      return { aliasEth: null, aliasVerified: null };\r\n    });\r\n    return {aliasEth, aliasVerified};\r\n  };\r\n\r\n  const checkUserForAlias = async () => {\r\n    let { aliasAddress = null, isAliasVerified = null } = await ChannelsDataStore.instance.getChannelDetailsFromAddress(account);\r\n    if (aliasAddress == \"NULL\") aliasAddress = null;\r\n    \r\n    if (aliasAddress) {\r\n      dispatch(setAliasAddress(aliasAddress));\r\n      dispatch(setAliasVerified(isAliasVerified));\r\n      if (isAliasVerified) {\r\n        dispatch(setAliasVerified(true));\r\n        dispatch(setProcessingState(0));\r\n      } else {\r\n        dispatch(setProcessingState(2));\r\n        dispatch(setAliasVerified(false));\r\n      }\r\n    }\r\n    return;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!epnsReadProvider || !epnsCommReadProvider || channelDetails !== 'unfetched' || !account)\r\n      return;\r\n    \r\n    (async function () {\r\n      if (onCoreNetwork) {\r\n        await checkUserForChannelOwnership(account);\r\n        await checkUserForAlias();\r\n      } else {\r\n        const { aliasEth, aliasVerified } = await checkUserForEthAlias();\r\n        if (aliasEth) {\r\n          await checkUserForChannelOwnership(aliasEth);\r\n          if (!aliasVerified) {\r\n            dispatch(setProcessingState(3));\r\n          } else {\r\n            dispatch(setProcessingState(0));\r\n          }\r\n        } else {\r\n          dispatch(setUserChannelDetails(null));\r\n          dispatch(setProcessingState(0));\r\n        }\r\n      }\r\n    })();\r\n  }, [epnsReadProvider, epnsCommReadProvider, channelDetails, account]);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default InitState;\r\n","import React, { useState } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport { Web3Provider } from \"ethers/providers\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\r\nimport { useEagerConnect, useInactiveListener, useBrowserNotification } from \"hooks\";\r\nimport { injected, walletconnect, portis, ledger } from \"connectors\";\r\nimport { envConfig } from \"@project/contracts\";\r\nimport Joyride, { CallBackProps } from \"react-joyride\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Item, ItemH, Span, H2, B, A, C } from \"./primaries/SharedStyling\";\r\nimport Header from \"sections/Header\";\r\nimport Navigation from \"sections/Navigation\";\r\n\r\nimport NavigationContextProvider from \"contexts/NavigationContext\";\r\nimport MasterInterfacePage from \"pages/MasterInterfacePage\";\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nimport { themeLight, themeDark } from \"config/Themization\";\r\nimport GLOBALS from \"config/Globals\";\r\n\r\nimport { setRun, setIndex, setWelcomeNotifsEmpty } from \"./redux/slices/userJourneySlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport UserJourneySteps from \"segments/userJourneySteps\";\r\n\r\nimport * as dotenv from \"dotenv\";\r\nimport InitState from \"components/InitState\";\r\n\r\n\r\ndotenv.config();\r\n\r\n// define the different type of connectors which we use\r\nconst web3Connectors = {\r\n  Injected: {\r\n    obj: injected,\r\n    logo: \"./svg/login/metamask.svg\",\r\n    title: \"MetaMask\",\r\n  },\r\n  WalletConnect: {\r\n    obj: walletconnect,\r\n    logo: \"./svg/login/walletconnect.svg\",\r\n    title: \"Wallet Connect\",\r\n  },\r\n  // Trezor: {obj: trezor, logo: './svg/login/trezor.svg', title: 'Trezor'},\r\n  Ledger: { obj: ledger, logo: \"./svg/login/ledger.svg\", title: \"Ledger\" },\r\n  Portis: { obj: portis, logo: \"./svg/login/portis.svg\", title: \"Portis\" },\r\n};\r\n\r\nexport default function App() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { connector, activate, active, error, account } = useWeb3React<Web3Provider>();\r\n  const [activatingConnector, setActivatingConnector] = React.useState<\r\n    AbstractConnector\r\n  >();\r\n  const [currentTime, setcurrentTime] = React.useState(0);\r\n\r\n  const {\r\n    run,\r\n    stepIndex,\r\n    tutorialContinous,\r\n  } = useSelector((state: any) => state.userJourney);\r\n\r\n  \r\n\r\n  React.useEffect(() => {\r\n    const now = Date.now() / 1000;\r\n    setcurrentTime(now)\r\n  }, [])\r\n  React.useEffect(() => {\r\n    if (activatingConnector && activatingConnector === connector) {\r\n      setActivatingConnector(undefined);\r\n    }\r\n  }, [activatingConnector, connector]);\r\n\r\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\r\n  const triedEager = useEagerConnect();\r\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\r\n  useInactiveListener(!triedEager || !!activatingConnector);\r\n\r\n  // Initialize GA\r\n  ReactGA.initialize(envConfig.googleAnalyticsId);\r\n  ReactGA.pageview(\"/login\");\r\n  // Initialize GA\r\n\r\n  // Initialize Theme\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  // Enable browser notification\r\n  useBrowserNotification(account)\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    const data = localStorage.getItem('theme')\r\n    if (data) {\r\n      setDarkMode(JSON.parse(data))\r\n    }\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem('theme', JSON.stringify(darkMode))\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    document.body.style.backgroundColor = darkMode ? \"#000\" : \"#fff\";\r\n  }, [darkMode])\r\n\r\n\r\n  React.useEffect(() => {\r\n    window?.Olvy?.init({\r\n      organisation: \"epns\",\r\n      target: \"#olvy-target\",\r\n      type: \"sidebar\",\r\n      view: {\r\n        showSearch: false,\r\n        compact: false,\r\n        showHeader: true, // only applies when widget type is embed. you cannot hide header for modal and sidebar widgets\r\n        showUnreadIndicator: true,\r\n        unreadIndicatorColor: \"#cc1919\",\r\n        unreadIndicatorPosition: \"top-right\"\r\n      }\r\n    });\r\n    return function cleanup() {\r\n      window?.Olvy?.teardown();\r\n    };\r\n  });\r\n\r\n  const steps = UserJourneySteps({ darkMode });\r\n\r\n  const handleJoyrideCallback = (data: CallBackProps) => {\r\n    // console.log(data)\r\n    // console.log(STATUS);\r\n    const { action, lifecycle, status, index } = data\r\n    if (lifecycle === \"ready\") {\r\n      setTimeout(() => {\r\n        document.querySelector(\"div > section > div\").scrollTop = 0\r\n      }, 100)\r\n    }\r\n\r\n\r\n    if (action === \"close\" || index === 20) { //action === \"close\" ||\r\n      dispatch(setRun(false))\r\n      dispatch(setIndex(0))\r\n      dispatch(setWelcomeNotifsEmpty());\r\n    }\r\n    // else if (action === 'next' && status === 'running') {\r\n    //   dispatch(incrementStepIndex());\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={darkMode ? themeDark : themeLight}>\r\n      <InitState />\r\n      <NavigationContextProvider>\r\n        <Joyride\r\n          run={run}\r\n          steps={steps}\r\n          continuous={tutorialContinous}\r\n          stepIndex={stepIndex}\r\n          // hideFooter={true}\r\n          // primaryProps={false}\r\n          hideBackButton={true}\r\n          hideCloseButton={false}\r\n          disableScrolling={true}\r\n          disableScrollParentFix={true}\r\n          // disableFlip={true}\r\n          // showNextButton={false}\r\n          showSkipButton={false}\r\n          disableOverlayClose={true}\r\n          callback={handleJoyrideCallback}\r\n          styles={{\r\n            options: {\r\n              arrowColor: darkMode ? themeDark.dynamicTutsBg : themeLight.dynamicTutsBg,\r\n              backgroundColor: darkMode ? themeDark.dynamicTutsBg : themeLight.dynamicTutsBg,\r\n              overlayColor: darkMode ? themeDark.dynamicTutsBgOverlay : themeLight.dynamicTutsBgOverlay,\r\n              primaryColor: darkMode ? themeDark.dynamicTutsPrimaryColor : themeLight.dynamicTutsPrimaryColor,\r\n              textColor: darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor,\r\n              zIndex: 1000,\r\n            },\r\n          }}\r\n        />\r\n        <HeaderContainer>\r\n          <Header\r\n            isDarkMode={darkMode}\r\n            darkModeToggle={toggleDarkMode}\r\n          />\r\n        </HeaderContainer>\r\n\r\n        <ParentContainer\r\n          headerHeight={GLOBALS.CONSTANTS.HEADER_HEIGHT}\r\n        >\r\n\r\n          {(active) && !error && (\r\n            <>\r\n              <LeftBarContainer\r\n                leftBarWidth={GLOBALS.CONSTANTS.LEFT_BAR_WIDTH}\r\n              >\r\n                <Navigation />\r\n              </LeftBarContainer>\r\n\r\n              <ContentContainer\r\n                leftBarWidth={GLOBALS.CONSTANTS.LEFT_BAR_WIDTH}\r\n              >\r\n                {/* Shared among all pages, load universal things here */}\r\n                <MasterInterfacePage />\r\n              </ContentContainer>\r\n            </>\r\n          )}\r\n\r\n          {(!active) && (\r\n            <Item\r\n              justify=\"flex-start\"\r\n              padding=\"15px\"\r\n            >\r\n              <ProviderLogo\r\n                src=\"./epnshomelogo.png\"\r\n                srcSet={\"./epnshomelogo@2x.png 2x, ./epnshomelogo@2x.png 3x\"}\r\n              />\r\n\r\n              <Item\r\n                bg={darkMode ? themeDark : themeLight}\r\n                border=\"1px solid #ddd\"\r\n                padding=\"15px\"\r\n                radius=\"12px\"\r\n                flex=\"initial\"\r\n              >\r\n                <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n                  <Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\r\n                    Connect\r\n                  </Span>\r\n                  <Span weight=\"200\" color={darkMode ? themeDark : themeLight}> Your Wallet</Span>\r\n                </H2>\r\n\r\n                <ItemH maxWidth=\"700px\" align=\"stretch\">\r\n                  {Object.keys(web3Connectors).map((name) => {\r\n                    const currentConnector = web3Connectors[name].obj;\r\n                    const connected = currentConnector === connector;\r\n                    const disabled =\r\n                      !triedEager ||\r\n                      !!activatingConnector ||\r\n                      connected ||\r\n                      !!error;\r\n                    const image = web3Connectors[name].logo;\r\n                    const title = web3Connectors[name].title;\r\n\r\n                    return (\r\n                      <ProviderButton\r\n                        disabled={disabled}\r\n                        key={name}\r\n                        onClick={() => {\r\n                          setActivatingConnector(currentConnector);\r\n                          activate(currentConnector);\r\n                        }}\r\n                        border=\"#35c5f3\"\r\n                      >\r\n                        <ProviderImage src={image} />\r\n\r\n                        <Span\r\n                          spacing=\"0.1em\"\r\n                          textTransform=\"uppercase\"\r\n                          size=\"12px\"\r\n                          weight=\"600\"\r\n                          padding=\"20px\"\r\n                          background={darkMode ? themeDark.backgroundBG : themeLight.backgroundBG}\r\n                          color={darkMode ? themeDark.fontColor : themeLight.fontColor}\r\n\r\n                        >\r\n                          {title}\r\n                        </Span>\r\n                      </ProviderButton>\r\n                    );\r\n                  })}\r\n                </ItemH>\r\n              </Item>\r\n\r\n              <Span margin=\"30px 0px 0px 0px\" size=\"14px\" color={darkMode ? themeDark.fontColor : themeLight.fontColor}>\r\n                By unlocking your wallet, <B>You agree</B> to our{\" \"}\r\n                <A href=\"https://epns.io/tos\" target=\"_blank\">\r\n                  Terms of Service\r\n                </A>{\" \"}\r\n                and our{\" \"}\r\n                <A href=\"https://epns.io/privacy\" target=\"_blank\">\r\n                  Privacy Policy\r\n                </A>\r\n                .\r\n              </Span>\r\n              <Item\r\n                flex=\"initial\"\r\n                padding=\"30px 15px\"\r\n                radius=\"12px\"\r\n              >\r\n                <StyledItem>\r\n                  <span> Note: </span> The EPNS protocol has been under development for 1+ year,  and completed a <C href=\"https://epns.io/EPNS-Protocol-Audit2021.pdf\" target=\"_blank\"> ChainSafe audit </C> in October 2021. However, the mainnet is still a new product milestone.  Always DYOR, and anticipate bugs and UI improvements.  Learn how to report any bugs in our  <C href=\"https://discord.com/invite/YVPB99F9W5\" target=\"_blank\">Discord.</C>\r\n                </StyledItem>\r\n              </Item>\r\n\r\n            </Item>\r\n          )}\r\n        </ParentContainer>\r\n      </NavigationContextProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// CSS STYLES\r\nconst StyledItem = styled(Item)`\r\n  font-size: 14px;\r\n  letter-spacing: 0.4px;\r\n  display: block;\r\n  background: ${props => props.theme.backgroundBG};\r\n  color: ${props => props.theme.color};\r\n  border:1px solid #ddd;\r\n  padding:30px 15px;\r\n  border-radius:12px;\r\n  line-height: 18px;\r\n  align-items: center;\r\n  width:44rem;\r\n\r\n  span{\r\n    color: #e20880;\r\n  }\r\n\r\n  @media(max-width:400px){\r\n    width: auto;\r\n  }\r\n`;\r\n\r\n\r\nconst HeaderContainer = styled.header`\r\n  left: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 999;\r\n`;\r\n\r\nconst ParentContainer = styled.div`\r\n  flex-wrap: wrap;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  flex: 1;\r\n  background: ${props => props.theme.backgroundBG};\r\n  margin: ${props => props.headerHeight}px 0px 0px 0px;\r\n  min-height: calc(100vh - ${GLOBALS.CONSTANTS.HEADER_HEIGHT}px);\r\n`;\r\n\r\nconst LeftBarContainer = styled.div`\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  width: ${props => props.leftBarWidth}px;\r\n  position: fixed;\r\n\r\n  @media (max-width: 992px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst ContentContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  align-self: center;\r\n  width: 100%;\r\n\r\n\r\n\r\n  margin: 0px 0px 0px ${props => props.leftBarWidth}px;\r\n\r\n  @media (max-width: 992px) {\r\n    margin: 0px;\r\n  }\r\n`;\r\n\r\nconst ProviderLogo = styled.img`\r\n  width: 15vw;\r\n  align-self: center;\r\n  display: flex;\r\n  margin: 10px 20px 20px 20px;\r\n  min-width: 200px;\r\n`;\r\n\r\nconst ProviderButton = styled.button`\r\n  flex: 1 1 0;\r\n  min-width: 280px;\r\n  background: ${props => props.theme.mainBg};\r\n  outline: 0;ProviderButton\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 15px;\r\n  border: 1px solid rgb(225, 225, 225);\r\n\r\n  margin: 20px;\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 10px;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    border: 1px solid ${(props) => props.border};\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    border: 1px solid ${(props) => props.border};\r\n  }\r\n`;\r\n\r\nconst ProviderImage = styled.img`\r\n  width: 32px;\r\n  max-height: 32px;\r\n  padding: 10px;\r\n`;\r\n","import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { isLedgerDappBrowserProvider } from '@epnsproject/sdk-ledgerlive';\r\nimport { injected, ledgerLiveConnector } from 'connectors'\r\n\r\nexport function useEagerConnect() {\r\n  const { activate, active } = useWeb3React()\r\n\r\n  const [tried, setTried] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // If running on a ledger live app, use ledger connector. Else use injected connector\r\n    if (isLedgerDappBrowserProvider()) {\r\n      activate(ledgerLiveConnector, undefined, true).catch(() => {\r\n        setTried(true);\r\n      });\r\n    } else {\r\n      injected.isAuthorized().then((isAuthorized: boolean) => {\r\n        if (isAuthorized) {\r\n          activate(injected, undefined, true).catch(() => {\r\n            setTried(true);\r\n          });\r\n        } else {\r\n          setTried(true);\r\n        }\r\n      });\r\n    }\r\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (!tried && active) {\r\n      setTried(true)\r\n    }\r\n  }, [tried, active])\r\n\r\n  return tried\r\n}","import { useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { injected } from 'connectors'\r\n\r\nexport function useInactiveListener(suppress: boolean = false) {\r\n    const { active, error, activate } = useWeb3React()\r\n  \r\n    useEffect((): any => {\r\n      const { ethereum } = window as any\r\n      if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n        const handleConnect = () => {\r\n          console.log(\"Handling 'connect' event\")\r\n          activate(injected)\r\n        }\r\n        const handleChainChanged = (chainId: string | number) => {\r\n          console.log(\"Handling 'chainChanged' event with payload\", chainId)\r\n          activate(injected)\r\n        }\r\n        const handleAccountsChanged = (accounts: string[]) => {\r\n          console.log(\"Handling 'accountsChanged' event with payload\", accounts)\r\n          if (accounts.length > 0) {\r\n            activate(injected)\r\n          }\r\n        }\r\n        const handleNetworkChanged = (networkId: string | number) => {\r\n          console.log(\"Handling 'networkChanged' event with payload\", networkId)\r\n          activate(injected)\r\n        }\r\n  \r\n        ethereum.on('connect', handleConnect)\r\n        ethereum.on('chainChanged', handleChainChanged)\r\n        ethereum.on('accountsChanged', handleAccountsChanged)\r\n        ethereum.on('networkChanged', handleNetworkChanged)\r\n  \r\n        return () => {\r\n          if (ethereum.removeListener) {\r\n            ethereum.removeListener('connect', handleConnect)\r\n            ethereum.removeListener('chainChanged', handleChainChanged)\r\n            ethereum.removeListener('accountsChanged', handleAccountsChanged)\r\n            ethereum.removeListener('networkChanged', handleNetworkChanged)\r\n          }\r\n        }\r\n      }\r\n    }, [active, error, suppress, activate])\r\n  }","import { useState, useEffect } from 'react'\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport function useBrowserNotification(account){\r\n    const [triggerNotification, setTriggerNotification] = useState(false);\r\n     \r\n    useEffect(() => {\r\n      if (!(\"serviceWorker\" in navigator)) return\r\n      if (!account) return;\r\n      (async function () {\r\n        const {browserFunction} = require('firebase')\r\n        await browserFunction(account);\r\n      })();\r\n    }, [account]);\r\n  \r\n    useEffect(() => {\r\n      if (!(\"serviceWorker\" in navigator)) return\r\n      const {onMessageListener} = require(\"firebase\")\r\n      onMessageListener().then(payload => {\r\n        if (!(\"Notification\" in window)) {\r\n          toast.dark(`${payload.notification.body} from: ${payload.notification.title}`, {\r\n            type: toast.TYPE.DARK,\r\n            autoClose: 5000,\r\n            position: \"top-right\"\r\n          });\r\n        } else {\r\n          console.log('\\n\\n\\n\\n\\n')\r\n          console.log(\"revieced push notification\")\r\n          console.log('\\n\\n\\n\\n\\n')\r\n          const notificationTitle = payload.notification.title;\r\n          const notificationOptions = {\r\n            title: payload.data.app,\r\n            body: payload.notification.body,\r\n            image: payload.data.aimg,\r\n            icon: payload?.data?.icon,\r\n            data: {\r\n              url: payload?.data?.acta || payload?.data?.url,\r\n            },\r\n          };\r\n          var notification = new Notification(notificationTitle, notificationOptions);\r\n        }\r\n      }).catch(err => console.log('failed: ', err))\r\n        .finally(() => setTriggerNotification(!triggerNotification)); //retrigger the listener after it has been used once\r\n    }, [triggerNotification]);\r\n  }","import {configureStore, combineReducers, getDefaultMiddleware} from '@reduxjs/toolkit';\r\nimport contractReducer from './slices/contractSlice';\r\nimport channelReducer from './slices/channelSlice';\r\nimport channelCreationReducer from './slices/channelCreationSlice';\r\nimport adminReducer from './slices/adminSlice';\r\nimport notificationReducer from './slices/notificationSlice';\r\nimport spamReducer from './slices/spamSlice';\r\nimport userJourneyReducer from './slices/userJourneySlice';\r\nimport canSendNotification  from \"./slices/sendNotificationSlice\"\r\n\r\nconst rootReducer = combineReducers({\r\n\tcontracts: contractReducer,\r\n\tchannels: channelReducer,\r\n\tchannelCreation: channelCreationReducer,\r\n\tadmin: adminReducer,\r\n\tnotifications: notificationReducer,\r\n\tspam: spamReducer,\r\n\tuserJourney: userJourneyReducer,\r\n\tcanSend:canSendNotification,\r\n});\r\n\r\nconst store = configureStore({\r\n\treducer: rootReducer,\r\n\tmiddleware: getDefaultMiddleware({\r\n\t\tserializableCheck: false,\r\n\t\timmutableCheck: false\r\n\t})\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport { ethers } from \"ethers\";\r\nimport { Provider } from \"react-redux\";\r\nimport { Web3ReactProvider } from \"@web3-react/core\";\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport * as dotenv from \"dotenv\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\nimport \"./index.css\";\r\n\r\n// enable environmental variables across the entire application\r\ndotenv.config();\r\n// You should replace this uri with your own and put it into a .env file\r\nconst client = new ApolloClient({\r\n  uri: \"https://api.thegraph.com/subgraphs/name/epnsproject/epnsstaging\",\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\n/**\r\n * A utility function used to get the provider\r\n */\r\nfunction getLibrary(provider) {\r\n  const gottenProvider = new ethers.providers.Web3Provider(provider, \"any\");\r\n  // adding this is important to deal with changing networks\r\n  gottenProvider.on(\"network\", (_, oldNetwork) => {\r\n    if (oldNetwork) {\r\n      // when network has been changed, refresh the page\r\n      window.location.reload();\r\n    }\r\n  });\r\n  return gottenProvider;\r\n}\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Provider store={store}>\r\n      <ApolloProvider client={client}>\r\n        <Web3ReactProvider getLibrary={getLibrary}>\r\n          <App />\r\n        </Web3ReactProvider>\r\n      </ApolloProvider>\r\n    </Provider>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport styled, { ThemeProvider,useTheme } from \"styled-components\";\r\nimport { MdOutlineClose } from \"react-icons/md\";\r\n\r\ntype LoaderToastType = { msg: string, loaderColor: string, textColor:string }\r\n\r\nconst override: React.CSSProperties = {\r\n  // width: \"fit-content\",\r\n  height: \"45px\",\r\n};\r\n\r\nconst LoaderToast = ({ msg, loaderColor, textColor }: LoaderToastType) => (\r\n  <LoaderNotification>\r\n    <FadeLoader\r\n      color={loaderColor}\r\n      height={9}\r\n      width={2.5}\r\n      margin={0}\r\n      css={override}\r\n    />\r\n    <LoaderMessage style={{\r\n      color: textColor\r\n    }}>{msg}</LoaderMessage>\r\n  </LoaderNotification>\r\n);\r\n\r\nconst CloseButton = ({ closeToast }) => (<Button onClick={closeToast}>\r\n  <MdOutlineClose color=\"#657795\" size=\"100%\" />\r\n</Button>)\r\n\r\nconst useToast = () => {\r\n  const toastId = React.useRef(null);\r\n  const themes = useTheme();\r\n\r\n  const showToast = (loaderMessage: string) =>\r\n    toastId.current = toast(\r\n      <ThemeProvider theme={themes}>\r\n        <LoaderToast msg={loaderMessage} loaderColor=\"#CF1C84\" textColor={themes.toastTextColor} />\r\n      </ThemeProvider>,\r\n      {\r\n        position: \"top-right\",\r\n        autoClose: false,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        closeButton: false,\r\n        style: {\r\n          background: themes.mainBg,\r\n          border: `1px solid ${themes.toastBorderColor}`,\r\n          // boxShadow: \"0px 0px 10px 0px #00000005\",\r\n          boxShadow: \"10px 10px 10px #ccc\",\r\n          borderRadius: \"20px\",\r\n        }\r\n      }\r\n    );\r\n\r\n  const updateToast = (toastTitle: string, toastMessage: string, toastType: \"SUCCESS\" | \"ERROR\", getToastIcon: (size: number) => JSX.Element = null) => {\r\n    const successBgGradient = themes.scheme===\"dark\"\r\n    ? \"linear-gradient(90.15deg, #30CC8B -125.65%, #30CC8B -125.63%, #2F3137 42.81%)\"\r\n    : \"linear-gradient(90.15deg, #30CC8B -125.65%, #30CC8B -125.63%, #F3FFF9 42.81%)\";\r\n\r\n    const errorBgGradient = themes.scheme===\"dark\"\r\n    ? \"linear-gradient(89.96deg, #FF2070 -101.85%, #2F3137 51.33%)\"\r\n    : \"linear-gradient(90.15deg, #FF2070 -125.65%, #FF2D79 -125.63%, #FFF9FB 42.81%)\";\r\n\r\n\r\n    toast.update(toastId.current, {\r\n      render:\r\n        <Toast>\r\n          <ToastIcon>\r\n            {getToastIcon ? getToastIcon(30) : \"\"}\r\n          </ToastIcon>\r\n          <ToastContent>\r\n            <ToastTitle style={{\r\n              color: themes.fontColor\r\n            }}>\r\n              {toastTitle}\r\n            </ToastTitle>\r\n            <ToastMessage style={{\r\n              color: themes.toastTextColor\r\n            }}>\r\n              {toastMessage}\r\n            </ToastMessage>\r\n          </ToastContent>\r\n        </Toast>\r\n      ,\r\n      type: toast.TYPE.DEFAULT,\r\n      closeButton: CloseButton,\r\n      autoClose: 3000,\r\n      style: {\r\n        background: toastType === \"SUCCESS\" ? successBgGradient : errorBgGradient,\r\n        // boxShadow: \"0px 0px 10px 0px #00000005\",\r\n  boxShadow: \"10px 10px 10px #ccc\",\r\n        borderRadius: \"20px\",\r\n      },\r\n    });\r\n  }\r\n\r\n  return {\r\n    showToast, updateToast\r\n  }\r\n}\r\n\r\nconst LoaderNotification = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 1% 3%;\r\n`;\r\nconst LoaderMessage = styled.div`\r\n  margin-left: 3%;\r\n  font-family: Manrope;\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  line-height: 1.3rem;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`;\r\n\r\nconst Toast = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  margin: 1.5% 1%;\r\n`;\r\nconst ToastIcon = styled.div`\r\n  width:15%;\r\n  margin-right: 4%;\r\n`;\r\nconst ToastContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n`;\r\nconst ToastTitle = styled.div`\r\n  font-family: Manrope;\r\n  font-size: 1.1rem;\r\n  font-weight: 700;\r\n  line-height: 1.4rem;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  margin-bottom: 1%;\r\n`;\r\nconst ToastMessage = styled.div`\r\n  font-family: Manrope;\r\n  font-size: 0.9rem;\r\n  font-weight: 600;\r\n  line-height: 1.3rem;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  cursor:pointer;\r\n  background:none;\r\n  margin:0;\r\n  padding:0;\r\n  width: 1.3rem;\r\n  height: 1.3rem;\r\n`\r\n\r\nexport default useToast;","import { EnvHelper } from \"./UtilityHelper\";\r\nimport ipfsClient from 'ipfs-http-client';\r\n\r\nexport const productionIpfsGateway: string = 'https://epns-gateway.infura-ipfs.io/ipfs/';\r\nexport const developmentIpfsGateway: string = 'https://epns-testing.infura-ipfs.io/ipfs/';\r\n\r\nexport const IPFSGateway = EnvHelper.isProduction() ? productionIpfsGateway : developmentIpfsGateway;\r\n\r\nexport const IPFSupload = async (input: string) => {\r\n  const bufferInput = Buffer.from(input);\r\n  const projectId = process.env.REACT_APP_IPFS_PROJECT_ID;\r\n  const projectSecret = process.env.REACT_APP_IPFS_PROJECT_SECRET;\r\n  const auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\r\n\r\n  const client = ipfsClient({\r\n    host: 'ipfs.infura.io',\r\n    port: 5001,\r\n    protocol: 'https',\r\n    apiPath: '/api/v0/add',\r\n    headers: {\r\n      authorization: auth\r\n    }\r\n  });\r\n\r\n  try {\r\n    const storagePointer = await client.add(bufferInput, {pin: true});\r\n    return storagePointer[0]['hash'];\r\n  } catch (err) {\r\n    throw Error(err);\r\n  }\r\n}","import axios from \"axios\";\r\nimport { envConfig } from \"@project/contracts\";\r\n\r\nconst BASE_URL = envConfig.apiUrl\r\nconst TOOLING_BASE_URL = envConfig.toolingApiUrl\r\n\r\n/**\r\n * A function used to make get requests throughout the entire application\r\n * @param {String} path e.g /feeds/getFeeds, this represents the route of the enpoint to call\r\n * @returns {Promise}\r\n */\r\nexport const getReq = async (path) => {\r\n    try {\r\n      const response = await axios.get(BASE_URL + path);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n/**\r\n * A function used to make post requests to the backend\r\n * @param {String} path e.g /feeds/getFeeds, this represents the route of the enpoint to call\r\n * @param {Object} obj\r\n * @returns {Promise}\r\n */\r\nexport const postReq = async (path, obj) => {\r\n  try {\r\n    const response = await axios.post(BASE_URL + path, obj, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const toolingPostReq = async (path, obj) => {\r\n  try {\r\n    const response = await axios.post(TOOLING_BASE_URL + path, obj, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    console.error(error.response.data);\r\n    throw error.response.data;\r\n  }\r\n};","import { initializeApp } from \"@firebase/app\";\r\nimport { envConfig } from \"@project/contracts\";\r\nimport { getMessaging, getToken, onMessage } from \"@firebase/messaging\";\r\nimport { postReq } from \"api\";\r\n\r\n// Initialize the Firebase app in the service worker by passing the generated config\r\nvar firebaseConfig = { ...envConfig.firebaseConfig };\r\nconst TOKEN_KEY = \"EPNS_BASE_PUSH_TOKEN\";\r\nconst CACHEPREFIX = \"PUSH_TOKEN_\";\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst messaging = getMessaging(firebaseApp);\r\n\r\nconst getLocalToken = () => localStorage.getItem(TOKEN_KEY);\r\nconst setLocalToken = (token) => localStorage.setItem(TOKEN_KEY, token);\r\n\r\nexport const getPushToken = async () => {\r\n  try {\r\n    let token = getLocalToken(TOKEN_KEY);\r\n    if(!token){\r\n      token = await getToken(messaging, {\r\n        vapidKey: envConfig.vapidKey,\r\n      });\r\n      setLocalToken(token);\r\n    }\r\n    return token;\r\n  } catch (err) {\r\n    console.log('\\n\\n\\n\\n')\r\n    console.log(\"An error occurred while retrieving token. \", err);\r\n    console.log('\\n\\n\\n\\n')\r\n  }\r\n};\r\n\r\nexport const onMessageListener = () =>\r\n  new Promise((resolve) => {\r\n    onMessage(messaging, (payload) => {\r\n      resolve(payload);\r\n    });\r\n});\r\n\r\nexport const browserFunction = async(account)=>{\r\n  try{\r\n    const tokenKey = `${CACHEPREFIX}${account}`;\r\n    const tokenExists = localStorage.getItem(tokenKey) || localStorage.getItem(CACHEPREFIX); //temp to prevent more than 1 account to register\r\n    if (!tokenExists) {\r\n      const response = await getPushToken();\r\n      const object = {\r\n        op: 'register',\r\n        wallet: account.toLowerCase(),\r\n        device_token: response,\r\n        platform: 'dapp',\r\n      };\r\n      await postReq('/pushtokens/_register_no_auth', object);\r\n      localStorage.setItem(tokenKey, response);\r\n      localStorage.setItem(CACHEPREFIX, 'response'); //temp to prevent more than 1 account to register\r\n    }\r\n  }catch(e){\r\n    console.log(\"Error setting up the browser notification\",e);\r\n  }\r\n}","import { envConfig } from \"@project/contracts\";\r\nimport { convertChainIdToChainCaip } from \"./CaipHelper\";\r\nimport { utils } from \"ethers\";\r\n\r\n// Utility Helper Functions\r\nconst UtilityHelper = {\r\n  isMainnet : (chainId: number) => {\r\n    if (chainId === 1 || chainId === 137) {\r\n      return true;\r\n    }\r\n  },\r\n}\r\n\r\n// Disable the browser notification on Metamask iphone mobile\r\nexport const isUserAgentIphone = (userAgent) =>{\r\n  return userAgent.indexOf(\"iPhone\") !== -1\r\n}\r\n\r\nexport const envUtil = {\r\n  prod: \"app.epns.io\",\r\n  staging: \"staging.epns.io\",\r\n  dev: \"dev.epns.io\",\r\n  localhost: \"localhost\"\r\n}\r\n\r\nexport const EnvHelper = {\r\n  isProd: window.location.hostname === envUtil['prod'],\r\n  isStaging: window.location.hostname === envUtil['staging'],\r\n  isDev: window.location.hostname === envUtil['dev'],\r\n  isLocalHost: window.location.hostname === envUtil['localhost'],\r\n  isProduction() {\r\n    return (this.isProd || this.isStaging || this.isDev);\r\n  }\r\n};\r\n\r\nexport const networkName = {\r\n  42: \"Ethereum Kovan\",\r\n  1: \"Ethereum Mainnet\",\r\n  137: \"Polygon Mainnet\",\r\n  80001: \"Polygon Mumbai\"\r\n}\r\n\r\nexport const aliasChainIdsMapping = {\r\n  1: 137,\r\n  42: 80001\r\n};\r\n\r\nexport const PolygonNetworks = {\r\n  MUMBAI_TESTNET: {\r\n    chainId: utils.hexValue(80001),\r\n    chainName: 'Polygon Mumbai Testnet',\r\n    nativeCurrency: { name: 'tMATIC', symbol: 'tMATIC', decimals: 18 },\r\n    rpcUrls: ['https://matic-mumbai.chainstacklabs.com', 'https://rpc-mumbai.maticvigil.com'],\r\n    blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"],\r\n  },\r\n  POLYGON_MAINNET: {\r\n    chainId: utils.hexValue(137), \r\n    chainName: \"Polygon Mainnet\", \r\n    nativeCurrency: { name: \"MATIC\", symbol: \"MATIC\", decimals: 18 },\r\n    rpcUrls: [\"https://polygon-rpc.com\"],\r\n    blockExplorerUrls: [\"https://www.polygonscan.com/\"],\r\n  },\r\n}\r\n\r\nexport const CORE_CHAIN_ID: number = envConfig.coreContractChain;\r\n\r\nexport const getAliasFromChannelDetails = (channelDetails: Object | null | string): (string | null) => {\r\n  if (!channelDetails || channelDetails === 'unfetched')\r\n    return null;\r\n  \r\n  if (channelDetails['aliasDetails']) {\r\n    const aliasDetails = channelDetails['aliasDetails'];\r\n    const aliasChainId = aliasChainIdsMapping[CORE_CHAIN_ID];\r\n    const caipChainId = convertChainIdToChainCaip(aliasChainId);\r\n    if (aliasDetails[caipChainId]) {\r\n      return aliasDetails[caipChainId];\r\n    }\r\n  } else if (channelDetails['address'] != null && channelDetails['address'] != \"\") {\r\n    if (channelDetails['chain_id'] === aliasChainIdsMapping[CORE_CHAIN_ID].toString()) {\r\n      return channelDetails['address'];\r\n    }\r\n  } \r\n\r\n  return null;\r\n}\r\n\r\nexport default UtilityHelper;\r\n","import { envConfig } from \"@project/contracts\";\r\n\r\nexport const Eip155EnabledIds: Array<Number> = [137, 80001];\r\n\r\ntype CAIPProps = {\r\n  chainId: number;\r\n  address: string;\r\n}\r\n\r\n// return caip obj from chainId and address\r\nexport const getCAIPObj = ({ chainId, address }: CAIPProps) => {\r\n  if (chainId === envConfig.coreContractChain) return {};\r\n\r\n  if (Eip155EnabledIds.includes(chainId)) {\r\n    const caip = 'eip155:' + chainId;\r\n\r\n    return {\r\n      [caip]: address\r\n    }\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n\r\nexport const getCAIP = (chainId: number) => {\r\n  if (Eip155EnabledIds.includes(chainId)) {\r\n    return 'eip155';\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport const convertAddressToAddrCaip = (userAddress: string, chainId: number) => {\r\n  return `eip155:${chainId}:${userAddress}`;\r\n}\r\n\r\nexport const convertAddrCaipToAddress = (addressInCaip: string) => {\r\n  const caipArr = addressInCaip.split(':');\r\n  if (caipArr.length == 3 && caipArr[0] == 'eip155') {\r\n    return caipArr[2];\r\n  } else {\r\n    throw new Error('Invalid CAIP Format');\r\n  }\r\n}\r\n\r\nexport const convertChainIdToChainCaip = (chainId: number) => {\r\n  if (Eip155EnabledIds.includes(chainId))\r\n    return `eip155:${chainId}`;\r\n  else\r\n    return null;\r\n}\r\n\r\nexport const convertChainCaipToChainId = (chainInCaip: string) => {\r\n  const caipArr = chainInCaip.split(':');\r\n  if (caipArr.length == 2 && caipArr[0] == 'eip155') {\r\n    return caipArr[2];\r\n  } else {\r\n    throw new Error('Invalid CAIP Format');\r\n  }\r\n}","(function() {\r\n\t// The random number is a js implementation of the Xorshift PRNG\r\n\tvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\r\n\r\n\tfunction seedrand(seed) {\r\n\t\tfor (var i = 0; i < randseed.length; i++) {\r\n\t\t\trandseed[i] = 0;\r\n\t\t}\r\n\t\tfor (var i = 0; i < seed.length; i++) {\r\n\t\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction rand() {\r\n\t\t// based on Java's String.hashCode(), expanded to 4 32bit values\r\n\t\tvar t = randseed[0] ^ (randseed[0] << 11);\r\n\r\n\t\trandseed[0] = randseed[1];\r\n\t\trandseed[1] = randseed[2];\r\n\t\trandseed[2] = randseed[3];\r\n\t\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));\r\n\r\n\t\treturn (randseed[3]>>>0) / ((1 << 31)>>>0);\r\n\t}\r\n\r\n\tfunction createColor() {\r\n\t\t//saturation is the whole color spectrum\r\n\t\tvar h = Math.floor(rand() * 360);\r\n\t\t//saturation goes from 40 to 100, it avoids greyish colors\r\n\t\tvar s = ((rand() * 60) + 40) + '%';\r\n\t\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\r\n\t\tvar l = ((rand()+rand()+rand()+rand()) * 25) + '%';\r\n\r\n\t\tvar color = 'hsl(' + h + ',' + s + ',' + l + ')';\r\n\t\treturn color;\r\n\t}\r\n\r\n\tfunction createImageData(size) {\r\n\t\tvar width = size; // Only support square icons for now\r\n\t\tvar height = size;\r\n\r\n\t\tvar dataWidth = Math.ceil(width / 2);\r\n\t\tvar mirrorWidth = width - dataWidth;\r\n\r\n\t\tvar data = [];\r\n\t\tfor(var y = 0; y < height; y++) {\r\n\t\t\tvar row = [];\r\n\t\t\tfor(var x = 0; x < dataWidth; x++) {\r\n\t\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\r\n\t\t\t\t// spot color has 13% chance\r\n\t\t\t\trow[x] = Math.floor(rand()*2.3);\r\n\t\t\t}\r\n\t\t\tvar r = row.slice(0, mirrorWidth);\r\n\t\t\tr.reverse();\r\n\t\t\trow = row.concat(r);\r\n\r\n\t\t\tfor(var i = 0; i < row.length; i++) {\r\n\t\t\t\tdata.push(row[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tfunction buildOpts(opts) {\r\n\t\tvar newOpts = {};\r\n\r\n\t\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\r\n\r\n\t\tseedrand(newOpts.seed);\r\n\r\n\t\tnewOpts.size = opts.size || 8;\r\n\t\tnewOpts.scale = opts.scale || 4;\r\n\t\tnewOpts.color = opts.color || createColor();\r\n\t\tnewOpts.bgcolor = opts.bgcolor || createColor();\r\n\t\tnewOpts.spotcolor = opts.spotcolor || createColor();\r\n\r\n\t\treturn newOpts;\r\n\t}\r\n\r\n\tfunction renderIcon(opts, canvas) {\r\n\t\topts = buildOpts(opts || {});\r\n\t\tvar imageData = createImageData(opts.size);\r\n\t\tvar width = Math.sqrt(imageData.length);\r\n\r\n\t\tcanvas.width = canvas.height = opts.size * opts.scale;\r\n\r\n\t\tvar cc = canvas.getContext('2d');\r\n\t\tcc.fillStyle = opts.bgcolor;\r\n\t\tcc.fillRect(0, 0, canvas.width, canvas.height);\r\n\t\tcc.fillStyle = opts.color;\r\n\r\n\t\tfor(var i = 0; i < imageData.length; i++) {\r\n\r\n\t\t\t// if data is 0, leave the background\r\n\t\t\tif(imageData[i]) {\r\n\t\t\t\tvar row = Math.floor(i / width);\r\n\t\t\t\tvar col = i % width;\r\n\r\n\t\t\t\t// if data is 2, choose spot color, if 1 choose foreground\r\n\t\t\t\tcc.fillStyle = (imageData[i] == 1) ? opts.color : opts.spotcolor;\r\n\r\n\t\t\t\tcc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\tfunction createIcon(opts) {\r\n\t\tvar canvas = document.createElement('canvas');\r\n\r\n\t\trenderIcon(opts, canvas);\r\n\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\tvar api = {\r\n\t\tcreate: createIcon,\r\n\t\trender: renderIcon\r\n\t};\r\n\r\n\tif (typeof module !== \"undefined\") {\r\n\t\tmodule.exports = api;\r\n\t}\r\n\tif (typeof window !== \"undefined\") {\r\n\t\t window.blockies = api;\r\n\t}\r\n\r\n})();\r\n","import EthCrypto from 'eth-crypto';\r\nimport {encrypt, decrypt} from 'eccrypto';\r\nimport { publicKeyConvert } from 'secp256k1-v4';\r\nimport * as metamaskSigUtil from \"@metamask/eth-sig-util\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst CryptoHelper = {\r\n  // To Encrypt with AES\r\n  encryptWithAES: function(message, key) {\r\n    return CryptoJS.AES.encrypt(message, key).toString();\r\n  },\r\n  // To Decrypt with AES\r\n  decryptWithAES: function(message, key) {\r\n    let bytes  = CryptoJS.AES.decrypt(message, key);\r\n    return bytes.toString(CryptoJS.enc.Utf8);\r\n  },\r\n  // To Encrypt Secret with Public key\r\n  encryptWithRPCEncryptionPublicKey: function (text, encryptionPublicKey) {\r\n    const encryptedSecret = metamaskSigUtil.encrypt({\r\n      publicKey: encryptionPublicKey,\r\n      data: text,\r\n      version: 'x25519-xsalsa20-poly1305'\r\n    });\r\n\r\n    const bufferRes = Buffer.from(JSON.stringify(encryptedSecret), 'utf8');\r\n    const result = bufferRes.toString('hex');\r\n\r\n    return result;\r\n  },\r\n  decryptWithWalletRPCMethod: async function (provider, encryptedMessage, account) {\r\n    const result = await provider.request({\r\n      method: 'eth_decrypt',\r\n      params: [encryptedMessage, account],\r\n    });\r\n\r\n    return result;\r\n  },\r\n  // To Form Encryted Secret, no more than 15 characters supported\r\n  encryptWithECIES: async function (message, publicKey) {\r\n    const compressedKey = EthCrypto.publicKey.compress(publicKey);\r\n\r\n    const encryptedSecret = await this.encryptWithPublicKey(message, compressedKey);\r\n\r\n    // Not using it since sqlite2 has some error with this\r\n    // const compressedEncryptedSecret = EthCrypto.hex.compress(encryptedSecret);\r\n\r\n    return encryptedSecret;\r\n  },\r\n  // To Form Decrypted Secret, no more than 15 characters supported\r\n  decryptWithECIES: async function(message, privateKey) {\r\n    // Message is always compressed, not using because sqlite2 has some error with this\r\n    //const uncompressedMessage = EthCrypto.hex.decompress(message).substr(2); // to remove 0x\r\n\r\n    return await this.decryptWithPrivateKey(message, privateKey);\r\n  },\r\n  // Encryption with public key\r\n  encryptWithPublicKey: async function(message, publicKey) {\r\n    // Convert compressed public key, starts with 03 or 04\r\n    const pubKeyUint8Array = Uint8Array.from(\r\n      new Buffer(publicKey, 'hex')\r\n    );\r\n    //console.log(\"[ENCRYPTION] Public Key Uint8Array: \" + pubKeyUint8Array);\r\n\r\n    const convertedKeyAsUint8Array = publicKeyConvert(pubKeyUint8Array, false);\r\n    //console.log(\"[ENCRYPTION] Public Key Converted: \" + convertedKeyAsUint8Array);\r\n\r\n    const convertedPublicKeyHex = new Buffer(convertedKeyAsUint8Array);\r\n    //console.log(\"[ENCRYPTION] Converted Public Key Buffer: \" + convertedPublicKeyHex);\r\n\r\n    const pubKey = new Buffer(convertedPublicKeyHex, 'hex');\r\n    //console.log(\"[ENCRYPTION] pubkey getting sentout for encrypt: \" + pubKey);\r\n\r\n    return encrypt(\r\n        pubKey,\r\n        Buffer(message)\r\n    ).then(encryptedBuffers => {\r\n      const cipher = {\r\n          iv: encryptedBuffers.iv.toString('hex'),\r\n          ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\r\n          ciphertext: encryptedBuffers.ciphertext.toString('hex'),\r\n          mac: encryptedBuffers.mac.toString('hex')\r\n      };\r\n      // use compressed key because it's smaller\r\n      // const compressedKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(cipher.ephemPublicKey), true)).toString('hex')\r\n      const input = Uint8Array.from(\r\n        new Buffer(cipher.ephemPublicKey, 'hex')\r\n      );\r\n      const keyConvert = publicKeyConvert(input, true)\r\n      // console.log(\"[ENCRYPTION] Coverted key: \" + keyConvert);\r\n\r\n      const keyConvertBuffer = new Buffer(keyConvert);\r\n      // console.log(\"[ENCRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\r\n      // console.log(keyConvertBuffer);\r\n\r\n      //console.log(keyConvert);\r\n      const compressedKey = keyConvertBuffer.toString('hex')\r\n      // console.log(\"[ENCRYPTION] Compressed key in buffer : \");\r\n      // console.log(compressedKey);\r\n\r\n      const ret = Buffer.concat([\r\n        new Buffer(cipher.iv, 'hex'), // 16bit\r\n        new Buffer(compressedKey, 'hex'), // 33bit\r\n        new Buffer(cipher.mac, 'hex'), // 32bit\r\n        new Buffer(cipher.ciphertext, 'hex') // var bit\r\n      ]).toString('hex')\r\n\r\n      return ret\r\n    });\r\n  },\r\n  // Decryption with public key\r\n  decryptWithPrivateKey: async function(message, privateKey) {\r\n    let encrypted = message;\r\n    const buf = new Buffer(encrypted, 'hex');\r\n    // console.log(\"[DECRYPTION] Buffer Passed: \" + buf);\r\n\r\n    encrypted = {\r\n      iv: buf.toString('hex', 0, 16),\r\n      ephemPublicKey: buf.toString('hex', 16, 49),\r\n      mac: buf.toString('hex', 49, 81),\r\n      ciphertext: buf.toString('hex', 81, buf.length)\r\n    };\r\n    // decompress publicKey\r\n    // encrypted.ephemPublicKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(encrypted.ephemPublicKey), true)).toString('hex')\r\n    const input = Uint8Array.from(new Buffer(encrypted.ephemPublicKey, 'hex'));\r\n    const keyConvert = publicKeyConvert(input, false)\r\n    // console.log(\"[DECRYPTION] Coverted key: \" + keyConvert);\r\n\r\n    const keyConvertBuffer = new Buffer(keyConvert);\r\n    // console.log(\"[DECRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\r\n    // console.log(keyConvertBuffer);\r\n\r\n    //console.log(keyConvert);\r\n    const uncompressedKey = keyConvertBuffer.toString('hex')\r\n    // console.log(\"[DECRYPTION] Uncompressed key in buffer : \");\r\n    // console.log(uncompressedKey);\r\n\r\n    encrypted.ephemPublicKey = uncompressedKey;\r\n    const twoStripped = privateKey.substring(2)\r\n\r\n    const encryptedBuffer = {\r\n      iv: new Buffer(encrypted.iv, 'hex'),\r\n      ephemPublicKey: new Buffer(encrypted.ephemPublicKey, 'hex'),\r\n      ciphertext: new Buffer(encrypted.ciphertext, 'hex'),\r\n      mac: new Buffer(encrypted.mac, 'hex')\r\n    };\r\n\r\n    return decrypt(\r\n      new Buffer(twoStripped, 'hex'),\r\n      encryptedBuffer\r\n    ).then(decryptedBuffer => decryptedBuffer.toString());\r\n  },\r\n  // Testing of Encryption and Decryption from Public to Private key\r\n  encryptionDecryptionPublicToPrivateTest: async function(privateKey) {\r\n    const startTime = new Date();\r\n    console.log(\"[ENCRYPTION / DECRYPTION TEST STARTED] - \" + startTime);\r\n\r\n    const publicKey = EthCrypto.publicKeyByPrivateKey(privateKey);\r\n    const compressedKey = EthCrypto.publicKey.compress(publicKey); // is String\r\n    //console.log(compressedKey);\r\n\r\n    // const bytesCompKey = Uint8Array.from(compressedKey);\r\n    //console.log(bytesCompKey);\r\n\r\n    const msgToEncrypt = \"PartialStringAS\";\r\n    const msg = await this.encryptWithPublicKey(msgToEncrypt, compressedKey);\r\n    console.log(\"Encryped Message With compressed public key:\" + msg);\r\n\r\n    const encryptionTime = new Date().getTime() - startTime.getTime();\r\n    console.log(\"[ENCRYPTION / DECRYPTION ENCRYPTION DONE] - \" + encryptionTime / 1000 + \" secs\");\r\n\r\n    // Decrypt this message\r\n    const decryptMsg = await this.decryptWithPrivateKey(msg, privateKey);\r\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTED MESSAGE] - '\" + decryptMsg + \"'\");\r\n\r\n    const decryptionTime = new Date().getTime() - startTime.getTime() - encryptionTime;\r\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTION DONE] - \" + decryptionTime / 1000 + \" secs\");\r\n  },\r\n  // To output messge payload if required\r\n  outputMsgPayload: async function(secret, subject, message, calltoaction, imageurl, pkey) {\r\n    // Output AES\r\n    console.log(\"[AES ENCRYTED FORMAT (\" + new Date() + \")\");\r\n    console.log(\"---------------------\");\r\n    console.log(\"secret --> \");\r\n    const secretEncrypted = await this.encryptWithECIES(secret, pkey);\r\n    const asubE = this.encryptWithAES(subject, secret);\r\n    const amsgE = this.encryptWithAES(message, secret);\r\n    const actaE = this.encryptWithAES(calltoaction, secret);\r\n    const aimgE = this.encryptWithAES(imageurl, secret);\r\n\r\n    console.log(secretEncrypted);\r\n    console.log(\"asub --> \");\r\n    console.log(asubE);\r\n    console.log(\"amsg --> \");\r\n    console.log(amsgE);\r\n    console.log(\"acta --> \");\r\n    console.log(actaE);\r\n    console.log(\"aimg --> \");\r\n    console.log(aimgE);\r\n    console.log(\"decrypted secret --> \");\r\n    console.log(await this.decryptWithECIES(secretEncrypted, pkey));\r\n    console.log(\"decrypted asub --> \");\r\n    console.log(this.decryptWithAES(asubE, secret));\r\n    console.log(\"decrypted amsg --> \");\r\n    console.log(this.decryptWithAES(amsgE, secret));\r\n    console.log(\"decrypted acta --> \");\r\n    console.log(this.decryptWithAES(actaE, secret));\r\n    console.log(\"decrypted aimg --> \");\r\n    console.log(this.decryptWithAES(aimgE, secret));\r\n  },\r\n  makeid: function (length) {\r\n     var result           = '[' + new Date().toISOString() + '] ';\r\n     var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n     var charactersLength = characters.length;\r\n     for ( var i = 0; i < length; i++ ) {\r\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n     }\r\n     return result;\r\n  }\r\n};\r\n\r\nexport default CryptoHelper;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled, { css, useTheme } from \"styled-components\";\r\nimport \"react-dropdown/style.css\";\r\nimport {\r\n  Section,\r\n  Content,\r\n  Item,\r\n  H2,\r\n  Span,\r\n  H3,\r\n} from \"../primaries/SharedStyling\";\r\nimport \"react-dropzone-uploader/dist/styles.css\";\r\nimport { Oval } from \"react-loader-spinner\";\r\nimport UploadLogo from \"./UploadLogo\";\r\nimport StakingInfo from \"./StakingInfo\";\r\nimport ChannelInfo from \"./ChannelInfo\";\r\nimport ProcessingInfo from \"./ProcessingInfo\";\r\nimport { MdCallMade, MdError } from \"react-icons/md\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { addresses, abis, envConfig } from \"@project/contracts\";\r\nimport \"./createChannel.css\";\r\nimport { getCAIPObj } from \"helpers/CaipHelper\";\r\nimport { IPFSupload } from \"helpers/IpfsHelper\";\r\nimport useToast from \"hooks/useToast\";\r\n\r\nconst ethers = require(\"ethers\");\r\nconst minStakeFees = 50;\r\nconst networkName = {\r\n  42: \"Ethereum Kovan\",\r\n  1: \"Ethereum Mainnet\",\r\n};\r\n\r\nconst coreChain = \"Ethereum Kovan\";\r\nconst CORE_CHAIN_ID = envConfig.coreContractChain;\r\n\r\n// Create Header\r\nfunction CreateChannel() {\r\n  const { account, library, chainId } = useWeb3React();\r\n  const themes = useTheme();\r\n  const onCoreNetwork = CORE_CHAIN_ID === chainId;\r\n  const [processing, setProcessing] = React.useState(0);\r\n  const [processingInfo, setProcessingInfo] = React.useState(\"\");\r\n\r\n  const [uploadDone, setUploadDone] = React.useState(false);\r\n  const [stakeFeesChoosen, setStakeFeesChoosen] = React.useState(false);\r\n  const [channelInfoDone, setChannelInfoDone] = React.useState(false);\r\n  const [chainDetails, setChainDetails] = React.useState(CORE_CHAIN_ID);\r\n  const [channelName, setChannelName] = React.useState(\"\");\r\n  const [channelAlias, setChannelAlias] = React.useState(\"\");\r\n  const [channelInfo, setChannelInfo] = React.useState(\"\");\r\n  const [channelURL, setChannelURL] = React.useState(\"\");\r\n  const [channelFile, setChannelFile] = React.useState(undefined);\r\n  const [channelStakeFees, setChannelStakeFees] = React.useState(minStakeFees);\r\n  const [daiAmountVal, setDaiAmountVal] = useState(\"\");\r\n  const [txStatus, setTxStatus] = useState(2);\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [progressInfo, setProgressInfo] = React.useState(\"\");\r\n  const [logoInfo, setLogoInfo] = React.useState(\"\");\r\n\r\n  //image upload states\r\n  const [view, setView] = useState(false);\r\n  const [imageSrc, setImageSrc] = useState(undefined);\r\n  const [croppedImage, setCroppedImage] = useState(undefined);\r\n\r\n  const [stepFlow, setStepFlow] = React.useState(1);\r\n  const channelToast = useToast();\r\n  const channelToastNotif = useToast();\r\n\r\n  //checking DAI for user\r\n  React.useEffect(() => {\r\n    if (!onCoreNetwork) return;\r\n    const checkDaiFunc = async () => {\r\n      let checkDaiAmount = new ethers.Contract(\r\n        addresses.dai,\r\n        abis.dai,\r\n        library\r\n      );\r\n\r\n      let value = await checkDaiAmount.allowance(account, addresses.epnscore);\r\n      value = value?.toString();\r\n      const convertedVal = ethers.utils.formatEther(value);\r\n      setDaiAmountVal(convertedVal);\r\n      if (convertedVal >= minStakeFees) {\r\n        setChannelStakeFees(convertedVal);\r\n      }\r\n    };\r\n    checkDaiFunc();\r\n  }, []);\r\n\r\n  // timer\r\n  // React.useEffect(() => {\r\n  //   const timer = setInterval(() => {\r\n  //     setProgress((oldProgress) => {\r\n  //       if (oldProgress === 100) {\r\n  //         return 0;\r\n  //       }\r\n  //       const diff = Math.random() * 10;\r\n  //       return Math.min(oldProgress + diff, 100);\r\n  //     });\r\n  //   }, 500);\r\n\r\n  //   return () => {\r\n  //     clearInterval(timer);\r\n  //   };\r\n  // }, []);\r\n\r\n  const proceed = () => {\r\n    setStepFlow(3);\r\n    setProcessing(0);\r\n    setUploadDone(true);\r\n  };\r\n\r\n  const handleLogoSizeLimitation = (base64) => {\r\n    // Setup Error on higher size of 128px\r\n    var sizeOf = require(\"image-size\");\r\n    var base64Data = base64.split(\";base64,\").pop();\r\n    var img = Buffer.from(base64Data, \"base64\");\r\n    var dimensions = sizeOf(img);\r\n\r\n    // Only proceed if image is equal to or less than 128\r\n    if (dimensions.width > 128 || dimensions.height > 128) {\r\n      console.log(\"Image size check failed... returning\");\r\n      return {\r\n        success: 0,\r\n        info: \"Image size check failed, Image should be 128X128PX\",\r\n      };\r\n    }\r\n\r\n    console.log(base64Data.charAt(0));\r\n    if (base64Data.charAt(0) === \"/\") {\r\n      return {\r\n        success: 1,\r\n        info: \"Image checks passed\",\r\n      };\r\n    } else if (base64Data.charAt(0) === \"i\") {\r\n      return {\r\n        success: 1,\r\n        info: \"Image checks passed\",\r\n      };\r\n    } else {\r\n      return {\r\n        success: 0,\r\n        info: \"Image extension should be jpg or png\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const handleCreateChannel = async (e) => {\r\n    // Check everything in order\r\n    // skip this for now\r\n\r\n    e.preventDefault();\r\n\r\n    if (!channelFile) {\r\n      setLogoInfo(\"Please upload logo of the channel\");\r\n\r\n      return false;\r\n    }\r\n\r\n    // Check complete, start logic\r\n    // setChannelInfoDone(true);\r\n    proceed();\r\n    setProcessing(1);\r\n\r\n    const aliaschainId = chainDetails;\r\n    const aliasAddress = channelAlias;\r\n\r\n    let input = {\r\n      name: channelName,\r\n      info: channelInfo,\r\n      url: channelURL,\r\n      icon: channelFile,\r\n      aliasDetails: getCAIPObj({\r\n        chainId: aliaschainId,\r\n        address: aliasAddress,\r\n      }),\r\n    };\r\n\r\n    console.log(input);\r\n\r\n    input = JSON.stringify(input);\r\n    setProgress(0);\r\n    console.log(`input is ${input}`);\r\n    // const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\r\n    channelToast.showToast(\"Waiting for Confirmation...\");\r\n\r\n    setProcessingInfo(\"Payload Uploaded\");\r\n    setProgressInfo(\r\n      \"Please complete the transaction in your wallet to continue.\"\r\n    );\r\n    setProgress(10);\r\n    // var storagePointer = (storagePointer = await ipfs.add(input));\r\n    let storagePointer = await IPFSupload(input);\r\n    console.log(\"IPFS storagePointer:\", storagePointer);\r\n    // setProcessingInfo(\"Payload Uploaded, Approval to transfer DAI...\");\r\n    //console.log(await ipfs.cat(storagePointer));\r\n\r\n    // Send Transaction\r\n    // First Approve DAI\r\n    var signer = library.getSigner(account);\r\n    console.log(signer);\r\n\r\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\r\n\r\n    // Pick between 50 DAI AND 25K DAI\r\n    const fees = ethers.utils.parseUnits(channelStakeFees.toString(), 18);\r\n\r\n    try {\r\n      if (daiAmountVal < 50.0) {\r\n        var sendTransactionPromise = daiContract.approve(\r\n          addresses.epnscore,\r\n          fees\r\n        );\r\n        const tx = await sendTransactionPromise;\r\n\r\n        console.log(tx);\r\n        console.log(\"waiting for tx to finish\");\r\n        setProgress(30);\r\n\r\n        await library.waitForTransaction(tx.hash);\r\n      }\r\n\r\n      let contract = new ethers.Contract(\r\n        addresses.epnscore,\r\n        abis.epnscore,\r\n        signer\r\n      );\r\n\r\n      const channelType = 2; // Open Channel\r\n      const identity = \"1+\" + storagePointer; // IPFS Storage Type and HASH\r\n      const identityBytes = ethers.utils.toUtf8Bytes(identity);\r\n\r\n      setProgress(50);\r\n    \r\n      const tx = await contract.createChannelWithFees(\r\n        channelType,\r\n        identityBytes,\r\n        fees,\r\n        {\r\n          gasLimit: 1000000,\r\n        }\r\n      );\r\n\r\n      console.log(tx);\r\n      console.log(\"Check: \" + account);\r\n      let txCheck = await library.waitForTransaction(tx.hash);\r\n\r\n      if (txCheck.status === 0) {\r\n        channelToast.updateToast(\r\n          \"Error\",\r\n          `There was an error creating the channel`,\r\n          \"ERROR\",\r\n          (size) => <MdError size={size} color=\"red\" />\r\n        );\r\n\r\n        setProcessing(3);\r\n        setTxStatus(0);\r\n        setStepFlow(2);\r\n        setChannelInfoDone(false);\r\n        setUploadDone(false);\r\n        setTimeout(() => {\r\n          setProcessing(0);\r\n        }, 500);\r\n      } else {\r\n        setProcessing(3);\r\n        setProgress(60);\r\n        setProgressInfo(\"Please wait while we confirm the transaction.\");\r\n        setProcessingInfo(\"Transaction Confirmed\");\r\n        setTimeout(() => {\r\n          setProgress(80);\r\n          setProgressInfo(\r\n            \"Creating your channel, Aligning pixels, adjusting padding... This may take some time.\"\r\n          );\r\n          setProcessingInfo(\"Redirecting... Please do not refresh\");\r\n          setProgress(90);\r\n        }, 2000);\r\n        setTimeout(() => {\r\n          setProgress(100);\r\n          window.location.reload();\r\n        }, 2000);\r\n      }\r\n    } catch (err) {\r\n      console.log(\"hello\", err);\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          channelToast.updateToast(\r\n            \"Error\",\r\n            `User denied message signature.`,\r\n            \"ERROR\",\r\n            (size) => <MdError size={size} color=\"red\" />\r\n          );\r\n          setStepFlow(3);\r\n          setProcessing(0);\r\n          setUploadDone(false);\r\n        } else {\r\n          channelToast.updateToast(\r\n            \"Error\",\r\n            `There was an error creating the channel`,\r\n            \"ERROR\",\r\n            (size) => <MdError size={size} color=\"red\" />\r\n          );\r\n\r\n          console.log(\"Error --> %o\", err);\r\n          console.log({ err });\r\n          setProcessing(3);\r\n          setProgress(0);\r\n          setProgressInfo(\"There was an error creating the Channel\");\r\n          setProcessingInfo(\r\n            \"Kindly Contact support@epns.io to resolve the issue.\"\r\n          );\r\n        }\r\n      };\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (croppedImage) {\r\n      toDataURL(croppedImage, function(dataUrl) {\r\n        const response = handleLogoSizeLimitation(dataUrl);\r\n        if (response.success) {\r\n          setChannelFile(croppedImage);\r\n        }\r\n      });\r\n    } else {\r\n      return \"Nothing\";\r\n    }\r\n  }, [croppedImage]);\r\n\r\n  function toDataURL(url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onload = function() {\r\n      var reader = new FileReader();\r\n      reader.onloadend = function() {\r\n        callback(reader.result);\r\n      };\r\n      reader.readAsDataURL(xhr.response);\r\n    };\r\n    xhr.open(\"GET\", url);\r\n    xhr.responseType = \"blob\";\r\n    xhr.send();\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Section margin=\"0px 0px 40px\">\r\n        <Content padding=\"10px 20px 10px\">\r\n          <Item align=\"center\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.075em\">\r\n              <Span weight=\"400\" size=\"32px\" color={themes.color}>\r\n                Create Your Channel\r\n              </Span>\r\n            </H2>\r\n            <Span\r\n              color=\"#657795\"\r\n              weight=\"400\"\r\n              size=\"16px\"\r\n              textTransform=\"none\"\r\n              textAlign=\"center\"\r\n              spacing=\"0.03em\"\r\n              margin=\"0px 0px\"\r\n            >\r\n              EPNS makes it extremely easy to open and maintain a genuine\r\n              channel of communication with your users.\r\n            </Span>\r\n          </Item>\r\n          {txStatus === 0 && (\r\n            <Body>\r\n              <div>Transaction failed due to one of the following reasons:</div>\r\n              <p>1. There is not enough DAI in your wallet.</p>\r\n              <p>\r\n                2. Gas price increased due to network congestion. Adjust gas\r\n                limit manually.\r\n              </p>\r\n            </Body>\r\n          )}\r\n        </Content>\r\n      </Section>\r\n\r\n      {!onCoreNetwork ? (\r\n        <>\r\n          <TabSpace>\r\n            <p>\r\n              Please select {networkName[envConfig.coreContractChain]} Network\r\n              in your Wallet to create a channel.\r\n            </p>\r\n          </TabSpace>\r\n\r\n          <TextLine text-align=\"center\">\r\n            You will be asked to change your network to the Alias Network after{\" \"}\r\n            <br></br>\r\n            channel creation is complete.\r\n          </TextLine>\r\n\r\n          <TextLink\r\n            href=\"https://docs.epns.io/developers/developer-zone/create-your-notif-channel/alias-on-polygon-network\"\r\n            target=\"_blank\"\r\n          >\r\n            <p>What is an Alias Network?</p>\r\n            <MdCallMade />\r\n          </TextLink>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Section>\r\n            <ItemHere>\r\n              <Tab type={stepFlow >= 1 ? \"active\" : \"inactive\"}>\r\n                <div>Staking Info</div>\r\n                <Step type={stepFlow >= 1 ? \"active\" : \"inactive\"} />\r\n              </Tab>\r\n              <Tab type={stepFlow >= 2 ? \"active\" : \"inactive\"}>\r\n                <div>Channel Info</div>\r\n                <Step type={stepFlow >= 2 ? \"active\" : \"inactive\"} />\r\n              </Tab>\r\n              <Tab type={stepFlow >= 3 ? \"active\" : \"inactive\"}>\r\n                <div>Upload Logo</div>\r\n                <Step type={stepFlow >= 3 ? \"active\" : \"inactive\"} />\r\n              </Tab>\r\n              <Line />\r\n            </ItemHere>\r\n          </Section>\r\n\r\n          {/* Stake Fees Section */}\r\n          {!stakeFeesChoosen && (\r\n            <StakingInfo\r\n              channelStakeFees={channelStakeFees}\r\n              setStakeFeesChoosen={setStakeFeesChoosen}\r\n              setStepFlow={setStepFlow}\r\n              setProcessingInfo={setProcessingInfo}\r\n            />\r\n          )}\r\n\r\n          {/* Channel Entry */}\r\n          {stakeFeesChoosen && !channelInfoDone && (\r\n            <ChannelInfo\r\n              setStepFlow={setStepFlow}\r\n              channelName={channelName}\r\n              channelAlias={channelAlias}\r\n              channelInfo={channelInfo}\r\n              channelURL={channelURL}\r\n              chainDetails={chainDetails}\r\n              setChannelAlias={setChannelAlias}\r\n              setChainDetails={setChainDetails}\r\n              setChannelInfo={setChannelInfo}\r\n              setChannelName={setChannelName}\r\n              setChannelURL={setChannelURL}\r\n              setProcessing={setProcessing}\r\n              setProcessingInfo={setProcessingInfo}\r\n              setChannelInfoDone={setChannelInfoDone}\r\n              setTxStatus={setTxStatus}\r\n            />\r\n          )}\r\n\r\n          {/* Image Upload Section */}\r\n          {!uploadDone && channelInfoDone && stakeFeesChoosen && (\r\n            <UploadLogo\r\n              croppedImage={croppedImage}\r\n              view={view}\r\n              imageSrc={imageSrc}\r\n              processing={processing}\r\n              setCroppedImage={setCroppedImage}\r\n              setView={setView}\r\n              setImageSrc={setImageSrc}\r\n              setProcessingInfo={setProcessingInfo}\r\n              handleCreateChannel={handleCreateChannel}\r\n              logoInfo={logoInfo}\r\n            />\r\n          )}\r\n\r\n          {/* Channel Setup Progress */}\r\n          {(processing === 1 || processing === 3) && (\r\n            <ProcessingInfo\r\n              progress={progress}\r\n              progressInfo={progressInfo}\r\n              processingInfo={processingInfo}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Step = styled.div`\r\n  height: 5px;\r\n  width: 100%;\r\n  background: #cfd7e4;\r\n  border-radius: 13px;\r\n\r\n  ${({ type }) =>\r\n    type === \"active\" &&\r\n    css`\r\n      background: #e20880;\r\n    `};\r\n`;\r\n\r\nconst Line = styled.div`\r\n  position: absolute;\r\n  height: 5px;\r\n  background: #f1f1f1;\r\n  right: 0;\r\n  left: 0;\r\n  margin: 0px 10px;\r\n  z-index: -1;\r\n`;\r\n\r\nconst TabSpace = styled.div`\r\n  width: 60%;\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 167px;\r\n  border-radius: 20px;\r\n  background-color: #f4f5fa;\r\n  margin: 0 auto;\r\n  text-transform: none;\r\n  margin-top: 60px;\r\n  color: #cf1c84;\r\n  align-items: center;\r\n  line-height: 24px;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  p {\r\n    padding: 0 200px;\r\n    text-align: center;\r\n    @media (max-width: 600px) {\r\n      padding: 0 10px;\r\n    }\r\n    @media (max-width: 1224px) {\r\n      padding: 0 50px;\r\n    }\r\n  }\r\n  @media (max-width: 600px) {\r\n    font-size: 12px;\r\n    height: auto;\r\n  }\r\n  @media (max-width: 1224px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst TextLine = styled.p`\r\n  text-transform: none;\r\n  margin-top: 60px;\r\n  color: #657795;\r\n  line-height: 21px;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst TextLink = styled.a`\r\n  text-transform: none;\r\n  margin-top: 30px;\r\n  color: #cf1c84;\r\n  line-height: 21px;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst Tab = styled.div`\r\n  position: relative;\r\n  width: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n  color: #657795;\r\n  div {\r\n    margin: 5px 0px;\r\n    font-family: \"Manrope\";\r\n    font-style: normal;\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    width: 100%;\r\n  }\r\n\r\n  ${({ type }) =>\r\n    type === \"active\" &&\r\n    css`\r\n      color: #e20880;\r\n    `};\r\n`;\r\n\r\nconst ItemHere = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  @media (max-width: 600px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  @media (max-width: 1224px) {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst Body = styled.div`\r\n  margin: 10px auto 0px auto;\r\n  width: 55%;\r\n  padding: 30px;\r\n  background-color: #f5f5fa;\r\n  border-radius: 20px;\r\n  div {\r\n    text-align: center;\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    line-height: 21px;\r\n    text-align: center;\r\n    color: #657795;\r\n  }\r\n  p {\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n    color: #cf1c84;\r\n  }\r\n  @media (max-width: 600px) {\r\n    width: 95%;\r\n  }\r\n  @media (max-width: 1224px) {\r\n    width: 75%;\r\n  }\r\n`;\r\nexport default CreateChannel;\r\n","import React, { Fragment } from \"react\";\r\nimport { Button,Item,Span } from \"primaries/SharedStyling\";\r\nimport styled from \"styled-components\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport UtilityHelper from 'helpers/UtilityHelper';\r\nimport { ethers } from \"ethers\";\r\nimport { addresses, abis } from \"@project/contracts\";\r\n\r\nconst StakingInfo = ({channelStakeFees, setStakeFeesChoosen, setStepFlow,setProcessingInfo}) => {\r\n  const { chainId, library, account } = useWeb3React();\r\n  \r\n  //mint Dai\r\n  const mintDai = async () => {\r\n    try {\r\n      var signer = library.getSigner(account);\r\n      let daiContract = new ethers.Contract(addresses.dai, abis.dai, signer);\r\n      console.log({\r\n        daiContract,\r\n      });\r\n      console.log(1);\r\n      let daiAmount = 1000;\r\n      const amount = ethers.utils.parseUnits(daiAmount.toString(), 18);\r\n      console.log(2);\r\n      var mintTransactionPromise = daiContract.mint(amount);\r\n      console.log(3);\r\n      const tx = await mintTransactionPromise;\r\n      console.log(tx);\r\n      await library.waitForTransaction(tx.hash);\r\n      console.log(4);\r\n      setProcessingInfo(\"1000 Dai minted successfully!\");\r\n      console.log(\"Transaction Completed\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Content padding=\"0px 0px 0px 0px\"> */}\r\n        <Body>\r\n          <TabSpace>\r\n            <p>\r\n              Amount for Staking\r\n            </p>\r\n\r\n            <b>\r\n             {channelStakeFees} DAI\r\n            </b>\r\n          </TabSpace>\r\n\r\n\r\n          <TextSpace>\r\n              <Span color=\"#657795\" size=\"14px\" weight=\"500\" spacing=\"-0.011em\" line=\"30px\">Make sure you have sufficient balance before moving to the next steps.</Span>\r\n\r\n              <AnchorLink href='https://faucet.paradigm.xyz/' target=\"_blank\">ETH Faucet</AnchorLink>\r\n\r\n              {!UtilityHelper.isMainnet(chainId) ? (\r\n              <Minter\r\n                onClick={() => {\r\n                  mintDai();\r\n                }}\r\n              >\r\n                  <PoolShare>Get Free DAI for Channel</PoolShare>\r\n              </Minter>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          </TextSpace>\r\n\r\n        <Item width=\"12.2em\" self=\"stretch\" align=\"stretch\" margin=\"100px auto 50px auto\">\r\n          <Button\r\n            bg=\"#e20880\"\r\n            color=\"#fff\"\r\n            flex=\"1\"\r\n            radius=\"15px\"\r\n            padding=\"20px 10px\"\r\n            onClick={() => {\r\n              setStakeFeesChoosen(true);\r\n              setStepFlow(2);\r\n            }}\r\n          >\r\n            <Span\r\n              color=\"#fff\"\r\n              weight=\"600\"\r\n              textTransform=\"none\"\r\n              line=\"22px\"\r\n              size=\"16px\"\r\n            >\r\n              Next\r\n            </Span>\r\n          </Button>\r\n        </Item>\r\n        </Body>\r\n      {/* </Content> */}\r\n    </Fragment>\r\n  );\r\n};\r\nconst TabSpace = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 100px;\r\n  border-radius: 20px;\r\n  background-color: #f4f5fa;\r\n  margin-top: 20px;\r\n  align-items: center;\r\n  p {\r\n    text-align: center;\r\n    color: #1E1E1E;\r\n    font-weight: 500;\r\n    font-size: 20px;\r\n    letter-spacing: -0.011em;\r\n    margin-left:50px;\r\n    @media (max-width: 600px) {\r\n    margin-left:20px;\r\n    font-size: 14px;\r\n    }\r\n  }\r\n  b {\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: 26px;\r\n    line-height: 150%;\r\n    text-align: right;\r\n    letter-spacing: -0.019em;\r\n    color: #CF1C84;\r\n    margin-right:50px;\r\n    @media (max-width: 600px) {\r\n    margin-right:20px;\r\n    font-size: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TextSpace = styled.div`\r\n  width: 97%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  margin-top: 40px;\r\n  align-items: flex-start;\r\n  @media (max-width: 600px) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n  }\r\n  @media (max-width: 1224px) {\r\n    width: 100%; \r\n  }\r\n`;\r\n\r\nconst AnchorLink = styled.a`\r\n  text-decoration: none;\r\n  text-transform: none;\r\n  color: #cf1c84;\r\n  line-height: 24px;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  // width:15em;\r\n  white-space: nowrap;\r\n  margin: 0 2em;\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n  @media (max-width: 600px) {\r\n    margin-top:1em;\r\n  }\r\n`;\r\n\r\nconst Body = styled.div`\r\n  margin: 0px auto;\r\n  width: 55%; \r\n  @media (max-width: 600px) {\r\n    width: 95%; \r\n  }\r\n  @media (max-width: 1224px) {\r\n    width: 75%; \r\n  }\r\n`\r\n\r\nconst Minter = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Pool = styled.div`\r\n  margin: 0px 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst ChannelMetaBox = styled.label`\r\n  color: #fff;\r\n`;\r\n\r\nconst PoolShare = styled(ChannelMetaBox)`\r\n  text-decoration: none;\r\n  text-transform: none;\r\n  color: #cf1c84;\r\n  line-height: 24px;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  // width:16em;\r\n  margin: 0 0 0 2em;\r\n  cursor: pointer;\r\n  white-space: nowrap;\r\n  text-decoration: none;\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n  @media (max-width: 600px) {\r\n    margin-top:1em;\r\n  }\r\n`;\r\n\r\nexport default StakingInfo;","import React,{useState} from \"react\";\r\nimport { Button, Content, FormSubmision, H3, Input, Item, ItemH, P, Section, Span, TextField } from \"primaries/SharedStyling\";\r\nimport { FiLink } from \"react-icons/fi\";\r\nimport styled, { useTheme } from \"styled-components\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport { Oval } from \"react-loader-spinner\";\r\nimport \"./createChannel.css\";\r\nimport { envConfig } from \"@project/contracts\";\r\nimport { aliasChainIdsMapping, networkName } from \"helpers/UtilityHelper\";\r\n\r\nconst coreChainId = envConfig.coreContractChain;\r\nconst aliasChainId = aliasChainIdsMapping[coreChainId];\r\n\r\nconst ALIAS_CHAINS = [\r\n  { value: coreChainId, label: networkName[coreChainId] },\r\n  { value: aliasChainId, label: networkName[aliasChainId] },\r\n];\r\n\r\nconst ChannelInfo = ({\r\n  channelName,\r\n  channelAlias,\r\n  channelInfo,\r\n  channelURL,\r\n  chainDetails,\r\n  setChannelAlias,\r\n  setChainDetails,\r\n  setChannelInfo,\r\n  setChannelName,\r\n  setChannelURL,\r\n  setStepFlow,\r\n  setProcessingInfo,\r\n  setProcessing,\r\n  setChannelInfoDone,\r\n  setTxStatus\r\n}) => {\r\n  const themes = useTheme();\r\n  const [info,setInfo] = useState(\"\")\r\n\r\n  const isEmpty = (field) => {\r\n    if (field.trim().length == 0) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const isAllFilled = () => {\r\n    setInfo(\"\")\r\n    if (\r\n      isEmpty(channelName) ||\r\n      isEmpty(channelInfo) ||\r\n      isEmpty(channelURL) ||\r\n      (isEmpty(channelAlias) && chainDetails !== coreChainId)\r\n    ) {\r\n      setInfo(\"Channel Fields are Empty! Please retry!\");\r\n\r\n      // setTimeout(() => {\r\n      //   setProcessing(2);\r\n      //   setProcessingInfo(\"\");\r\n      // }, 5000);\r\n\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  return (\r\n    <Section>\r\n      <Body>\r\n\r\n        {/* <FormSubmision\r\n          flex=\"1\"\r\n          direction=\"column\"\r\n          margin=\"0px\"\r\n          justify=\"center\"\r\n          size=\"1.1rem\"\r\n          onSubmit={handleCreateChannel}\r\n        > */}\r\n          <Label style={{color:themes.color}}>Channel Name & Network</Label>\r\n\r\n          <Item\r\n            margin=\"7px 0px 0px 0px\"\r\n            flex=\"1\"\r\n            self=\"stretch\"\r\n            align=\"stretch\"\r\n            border='1px solid #BAC4D6'\r\n            radius='12px 12px 0px 0px'\r\n          >\r\n              <Input\r\n                required\r\n                // placeholder=\"Your Channel Name\"\r\n                maxlength=\"40\"\r\n                flex=\"1\"\r\n                padding=\"12px\"\r\n                weight=\"400\"\r\n                size=\"16px\"\r\n                bg=\"white\"\r\n                radius='12px 12px 0px 0px'\r\n                height=\"25px\"\r\n                value={channelName}\r\n                onChange={(e) => {\r\n                  setChannelName(e.target.value);\r\n                }}\r\n              />\r\n\r\n           \r\n          </Item>\r\n          <Item\r\n            flex=\"1\"\r\n            self=\"stretch\"\r\n            align=\"stretch\"\r\n          > \r\n            \r\n            {/* dropdown */}\r\n            <DropdownStyledParent>\r\n              <DropdownStyled\r\n                options={ALIAS_CHAINS}\r\n                onChange={(option) => {\r\n                    setChainDetails(option.value);\r\n                    console.log(option);\r\n                }}\r\n                value={networkName[chainDetails]}\r\n              />\r\n            </DropdownStyledParent>\r\n\r\n          {/* <span\r\n            className=\"imgSpan\"\r\n            data-tooltip=\"When sending notifications to Non-Ethereum Chains, the Channel Alias address will act as a native representation of your Channel on that blockchain.\"\r\n          >\r\n            <img\r\n              className=\"iImage\"\r\n              src=\"/svg/info.svg\"\r\n              style={{\r\n                width: \"20px\",\r\n                height: \"20px\",\r\n                marginTop: \"0px\",\r\n                marginBottom: \"-2px\",\r\n              }}\r\n            />\r\n\r\n              </span>  */}\r\n          </Item>\r\n            \r\n          {chainDetails != coreChainId &&\r\n          (<Item \r\n                margin=\"30px 0px 0px 0px\"\r\n                flex=\"1\"\r\n                self=\"stretch\"\r\n                align=\"stretch\">\r\n              <Label style={{color:themes.color}}>Channel Alias address</Label>\r\n              <Input\r\n                required\r\n                // placeholder=\"Your Channel Address\"\r\n                maxlength=\"40\"\r\n                flex=\"1\"\r\n                padding=\"12px\"\r\n                weight=\"400\"\r\n                size=\"16px\"\r\n                bg=\"white\"\r\n                height=\"25px\"\r\n                margin=\"7px 0px 0px 0px\"\r\n                border=\"1px solid #BAC4D6\"\r\n                focusBorder=\"1px solid #657795\"\r\n                radius=\"12px\"\r\n                disabled={\r\n                  chainDetails === \"\" || chainDetails === coreChainId\r\n                    ? true\r\n                    : false\r\n                }\r\n                visibility={\r\n                  chainDetails === coreChainId ? \"hidden\" : \"visible\"\r\n                }\r\n                value={channelAlias}\r\n                onChange={(e) => {\r\n                  setChannelAlias(e.target.value);\r\n                }}\r\n              />\r\n              <Span\r\n                  size=\"13px\"\r\n                  margin=\"7px 0px 0px 0px\"\r\n                  color=\"#657795\"\r\n                >\r\n                  Make sure you own this address as verification will take place.\r\n                </Span>\r\n          </Item>)}\r\n            \r\n\r\n          <Item\r\n            margin=\"30px 0px 0px 00px\"\r\n            flex=\"1\"\r\n            self=\"stretch\"\r\n            align=\"stretch\"\r\n            style={{marginTop: `${chainDetails === coreChainId ? \"55px\" : \"20px\"}`, position: \"relative\"}}\r\n          >\r\n            <Item display='flex' direction=\"row\" align=\"center\" flex=\"1\" self=\"stretch\" justify=\"space-between\">\r\n              <Label style={{color:themes.color}}>Channel Description</Label>\r\n              <Span color=\"#657795\" size=\"13px\" margin=\"0px 10px 0px 0px\" weight='700'>{250 - channelInfo.length}</Span>\r\n            </Item>\r\n            <TextField\r\n              required\r\n              // placeholder=\"Your Channel's Short Description (250 Characters)\"\r\n              rows=\"4\"\r\n              maxlength=\"250\"\r\n              padding=\"12px\"\r\n              weight=\"400\"\r\n              margin=\"7px 0px 0px 0px\"\r\n              border=\"1px solid #BAC4D6\"\r\n              focusBorder=\"1px solid #657795\"\r\n              radius=\"12px\"\r\n              bg=\"#fff\"\r\n              value={channelInfo}\r\n              onChange={(e) => {\r\n                setChannelInfo(e.target.value.slice(0, 250));\r\n              }}\r\n              autocomplete=\"off\"\r\n            />\r\n            <Span\r\n                  size=\"13px\"\r\n                  margin=\"7px 0px 0px 0px\"\r\n                  color=\"#657795\"\r\n                >\r\n                  Brief description of your channel.\r\n                </Span>\r\n          </Item>\r\n\r\n          <Item \r\n                margin=\"30px 0px 0px 0px\"\r\n                flex=\"1\"\r\n                self=\"stretch\"\r\n                align=\"stretch\">\r\n              <Label style={{color:themes.color}}>Channel Website URL</Label>\r\n              <Input\r\n                required\r\n                // placeholder=\"Your Channel Address\"\r\n                maxlength=\"40\"\r\n                flex=\"1\"\r\n                padding=\"12px\"\r\n                weight=\"400\"\r\n                size=\"16px\"\r\n                bg=\"white\"\r\n                height=\"25px\"\r\n                margin=\"7px 0px 0px 0px\"\r\n                border=\"1px solid #BAC4D6;\"\r\n                focusBorder=\"1px solid #657795\"\r\n                radius=\"12px\"\r\n                value={channelURL}\r\n                onChange={(e) => {\r\n                  setChannelURL(e.target.value);\r\n                }}\r\n              />\r\n          </Item>\r\n\r\n          {info?.length > 0 && (<Item \r\n                margin=\"30px 0px 30px 0px\"\r\n                flex=\"1\"\r\n                padding=\"10px 5px\"\r\n                radius=\"10px\"\r\n                bg=\"#F5F5FA\">\r\n                  <div style={{color:'#CF1C84'}}>{info}</div>\r\n                </Item>)}\r\n        \r\n          <Item width=\"12.2em\" self=\"stretch\" align=\"stretch\" margin=\"70px auto 50px auto\">\r\n            <Button\r\n              bg=\"#CF1C84\"\r\n              color=\"#fff\"\r\n              flex=\"1\"\r\n              radius=\"15px\"\r\n              padding=\"20px 10px\"\r\n              onClick={() => {\r\n                if (!isAllFilled()) return;\r\n                setTxStatus(2)\r\n                setChannelInfoDone(true);\r\n                setStepFlow(3);\r\n              }}\r\n            >\r\n               <Span\r\n              color=\"#fff\"\r\n              weight=\"600\"\r\n              textTransform=\"none\"\r\n              line=\"22px\"\r\n              size=\"16px\"\r\n            >\r\n              Next\r\n            </Span>\r\n            </Button>\r\n          </Item>\r\n\r\n        {/* <Item\r\n            margin=\"15px 0px 0px 0px\"\r\n            flex=\"1\"\r\n            self=\"stretch\"\r\n            align=\"stretch\"\r\n          >\r\n            <Button\r\n              bg=\"#e20880\"\r\n              color=\"#fff\"\r\n              flex=\"1\"\r\n              radius=\"0px\"\r\n              padding=\"20px 10px\"\r\n              disabled={processing == 1 ? true : false}\r\n            >\r\n              {processing == 1 && (\r\n                <Oval\r\n                  color=\"#fff\"\r\n                  height={24}\r\n                  width={24}\r\n                />\r\n              )}\r\n              {processing != 1 && (\r\n                <Input\r\n                  cursor=\"hand\"\r\n                  textTransform=\"uppercase\"\r\n                  color=\"#fff\"\r\n                  weight=\"400\"\r\n                  size=\"0.8em\"\r\n                  spacing=\"0.2em\"\r\n                  type=\"submit\"\r\n                  value=\"Setup Channel\"\r\n                />\r\n              )}\r\n            </Button>\r\n          </Item> */}\r\n        {/* </FormSubmision> */}\r\n      </Body>\r\n    </Section>\r\n  );\r\n};\r\n\r\nconst InputDiv = styled.div`\r\n  display: ${(props) => props.display || \"flex\"};\r\n  flex: 1;\r\n  border: ${(props) => props.border || \"none\"};\r\n  border-bottom: ${(props) => props.borderBottom || \"none\"};\r\n  margin-bottom: ${(props) => props.marginBottom || \"none\"};\r\n  width: ${(props) => props.width || \"none\"};\r\n  visibility: ${(props) => props.visibility || \"\"};\r\n`;\r\n\r\nconst SpanR = styled.div`\r\n  position: absolute;\r\n  bottom: 0px;\r\n  right: 0.8rem;\r\n  color: white;\r\n  z-index: 1;\r\n  margin-bottom: 5px;\r\n  padding: 5px;\r\n  background: #e20880;\r\n  border-radius: 20px;\r\n  align-items: center;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Label = styled.div`\r\n  font-family: 'Manrope';\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 14px;\r\n  line-height: 21px;\r\n  letter-spacing: -0.011em;\r\n  color: #1E1E1E;\r\n`;\r\n\r\nconst DropdownStyledParent = styled.div`\r\nflex:1;\r\n.is-open {\r\n    margin-bottom: 50px;\r\n}\r\n`\r\n\r\nconst DropdownStyled = styled(Dropdown)`\r\n  .Dropdown-control {\r\n      background-color: white;\r\n      color: #000;\r\n      border: 1px solid #BAC4D6;\r\n      border-radius: 0px 0px 12px 12px;\r\n      border-top:1px solid transparent;\r\n      flex:1;\r\n      outline: none;\r\n      height: 50px;\r\n      display: flex;\r\n      align-items: center;\r\n  }\r\n  .Dropdown-arrow {\r\n      top: 20px;\r\n      bottom: 0;\r\n      border-color: #f #000 #000;\r\n  }\r\n  .Dropdown-menu {\r\n    border-color: #BAC4D6;\r\n    border-radius: 12px;\r\n      .is-selected {\r\n      background-color: #D00775;\r\n      color:#fff;\r\n    }\r\n  }\r\n \r\n  .Dropdown-option {\r\n      background-color: #fff;\r\n      color: #000;\r\n  }\r\n  .Dropdown-option:hover {\r\n      background-color: #D00775;\r\n      color: #000;\r\n  }\r\n`\r\n\r\nconst Body = styled.div`\r\n  margin: 40px auto 0px auto;\r\n  width: 55%; \r\n  @media (max-width: 600px) {\r\n    width: 100%%; \r\n  }\r\n  @media (max-width: 1224px) {\r\n    width: 75%; \r\n  }\r\n`;\r\n\r\nexport default ChannelInfo;","import { H3, Item, Section } from \"primaries/SharedStyling\";\r\nimport React from \"react\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport styled, { css, useTheme } from \"styled-components\";\r\nimport { themeDark } from \"config/Themization\";\r\n\r\nconst ProcessingInfo = ({ progress, processingInfo, progressInfo }) => {\r\n  const themes = useTheme();\r\n\r\n  return (\r\n    <Section>\r\n      <TabSpace>\r\n        <p>{progressInfo}</p>\r\n      </TabSpace>\r\n\r\n      <LinearProgress\r\n        sx={{\r\n          width: \"30em\",\r\n          margin: \"50px auto\",\r\n          color: \"#cf1c84\",\r\n          height: \"6px\",\r\n          borderRadius: \"20px\",\r\n          [\"@media (max-width:600px)\"]: {\r\n            width: \"10em\",\r\n          },\r\n        }}\r\n        color=\"inherit\"\r\n        variant=\"determinate\"\r\n        value={progress}\r\n      />\r\n\r\n      <Item display=\"flex\" direction=\"row\" align=\"center\" margin=\"20px 0px\">\r\n        <FadeLoader color=\"#cf1c84\" loading={true} height={13} width={2.5} />\r\n        <H3\r\n          margin=\"auto 15px\"\r\n          family=\"Manrope\"\r\n          textTransform=\"none\"\r\n          color={themes.color}\r\n          size=\"16px\"\r\n          weight=\"500\"\r\n        >\r\n          {processingInfo}\r\n        </H3>\r\n      </Item>\r\n    </Section>\r\n  );\r\n};\r\n\r\nconst TabSpace = styled.div`\r\n  width: 60%;\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 167px;\r\n  border-radius: 20px;\r\n  background-color: #f4f5fa;\r\n  margin: 0 auto;\r\n  text-transform: none;\r\n  margin-top: 60px;\r\n  color: #cf1c84;\r\n  align-items: center;\r\n  line-height: 24px;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  p {\r\n    padding: 0 200px;\r\n    text-align: center;\r\n    @media (max-width: 600px) {\r\n      padding: 0 10px;\r\n    }\r\n    @media (max-width: 1224px) {\r\n      padding: 0 50px;\r\n    }\r\n  }\r\n  @media (max-width: 600px) {\r\n    font-size: 12px;\r\n    height: auto;\r\n  }\r\n  @media (max-width: 1224px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport default ProcessingInfo;\r\n","import { utils, BigNumber} from \"ethers\";\r\nconst claims = require(\"config/airdrop/claims.json\")\r\n\r\n// Airdrop Helper Functions\r\nconst AirdropHelper = {\r\n    combinedHash : (first, second) => {\r\n        if (!first) {\r\n          return second\r\n        }\r\n        if (!second) {\r\n          return first\r\n        }\r\n      \r\n        return Buffer.from(\r\n          utils.solidityKeccak256(['bytes32', 'bytes32'], [first, second].sort(Buffer.compare)).slice(2),\r\n          'hex'\r\n        )\r\n    },\r\n      \r\n    toNode : (index, account, amount) => {\r\n    const pairHex = utils.solidityKeccak256(['uint256', 'address', 'uint256'], [index, account, amount])\r\n    return Buffer.from(pairHex.slice(2), 'hex')\r\n    },\r\n      \r\n    verifyProof : (\r\n    index,\r\n    account,\r\n    amount,\r\n    proof,\r\n    root\r\n    ) => {\r\n    let pair = AirdropHelper.toNode(index, account, amount)\r\n    for (const item of proof) {\r\n        pair = AirdropHelper.combinedHash(pair, item)\r\n    }\r\n    \r\n    return pair.equals(root)\r\n    },\r\n      \r\n    getNextLayer : (elements) => {\r\n    return elements.reduce((layer, el, idx, arr) => {\r\n        if (idx % 2 === 0) {\r\n        // Hash the current element with its pair element\r\n        layer.push(AirdropHelper.combinedHash(el, arr[idx + 1]))\r\n        }\r\n    \r\n        return layer\r\n    }, [])\r\n    },\r\n      \r\n    getRoot : (balances) => {\r\n    let nodes = balances\r\n        .map(({ account, amount, index }) => AirdropHelper.toNode(index, account, amount))\r\n        // sort by lexicographical order\r\n        .sort(Buffer.compare)\r\n    \r\n    // deduplicate any eleents\r\n    nodes = nodes.filter((el, idx) => {\r\n        return idx === 0 || !nodes[idx - 1].equals(el)\r\n    })\r\n    \r\n    const layers = []\r\n    layers.push(nodes)\r\n    \r\n    // Get next layer until we reach the root\r\n    while (layers[layers.length - 1].length > 1) {\r\n        layers.push(AirdropHelper.getNextLayer(layers[layers.length - 1]))\r\n    }\r\n    \r\n    return layers[layers.length - 1][0]\r\n    },\r\n\r\n\r\n    verifyAddress: async (user, contract) => {\r\n        const merkleRootHex = claims.merkleRoot\r\n        const merkleRoot = Buffer.from(merkleRootHex.slice(2), 'hex')\r\n        if(claims.claims[user]){\r\n            const claim = claims.claims[user]\r\n        const proof = claim.proof.map((p) => Buffer.from(p.slice(2), 'hex'))\r\n        const verified = (AirdropHelper.verifyProof(claim.index, user, claim.amount, proof, merkleRoot))\r\n        let txPromise = await contract.isClaimed(claim.index)\r\n        const isClaimed = await txPromise\r\n        const claimable = !isClaimed\r\n        const BNamount = BigNumber.from(claim.amount)\r\n        const amount = BNamount.toNumber()\r\n        // const amount = ethers.utils.parseEther(num)\r\n        return({ index: claim.index, account: user, amount, proof, merkleRoot, verified, claimable})\r\n        }\r\n        else\r\n        return({verified: false})\r\n    },\r\n\r\n  \r\n\r\n}\r\n\r\nexport default AirdropHelper;\r\n","import React, {\r\n  forwardRef,\r\n  Fragment,\r\n  useCallback,\r\n  useImperativeHandle,\r\n  useState,\r\n} from \"react\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport styledComponents from \"styled-components\";\r\nimport Resizer from \"react-image-file-resizer\";\r\n\r\nconst ImageClipper = forwardRef((props, ref) => {\r\n  //   const [imageSrc, setImageSrc] = useState(null);\r\n  const { imageSrc, onImageCropped } = props;\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n  const [zoom, setZoom] = useState(1);\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\r\n  const [croppedImage, setCroppedImage] = useState(null);\r\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n    setCroppedAreaPixels(croppedAreaPixels);\r\n  }, []);\r\n  //   console.log(\"here\", { imageSrc });\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    async showCroppedImage() {\r\n      try {\r\n        if (imageSrc) {\r\n          const croppedImage = await getCroppedImg(imageSrc, croppedAreaPixels);\r\n          const image = await resizeFile(croppedImage);\r\n          onImageCropped(image);\r\n        } else {\r\n          return \"Nothing\";\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n  }));\r\n\r\n  function toDataURL(url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onload = function() {\r\n      var reader = new FileReader();\r\n      reader.onloadend = function() {\r\n        callback(reader.result);\r\n      };\r\n      reader.readAsDataURL(xhr.response);\r\n    };\r\n    xhr.open(\"GET\", url);\r\n    xhr.responseType = \"blob\";\r\n    xhr.send();\r\n  }\r\n\r\n  async function getCroppedImg(imageSrc, pixelCrop) {\r\n    const image = await createImage(imageSrc);\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = pixelCrop.width;\r\n    canvas.height = pixelCrop.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const fileName = \"none.jpg\";\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      pixelCrop.x,\r\n      pixelCrop.y,\r\n      pixelCrop.width,\r\n      pixelCrop.height,\r\n      0,\r\n      0,\r\n      pixelCrop.width,\r\n      pixelCrop.height\r\n    );\r\n\r\n    // As Base64 string\r\n    // return canvas.toDataURL('image/jpeg');\r\n\r\n    // As a blob\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob((file) => {\r\n        //   resolve(URL.createObjectURL(file));\r\n        resolve(\r\n          new File([file], fileName, {\r\n            type: \"image/jpeg\",\r\n            lastModified: Date.now(),\r\n          })\r\n        );\r\n      }, \"image/jpeg\");\r\n    });\r\n  }\r\n\r\n  const resizeFile = (file) =>\r\n    new Promise((resolve) => {\r\n      Resizer.imageFileResizer(\r\n        file,\r\n        128,\r\n        128,\r\n        \"JPEG\",\r\n        80,\r\n        0,\r\n        (uri) => {\r\n          resolve(uri);\r\n          setCroppedImage(uri);\r\n        },\r\n        \"base64\"\r\n      );\r\n    });\r\n\r\n  const createImage = (url) =>\r\n    new Promise((resolve, reject) => {\r\n      const image = new Image();\r\n      image.addEventListener(\"load\", () => resolve(image));\r\n      image.addEventListener(\"error\", (error) => reject(error));\r\n      image.setAttribute(\"crossOrigin\", \"anonymous\"); // needed to avoid cross-origin issues on CodeSandbox\r\n      image.src = url;\r\n    });\r\n\r\n  const onZoomChange = (zoom) => {\r\n    setZoom(zoom);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Container>\r\n        <Cropper\r\n          image={imageSrc}\r\n          crop={crop}\r\n          zoom={zoom}\r\n          aspect={1}\r\n          onCropChange={setCrop}\r\n          onCropComplete={onCropComplete}\r\n          onZoomChange={onZoomChange}\r\n          // objectFit=\"vertical-cover\"\r\n          style={{\r\n            containerStyle: {\r\n              width: \"250px\",\r\n              height: \"250px\",\r\n              position: \"relative\",\r\n              borderRadius: \"12px\",\r\n            },\r\n          }}\r\n        />\r\n      </Container>\r\n\r\n      {/* <Button onClick={() => showCroppedImage()}>Run</Button> */}\r\n    </Fragment>\r\n  );\r\n});\r\n\r\nconst Container = styledComponents.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  `;\r\n\r\nexport default ImageClipper;\r\n","var _path;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgImage = function SvgImage(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"svg\",\n    stroke: \"currentColor\",\n    fill: \"none\",\n    viewBox: \"0 0 48 48\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\",\n    strokeWidth: \"{2} \",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgImage, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Image.ae07082a.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useRef } from \"react\";\r\nimport UtilityHelper from 'helpers/UtilityHelper';\r\nimport {\r\n  Section,\r\n  Content,\r\n  Item,\r\n  H3,\r\n  Button,\r\n  Input,\r\n  FormSubmision,\r\n  Span\r\n} from \"primaries/SharedStyling\";\r\nimport ImageClipper from \"primaries/ImageClipper\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport styled from \"styled-components\";\r\nimport { ethers } from \"ethers\";\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { ReactComponent as ImageIcon } from \"../assets/Image.svg\";\r\nimport { Oval } from \"react-loader-spinner\";\r\nimport {BsCloudUpload} from 'react-icons/bs'\r\n\r\nconst UploadLogo = ({\r\n  croppedImage,\r\n  view,\r\n  imageSrc,\r\n  processing,\r\n  setCroppedImage,\r\n  setView,\r\n  setImageSrc,\r\n  setProcessingInfo,\r\n  handleCreateChannel,\r\n  logoInfo\r\n}) => {\r\n  const childRef = useRef();\r\n  const { chainId, library, account } = useWeb3React();\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleOnDrop = (e) => {\r\n    //prevent the browser from opening the image\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    //let's grab the image file\r\n    handleFile(e.dataTransfer, \"transfer\");\r\n  };\r\n\r\n  const handleFile = async (file, path) => {\r\n    setCroppedImage(undefined);\r\n    setView(true);\r\n\r\n    //you can carry out any file validations here...\r\n    if (file?.files[0]) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(file?.files[0]);\r\n\r\n      reader.onloadend = function (e) {\r\n        setImageSrc(reader.result);\r\n      };\r\n    } else {\r\n      return \"Nothing....\";\r\n    }\r\n  };\r\n\r\n  //mind Dai\r\n  const mintDai = async () => {\r\n    try {\r\n      var signer = library.getSigner(account);\r\n      let daiContract = new ethers.Contract(addresses.dai, abis.dai, signer);\r\n      console.log({\r\n        daiContract,\r\n      });\r\n      console.log(1);\r\n      let daiAmount = 1000;\r\n      const amount = ethers.utils.parseUnits(daiAmount.toString(), 18);\r\n      console.log(2);\r\n      var mintTransactionPromise = daiContract.mint(amount);\r\n      console.log(3);\r\n      const tx = await mintTransactionPromise;\r\n      console.log(tx);\r\n      await library.waitForTransaction(tx.hash);\r\n      console.log(4);\r\n      setProcessingInfo(\"1000 Dai minted successfully!\");\r\n      console.log(\"Transaction Completed\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Section>\r\n      <Body>\r\n        <Item align=\"center\">\r\n          <H3 color=\" #657795\" margin=\"0px 0px\" textTransform=\"none\" weight=\"500\" size=\"15px\">\r\n          Please upload a PNG, JPG. Crop the image to resize to 128px.  \r\n          </H3>\r\n        </Item>\r\n        \r\n          <Space className=\"\">\r\n            <div>\r\n              <div\r\n                onDragOver={(e) => handleDragOver(e)}\r\n                onDrop={(e) => handleOnDrop(e)}\r\n                className=\"bordered\"\r\n              >\r\n                <div className=\"inner\">\r\n                  {view ? (\r\n                    <div className=\"crop-div\">\r\n                      {croppedImage ? (\r\n                        <div>\r\n                          <img\r\n                            alt=\"Cropped Img\"\r\n                            src={croppedImage}\r\n                            className=\"croppedImage\"\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <ImageClipper\r\n                          className=\"cropper\"\r\n                          imageSrc={imageSrc}\r\n                          onImageCropped={(croppedImage) =>\r\n                            setCroppedImage(croppedImage)\r\n                          }\r\n                          ref={childRef}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  ) : (\r\n                    // <ImageIcon />\r\n                    <BsCloudUpload size={100} color='#8C99B0' style={{marginTop:'30px'}} />\r\n                  )}\r\n\r\n                 \r\n\r\n                  <Item display=\"flex\" direction=\"row\" align=\"center\">\r\n                  <p className=\"text-below\">\r\n                    Drag and Drop or \r\n                  </p>\r\n                  <div className=\"text-div\">\r\n                    <label htmlFor=\"file-upload\" className=\"labeled\">\r\n                      <div>Browse to Choose</div>\r\n                      <input\r\n                        id=\"file-upload\"\r\n                        accept=\"image/*\"\r\n                        name=\"file-upload\"\r\n                        hidden\r\n                        onChange={(e) => handleFile(e.target, \"target\")}\r\n                        type=\"file\"\r\n                        className=\"sr-only\"\r\n                        readOnly\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                  </Item>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Space>\r\n\r\n          {/* {!UtilityHelper.isMainnet(chainId) ? (\r\n            <Item align=\"flex-end\">\r\n              <Minter\r\n                onClick={() => {\r\n                  mintDai();\r\n                }}\r\n              >\r\n                <Pool>\r\n                  <br></br>\r\n                  <PoolShare>Get Free DAI for Channel</PoolShare>\r\n                </Pool>\r\n              </Minter>\r\n            </Item>\r\n          ) : (\r\n            <></>\r\n          )} */}\r\n\r\n        {logoInfo?.length > 0 && (<Item \r\n            margin=\"30px 0px 30px 0px\"\r\n            flex=\"1\"\r\n            padding=\"10px 5px\"\r\n            radius=\"10px\"\r\n            bg=\"#F5F5FA\">\r\n              <div style={{color:'#CF1C84'}}>{logoInfo}</div>\r\n            </Item>)}\r\n\r\n        {view && (!croppedImage ? (\r\n        <Item width=\"12.2em\" self=\"stretch\" align=\"stretch\" margin=\"100px auto 50px auto\">\r\n          <Button\r\n            bg=\"#e20880\"\r\n            color=\"#fff\"\r\n            flex=\"1\"\r\n            radius=\"15px\"\r\n            padding=\"20px 10px\"\r\n            onClick={() => {\r\n              childRef.current.showCroppedImage();\r\n            }}\r\n          >\r\n            <Span\r\n              color=\"#fff\"\r\n              weight=\"600\"\r\n              textTransform=\"none\"\r\n              line=\"22px\"\r\n              size=\"16px\"\r\n            >\r\n              Crop Image\r\n            </Span>\r\n          </Button>\r\n        </Item>): (\r\n\r\n              <FormSubmision\r\n              flex=\"1\"\r\n              direction=\"column\"\r\n              margin=\"0px\"\r\n              justify=\"center\"\r\n              size=\"1.1rem\"\r\n              onSubmit={handleCreateChannel}\r\n              >\r\n              <Item\r\n                width=\"12.2em\" self=\"stretch\" align=\"stretch\" margin=\"100px auto 50px auto\"\r\n              >\r\n                <Button\r\n                  bg=\"#e20880\"\r\n                  color=\"#fff\"\r\n                  flex=\"1\"\r\n                  radius=\"15px\"\r\n                  padding=\"20px 10px\"\r\n                  disabled={processing == 1 ? true : false}\r\n                >\r\n                  {processing == 1 && (\r\n                    <Oval\r\n                      color=\"#fff\"\r\n                      height={24}\r\n                      width={24}\r\n                    />\r\n                  )}\r\n                  {processing != 1 && (\r\n                    <Input\r\n                      cursor=\"hand\"\r\n                      textTransform=\"none\"\r\n                      color=\"#fff\"\r\n                      weight=\"600\"\r\n                      textTransform=\"none\"\r\n                      line=\"22px\"\r\n                      size=\"16px\"\r\n                      type=\"submit\"\r\n                      value=\"Create Channel\"\r\n                    />\r\n                  )}\r\n                </Button>\r\n              </Item>\r\n              </FormSubmision> \r\n        ))}\r\n\r\n\r\n      </Body>\r\n    </Section>\r\n  );\r\n};\r\n\r\nconst Minter = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst ChannelMetaBox = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n  font-size: 15px;\r\n`;\r\n\r\nconst Pool = styled.div`\r\n  margin: 0px 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst PoolShare = styled(ChannelMetaBox)`\r\n  background: #e20880;\r\n  // background: #674c9f;\r\n`;\r\n\r\nconst ButtonSpace = styled.div`\r\n  width: 40%;\r\n  align-items: center;\r\n  margin: 1rem auto;\r\n`;\r\n\r\nconst Body = styled.div`\r\n  margin: 50px auto 0px auto;\r\n  width: 55%; \r\n  @media (max-width: 600px) {\r\n    width: 95%; \r\n  }\r\n  @media (max-width: 1224px) {\r\n    width: 75%; \r\n  }\r\n`\r\n\r\nconst Space = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 2rem;\r\n  font-weight: 500;\r\n  font-size: 15px;\r\n  line-height: 150%;\r\n  .bordered {\r\n    display: flex;\r\n    // height: 250px;\r\n    justify-content: center;\r\n    border: 1px dashed #8C99B0;\r\n    align-items: flex-end;\r\n    border-radius: 12px;\r\n    padding: 6px;\r\n    background-color: #F5F5FA;\r\n    margin-top: 10px;\r\n    .inner {\r\n      margin-top: 0.25rem;\r\n      text-align: center;\r\n      padding: 20px 10px 10px 10px;\r\n      width: 100%;\r\n      .crop-div {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: row;\r\n        @media (max-width: 768px) {\r\n          flex-direction: column;\r\n        }\r\n        justify-content: space-evenly;\r\n        align-items: center;\r\n        margin-right: auto;\r\n        div {\r\n          .croppedImage {\r\n            border-radius: 12px;\r\n            @media (max-width: 768px) {\r\n              margin-top: 1rem;\r\n            }\r\n          }\r\n        }\r\n        .cropper {\r\n          width: 250px;\r\n          height: 250px;\r\n        }\r\n      }\r\n      .check-space {\r\n        .croppedImage {\r\n          width: auto;\r\n          height: auto;\r\n          border-radius: 5px;\r\n        }\r\n        .button-space {\r\n          margin-top: 1rem;\r\n          width: 100%;\r\n          display: flex;\r\n          justify-content: center;\r\n        }\r\n      }\r\n      .crop-button {\r\n        display: flex;\r\n        justify-content: center;\r\n        width: 100%;\r\n        @media (max-width: 768px) {\r\n          margin-top: 1rem;\r\n        }\r\n      }\r\n      .svg {\r\n        margin: 0px auto;\r\n        height: 3rem;\r\n        width: 3rem;\r\n        color: #ccc;\r\n      }\r\n      .text-div {\r\n        display: flex;\r\n        font-size: 1rem;\r\n        line-height: 1rem;\r\n        color: #ccc;\r\n        justify-content: center;\r\n        .labeled {\r\n          position: relative;\r\n          cursor: pointer;\r\n          border-radius: 4px;\r\n          color: #CF1C84;\r\n          &:hover {\r\n            text-decoration: underline;\r\n          }\r\n        }\r\n      }\r\n      .text-below {\r\n        font-size: 1rem;\r\n        line-height: 1rem;\r\n        color: #657795;\r\n        margin-right: 0.3rem;\r\n      }\r\n    }\r\n  }\r\n  .image-error {\r\n    font-size: 1rem;\r\n    line-height: 1rem;\r\n    color: red;\r\n    margin-top: 0.5rem;\r\n  }\r\n  .image {\r\n    margin-top: 1rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n    .item {\r\n      width: 4rem;\r\n      height: auto;\r\n      border-radius: 4px;\r\n    }\r\n    .image-border {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-end;\r\n      margin-left: 2rem;\r\n      .text {\r\n        font-size: 1rem;\r\n        line-height: 1rem;\r\n        color: #ccc;\r\n        margin-top: 1rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default UploadLogo;"],"sourceRoot":""}